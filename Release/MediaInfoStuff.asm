; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\Users\beeanyew\Documents\GitHub\OBS\DShowAudioPlugin\MediaInfoStuff.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?Num@?$List@W4VideoOutputType@@@@QBEIXZ		; List<enum VideoOutputType>::Num
PUBLIC	?Add@?$List@W4VideoOutputType@@@@QAEIABW4VideoOutputType@@@Z ; List<enum VideoOutputType>::Add
PUBLIC	?SafeAdd@?$List@W4VideoOutputType@@@@QAEIABW4VideoOutputType@@@Z ; List<enum VideoOutputType>::SafeAdd
PUBLIC	?Clear@?$List@W4VideoOutputType@@@@QAEXXZ	; List<enum VideoOutputType>::Clear
PUBLIC	??A?$List@UMediaOutputInfo@@@@QBEAAUMediaOutputInfo@@I@Z ; List<MediaOutputInfo>::operator[]
EXTRN	__imp__CoTaskMemAlloc@4:PROC
EXTRN	_MEDIASUBTYPE_IYUV:BYTE
EXTRN	_MEDIASUBTYPE_YVU9:BYTE
EXTRN	_MEDIASUBTYPE_Y41P:BYTE
EXTRN	_MEDIASUBTYPE_YUY2:BYTE
EXTRN	_MEDIASUBTYPE_YVYU:BYTE
EXTRN	_MEDIASUBTYPE_UYVY:BYTE
EXTRN	_MEDIASUBTYPE_MJPG:BYTE
EXTRN	_MEDIASUBTYPE_H264:BYTE
EXTRN	_MEDIASUBTYPE_RGB24:BYTE
EXTRN	_MEDIASUBTYPE_RGB32:BYTE
EXTRN	_MEDIASUBTYPE_ARGB32:BYTE
EXTRN	_MEDIASUBTYPE_YV12:BYTE
EXTRN	_MEDIASUBTYPE_dvsd:BYTE
EXTRN	_MEDIASUBTYPE_dvhd:BYTE
EXTRN	_MEDIASUBTYPE_dvsl:BYTE
EXTRN	_MEDIASUBTYPE_MPEG2_VIDEO:BYTE
$SG-12813 DB	00H
$SG-12814 DB	00H, 00H
_MEDIASUBTYPE_I420 DD 030323449H
	DW	00H
	DW	010H
	DB	080H
	DB	00H
	DB	00H
	DB	0aaH
	DB	00H
	DB	038H
	DB	09bH
	DB	071H
$SG-12832 DB	'M', 00H, 'J', 00H, 'P', 00H, 'G', 00H, 00H, 00H
	ORG $+2
$SG-12831 DB	'd', 00H, 'v', 00H, 'h', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG-12830 DB	'd', 00H, 'v', 00H, 's', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG-12829 DB	'd', 00H, 'v', 00H, 's', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG-12828 DB	'H', 00H, '2', 00H, '6', 00H, '4', 00H, 00H, 00H
	ORG $+2
$SG-12827 DB	'M', 00H, 'P', 00H, 'E', 00H, 'G', 00H, '2', 00H, '_', 00H
	DB	'V', 00H, 'I', 00H, 'D', 00H, 'E', 00H, 'O', 00H, 00H, 00H
$SG-12826 DB	'H', 00H, 'D', 00H, 'Y', 00H, 'C', 00H, 00H, 00H
	ORG $+2
$SG-12825 DB	'U', 00H, 'Y', 00H, 'V', 00H, 'Y', 00H, 00H, 00H
	ORG $+2
$SG-12824 DB	'Y', 00H, 'U', 00H, 'Y', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG-12823 DB	'Y', 00H, 'V', 00H, 'Y', 00H, 'U', 00H, 00H, 00H
	ORG $+2
$SG-12822 DB	'Y', 00H, 'V', 00H, 'U', 00H, '9', 00H, 00H, 00H
	ORG $+2
$SG-12821 DB	'Y', 00H, '4', 00H, '1', 00H, 'P', 00H, 00H, 00H
	ORG $+2
$SG-12820 DB	'Y', 00H, 'V', 00H, '1', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG-12819 DB	'I', 00H, '4', 00H, '2', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG-12818 DB	'R', 00H, 'G', 00H, 'B', 00H, 'A', 00H, '3', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG-12817 DB	'R', 00H, 'G', 00H, 'B', 00H, '3', 00H, '2', 00H, 00H, 00H
$SG-12816 DB	'R', 00H, 'G', 00H, 'B', 00H, '2', 00H, '4', 00H, 00H, 00H
$SG-12815 DB	'N', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+2
_inputPriority DD 01H
	DD	06H
	DD	07H
	DD	07H
	DD	0cH
	DD	0cH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0dH
	DD	0dH
	DD	0dH
	DD	0dH
	DD	05H
	DD	0ffffffffH
	DD	0aH
	DD	0aH
	DD	0aH
	DD	09H
PUBLIC	?CopyMediaType@@YGJPAU_AMMediaType@@PBU1@@Z	; CopyMediaType
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\mediainfostuff.cpp
;	COMDAT ?CopyMediaType@@YGJPAU_AMMediaType@@PBU1@@Z
_TEXT	SEGMENT
_pmtSource$ = 8						; size = 4
?CopyMediaType@@YGJPAU_AMMediaType@@PBU1@@Z PROC	; CopyMediaType, COMDAT
; _pmtTarget$ = eax

; 36   : {

	push	ebp
	mov	ebp, esp

; 37   :     *pmtTarget = *pmtSource;

	mov	edx, DWORD PTR _pmtSource$[ebp]
	push	ebx
	push	esi
	mov	ebx, eax
	push	edi
	mov	ecx, 18					; 00000012H
	mov	esi, edx
	mov	edi, ebx
	rep movsd

; 38   : 
; 39   :     if(!pmtSource || !pmtTarget) return S_FALSE;
; 40   : 
; 41   :     if(pmtSource->cbFormat && pmtSource->pbFormat)

	mov	eax, DWORD PTR [edx+64]
	test	eax, eax
	je	SHORT $LN2@CopyMediaT
	cmp	DWORD PTR [edx+68], 0
	je	SHORT $LN2@CopyMediaT

; 42   :     {
; 43   :         pmtTarget->pbFormat = (PBYTE)CoTaskMemAlloc(pmtSource->cbFormat);

	push	eax
	call	DWORD PTR __imp__CoTaskMemAlloc@4
	mov	DWORD PTR [ebx+68], eax

; 44   :         if(pmtTarget->pbFormat == NULL)

	test	eax, eax
	jne	SHORT $LN3@CopyMediaT

; 45   :         {
; 46   :             pmtTarget->cbFormat = 0;

	pop	edi
	mov	DWORD PTR [ebx+64], eax
	pop	esi

; 47   :             return E_OUTOFMEMORY;

	mov	eax, -2147024882			; 8007000eH
	pop	ebx

; 57   : }

	pop	ebp
	ret	4
$LN3@CopyMediaT:

; 48   :         }
; 49   :         else
; 50   :             mcpy(pmtTarget->pbFormat, pmtSource->pbFormat, pmtTarget->cbFormat);

	mov	ecx, DWORD PTR [ebx+64]
	mov	edx, DWORD PTR _pmtSource$[ebp]
	push	ecx
	mov	ecx, DWORD PTR [edx+68]
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@CopyMediaT:

; 51   :     }
; 52   : 
; 53   :     if(pmtTarget->pUnk != NULL)

	mov	ebx, DWORD PTR [ebx+60]
	test	ebx, ebx
	je	SHORT $LN1@CopyMediaT

; 54   :         pmtTarget->pUnk->AddRef();

	mov	edx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edx+4]
	push	ebx
	call	eax
$LN1@CopyMediaT:

; 55   : 
; 56   :     return S_OK;

	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx

; 57   : }

	pop	ebp
	ret	4
?CopyMediaType@@YGJPAU_AMMediaType@@PBU1@@Z ENDP	; CopyMediaType
_TEXT	ENDS
PUBLIC	?FreeMediaType@@YGXAAU_AMMediaType@@@Z		; FreeMediaType
; Function compile flags: /Ogtp
;	COMDAT ?FreeMediaType@@YGXAAU_AMMediaType@@@Z
_TEXT	SEGMENT
?FreeMediaType@@YGXAAU_AMMediaType@@@Z PROC		; FreeMediaType, COMDAT
; _mt$ = esi

; 25   :     if(mt.cbFormat != 0)

	cmp	DWORD PTR [esi+64], 0
	je	SHORT $LN2@FreeMediaT

; 26   :     {
; 27   :         CoTaskMemFree((LPVOID)mt.pbFormat);

	mov	eax, DWORD PTR [esi+68]
	push	eax
	call	DWORD PTR __imp__CoTaskMemFree@4

; 28   :         mt.cbFormat = 0;

	mov	DWORD PTR [esi+64], 0

; 29   :         mt.pbFormat = NULL;

	mov	DWORD PTR [esi+68], 0
$LN2@FreeMediaT:

; 30   :     }
; 31   : 
; 32   :     SafeRelease(mt.pUnk);

	mov	eax, DWORD PTR [esi+60]
	test	eax, eax
	je	SHORT $LN1@FreeMediaT
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
	mov	DWORD PTR [esi+60], 0
$LN1@FreeMediaT:

; 33   : }

	ret	0
?FreeMediaType@@YGXAAU_AMMediaType@@@Z ENDP		; FreeMediaType
END
