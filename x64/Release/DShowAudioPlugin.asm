; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?nop@@YAXXZ					; nop
PUBLIC	?GetVideoBMIHeader@@YAPEAUtagBITMAPINFOHEADER@@PEBU_AMMediaType@@@Z ; GetVideoBMIHeader
PUBLIC	?SetSize@?$List@UMediaOutputInfo@@@@QEAAHI@Z	; List<MediaOutputInfo>::SetSize
PUBLIC	?CreateNew@?$List@UMediaOutputInfo@@@@QEAAPEAUMediaOutputInfo@@XZ ; List<MediaOutputInfo>::CreateNew
PUBLIC	?GetSceneImageSource@APIInterface@@QEAAPEAVImageSource@@PEB_W@Z ; APIInterface::GetSceneImageSource
PUBLIC	??0ColorSelectionData@@QEAA@XZ			; ColorSelectionData::ColorSelectionData
PUBLIC	?Clear@ColorSelectionData@@QEAAXXZ		; ColorSelectionData::Clear
PUBLIC	??1ColorSelectionData@@QEAA@XZ			; ColorSelectionData::~ColorSelectionData
PUBLIC	IsolationAwareCreateActCtxW
PUBLIC	IsolationAwareActivateActCtx
PUBLIC	IsolationAwareFindActCtxSectionStringW
PUBLIC	IsolationAwareQueryActCtxW
PUBLIC	WinbaseIsolationAwarePrivatetRgzlnPgpgk
PUBLIC	IsolationAwarePrivatenPgViNgRzlnPgpgk
PUBLIC	IsolationAwareDeactivateActCtx
PUBLIC	IsolationAwareDialogBoxParamW
PUBLIC	??0?$List@UtagSIZE@@@@QEAA@XZ			; List<tagSIZE>::List<tagSIZE>
PUBLIC	??0ConfigDialogData@@QEAA@XZ			; ConfigDialogData::ConfigDialogData
PUBLIC	?Clear@?$List@UtagSIZE@@@@QEAAXXZ		; List<tagSIZE>::Clear
PUBLIC	??1?$List@UtagSIZE@@@@QEAA@XZ			; List<tagSIZE>::~List<tagSIZE>
PUBLIC	?ClearOutputList@ConfigDialogData@@QEAAXXZ	; ConfigDialogData::ClearOutputList
PUBLIC	??1ConfigDialogData@@QEAA@XZ			; ConfigDialogData::~ConfigDialogData
PUBLIC	??_GConfigDialogData@@QEAAPEAXI@Z		; ConfigDialogData::`scalar deleting destructor'
PUBLIC	??0?$List@PEAUSampleData@@@@QEAA@XZ		; List<SampleData * __ptr64>::List<SampleData * __ptr64>
PUBLIC	??0DeviceSource@@QEAA@XZ			; DeviceSource::DeviceSource
PUBLIC	??_GLocaleStringLookup@@QEAAPEAXI@Z		; LocaleStringLookup::`scalar deleting destructor'
PUBLIC	??_C@_1BK@BFMCNHEO@?$AAC?$AAo?$AAm?$AAc?$AAt?$AAl?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@ ; `string'
PUBLIC	?debugString@?4??IsolationAwarePrivatenPgViNgRzlnPgpgk@@9@4QBDB ; `IsolationAwarePrivatenPgViNgRzlnPgpgk'::`5'::debugString
PUBLIC	?pluginLocale@@3PEAVLocaleStringLookup@@EA	; pluginLocale
PUBLIC	?hinstMain@@3PEAUHINSTANCE__@@EA		; hinstMain
PUBLIC	?lpExceptionNames@@3PAPEB_WA			; lpExceptionNames
PUBLIC	?lpExceptionGUIDs@@3PAPEB_WA			; lpExceptionGUIDs
EXTRN	__imp_?GetElementByID@XElement@@QEBAPEAV1@K@Z:PROC
EXTRN	__imp_?NumElements@XElement@@QEAAKPEB_W@Z:PROC
EXTRN	__imp_?tstring_base_to_uint@@YAIPEB_WPEAPEA_WH@Z:PROC
EXTRN	__imp_?GetTokenList@String@@QEBAXAEAVStringList@@_WH@Z:PROC
EXTRN	__imp_?Left@String@@QEAA?AV1@I@Z:PROC
EXTRN	__imp_?Mid@String@@QEAA?AV1@II@Z:PROC
EXTRN	__imp_?Right@String@@QEAA?AV1@I@Z:PROC
EXTRN	__imp_?Length@String@@QEBAIXZ:PROC
EXTRN	__imp_??8String@@QEBAHPEB_W@Z:PROC
EXTRN	__imp_VariantInit:PROC
EXTRN	IID_IKsPropertySet:BYTE
EXTRN	AMPROPSETID_Pin:BYTE
EXTRN	FORMAT_VideoInfo2:BYTE
EXTRN	FORMAT_VideoInfo:BYTE
EXTRN	__imp_??0String@@QEAA@PEBD@Z:PROC
EXTRN	__imp_??6String@@QEAAAEAV0@AEBV0@@Z:PROC
EXTRN	__imp_?Num@?$List@VString@@@@QEBAIXZ:PROC
EXTRN	__imp_?Add@StringList@@QEAAIAEBVString@@@Z:PROC
EXTRN	__imp_?Add@StringList@@QEAAIPEB_W@Z:PROC
EXTRN	__imp_?FindNextValueIndexI@StringList@@QEBAIAEBVString@@I@Z:PROC
EXTRN	__imp_?UIntString@@YA?AVString@@IH@Z:PROC
EXTRN	IID_IPropertyBag:BYTE
EXTRN	IID_ICreateDevEnum:BYTE
EXTRN	CLSID_SystemDeviceEnum:BYTE
EXTRN	__imp_?ValidIntString@@YAHPEB_W@Z:PROC
EXTRN	__imp_?NumTokens@String@@QEBAH_W@Z:PROC
EXTRN	__imp_?GetToken@String@@QEBA?AV1@H_W@Z:PROC
EXTRN	__imp_?ToInt@String@@QEBAHH@Z:PROC
EXTRN	__imp_?GetEditText@@YA?AVString@@PEAUHWND__@@@Z:PROC
EXTRN	IID_ISpecifyPropertyPages:BYTE
EXTRN	__imp_OleCreatePropertyFrame:PROC
EXTRN	atexit:PROC
EXTRN	__imp_SendMessageW:PROC
EXTRN	__imp_EndDialog:PROC
EXTRN	__imp_GetDlgItem:PROC
EXTRN	__imp_EnableWindow:PROC
EXTRN	__imp_IsWindowEnabled:PROC
EXTRN	__imp_MessageBoxW:PROC
EXTRN	__imp_GetWindowLongPtrW:PROC
EXTRN	__imp_SetWindowLongPtrW:PROC
EXTRN	__imp_??0String@@QEAA@AEBV0@@Z:PROC
EXTRN	__imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z:PROC
EXTRN	__imp_?Clear@StringList@@QEAAXXZ:PROC
EXTRN	__imp_?SetString@XElement@@QEAAXPEB_W0@Z:PROC
EXTRN	__imp_?SetFloat@XElement@@QEAAXPEB_WM@Z:PROC
EXTRN	__imp_?LocalizeWindow@@YAXPEAUHWND__@@PEAVLocaleStringLookup@@@Z:PROC
EXTRN	__imp_?GetCBText@@YA?AVString@@PEAUHWND__@@I@Z:PROC
EXTRN	__imp_?GetSource@SceneItem@@QEBAPEAVImageSource@@XZ:PROC
EXTRN	__imp_?GetSceneItem@Scene@@QEBAPEAVSceneItem@@PEB_W@Z:PROC
EXTRN	__imp_?SetVolumeControlValue@@YAMPEAUHWND__@@M@Z:PROC
EXTRN	__imp_?GetVolumeControlValue@@YAMPEAUHWND__@@@Z:PROC
EXTRN	AM_KSCATEGORY_CROSSBAR:BYTE
EXTRN	__imp_DeleteDC:PROC
EXTRN	__imp_DeleteObject:PROC
EXTRN	__imp_ReleaseDC:PROC
EXTRN	__imp_OutputDebugStringA:PROC
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_SetLastError:PROC
EXTRN	__imp_GetModuleFileNameW:PROC
EXTRN	__imp_GetModuleHandleExW:PROC
EXTRN	__imp_LoadLibraryW:PROC
EXTRN	__imp_CreateActCtxW:PROC
EXTRN	__imp_ActivateActCtx:PROC
EXTRN	__imp_FindActCtxSectionStringW:PROC
EXTRN	__imp_QueryActCtxW:PROC
EXTRN	__imp_DeactivateActCtx:PROC
EXTRN	__imp_DialogBoxParamW:PROC
EXTRN	__imp_?GetName@XBaseItem@@QEBAPEB_WXZ:PROC
EXTRN	__imp_?SetInt@XElement@@QEAAXPEB_WH@Z:PROC
EXTRN	__imp_?GetElement@XElement@@QEBAPEAV1@PEB_W@Z:PROC
EXTRN	__imp_?CreateElement@XElement@@QEAAPEAV1@PEB_W@Z:PROC
EXTRN	__imp_?GetParent@XElement@@QEBAPEAV1@XZ:PROC
EXTRN	__imp_??0StringList@@QEAA@XZ:PROC
EXTRN	__imp_??1StringList@@QEAA@XZ:PROC
EXTRN	__imp_??0Vect4@@QEAA@XZ:PROC
EXTRN	__imp_??0ImageSource@@QEAA@XZ:PROC
EXTRN	__imp_??6String@@QEAAAEAV0@PEB_W@Z:PROC
EXTRN	__imp_??0LocaleStringLookup@@QEAA@XZ:PROC
EXTRN	__imp_?LoadStringFile@LocaleStringLookup@@QEAAHPEB_W_N@Z:PROC
EXTRN	__imp_?InitVolumeControl@@YAXPEAUHINSTANCE__@@@Z:PROC
EXTRN	__imp_?InitVolumeMeter@@YAXPEAUHINSTANCE__@@@Z:PROC
EXTRN	__imp_??1LocaleStringLookup@@QEAA@XZ:PROC
EXTRN	__imp_?LookupString@LocaleStringLookup@@QEAAPEB_WPEB_W@Z:PROC
?pluginLocale@@3PEAVLocaleStringLookup@@EA DQ 01H DUP (?) ; pluginLocale
?hinstMain@@3PEAUHINSTANCE__@@EA DQ 01H DUP (?)		; hinstMain
;	COMDAT ?bSelectingColor@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4_NA
_BSS	SEGMENT
?bSelectingColor@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4_NA DB 01H DUP (?) ; `ConfigureDialogProc'::`2'::bSelectingColor
_BSS	ENDS
;	COMDAT ?bMouseDown@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4_NA
_BSS	SEGMENT
?bMouseDown@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4_NA DB 01H DUP (?) ; `ConfigureDialogProc'::`2'::bMouseDown
?lpExceptionNames@@3PAPEB_WA DQ FLAT:$SG-10650		; lpExceptionNames
?lpExceptionGUIDs@@3PAPEB_WA DQ FLAT:$SG-10651		; lpExceptionGUIDs
;	COMDAT ?debugString@?4??IsolationAwarePrivatenPgViNgRzlnPgpgk@@9@4QBDB
CONST	SEGMENT
?debugString@?4??IsolationAwarePrivatenPgViNgRzlnPgpgk@@9@4QBDB DB 'Isola'
	DB	'tionAware function called after IsolationAwareCleanup', 0aH, 00H ; `IsolationAwarePrivatenPgViNgRzlnPgpgk'::`5'::debugString
CONST	ENDS
;	COMDAT ??_C@_1BK@BFMCNHEO@?$AAC?$AAo?$AAm?$AAc?$AAt?$AAl?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@BFMCNHEO@?$AAC?$AAo?$AAm?$AAc?$AAt?$AAl?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@ DB 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'c', 00H, 't', 00H, 'l', 00H, '3', 00H
	DB	'2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H ; `string'
$SG-10619 DB	00H
	ORG $+2
$SG-10620 DB	00H, 00H
	ORG $+2
$SG-10662 DB	')', 00H, 00H, 00H
	ORG $+6
$SG-10638 DB	'M', 00H, 'J', 00H, 'P', 00H, 'G', 00H, 00H, 00H
	ORG $+6
$SG-10637 DB	'd', 00H, 'v', 00H, 'h', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG-10636 DB	'd', 00H, 'v', 00H, 's', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG-10635 DB	'd', 00H, 'v', 00H, 's', 00H, 'l', 00H, 00H, 00H
	ORG $+6
$SG-10634 DB	'H', 00H, '2', 00H, '6', 00H, '4', 00H, 00H, 00H
	ORG $+6
$SG-10633 DB	'M', 00H, 'P', 00H, 'E', 00H, 'G', 00H, '2', 00H, '_', 00H
	DB	'V', 00H, 'I', 00H, 'D', 00H, 'E', 00H, 'O', 00H, 00H, 00H
$SG-10632 DB	'H', 00H, 'D', 00H, 'Y', 00H, 'C', 00H, 00H, 00H
	ORG $+6
$SG-10631 DB	'U', 00H, 'Y', 00H, 'V', 00H, 'Y', 00H, 00H, 00H
	ORG $+6
$SG-10630 DB	'Y', 00H, 'U', 00H, 'Y', 00H, '2', 00H, 00H, 00H
	ORG $+6
$SG-10629 DB	'Y', 00H, 'V', 00H, 'Y', 00H, 'U', 00H, 00H, 00H
	ORG $+6
$SG-10628 DB	'Y', 00H, 'V', 00H, 'U', 00H, '9', 00H, 00H, 00H
	ORG $+6
$SG-10627 DB	'Y', 00H, '4', 00H, '1', 00H, 'P', 00H, 00H, 00H
	ORG $+6
$SG-10626 DB	'Y', 00H, 'V', 00H, '1', 00H, '2', 00H, 00H, 00H
	ORG $+6
$SG-10625 DB	'I', 00H, '4', 00H, '2', 00H, '0', 00H, 00H, 00H
	ORG $+6
$SG-10624 DB	'R', 00H, 'G', 00H, 'B', 00H, 'A', 00H, '3', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG-10623 DB	'R', 00H, 'G', 00H, 'B', 00H, '3', 00H, '2', 00H, 00H, 00H
	ORG $+4
$SG-10622 DB	'R', 00H, 'G', 00H, 'B', 00H, '2', 00H, '4', 00H, 00H, 00H
	ORG $+4
$SG-10621 DB	'N', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG-10639 DB	'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'S', 00H
	DB	'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'D', 00H, 'S'
	DB	00H, 'h', 00H, 'o', 00H, 'w', 00H, 'C', 00H, 'a', 00H, 'p', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 00H, 00H
$SG-10640 DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
	ORG $+4
$SG-10641 DB	'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H
	ORG $+6
$SG-10642 DB	'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG-10643 DB	'a', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG-10644 DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG-10645 DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	's', 00H, 00H, 00H
$SG-10646 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG-10656 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG-10647 DB	'G', 00H, 'e', 00H, 't', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'i', 00H, 'c', 00H, 'e', 00H, 'B', 00H, 'y', 00H, 'N', 00H, 'a'
	DB	00H, 'm', 00H, 'e', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'o', 00H
	DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'I'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'c', 00H
	DB	'e', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 't'
	DB	00H, 'h', 00H, 'e', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'v', 00H
	DB	'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, ' ', 00H, 'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 'd', 00H, ',', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 's'
	DB	00H, 'u', 00H, 'l', 00H, 't', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'%', 00H, '0', 00H, '8', 00H, 'l', 00H, 'X', 00H, 00H, 00H
	ORG $+6
$SG-10648 DB	'G', 00H, 'e', 00H, 't', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'i', 00H, 'c', 00H, 'e', 00H, 'B', 00H, 'y', 00H, 'N', 00H, 'a'
	DB	00H, 'm', 00H, 'e', 00H, ':', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'E', 00H, 'n', 00H, 'u'
	DB	00H, 'm', 00H, '-', 00H, '>', 00H, 'C', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, 'E', 00H, 'n', 00H, 'u', 00H, 'm', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'f'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ',', 00H
	DB	' ', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'u', 00H, 'l', 00H, 't'
	DB	00H, ' ', 00H, '=', 00H, ' ', 00H, '%', 00H, '0', 00H, '8', 00H
	DB	'l', 00H, 'X', 00H, 00H, 00H
$SG-10661 DB	' ', 00H, '(', 00H, 00H, 00H
	ORG $+6
$SG-10649 DB	'G', 00H, 'e', 00H, 't', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'i', 00H, 'c', 00H, 'e', 00H, 'B', 00H, 'y', 00H, 'N', 00H, 'a'
	DB	00H, 'm', 00H, 'e', 00H, ':', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'f'
	DB	00H, 'o', 00H, '-', 00H, '>', 00H, 'B', 00H, 'i', 00H, 'n', 00H
	DB	'd', 00H, 'T', 00H, 'o', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 'f', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'd', 00H, ',', 00H, ' ', 00H, 'r', 00H, 'e'
	DB	00H, 's', 00H, 'u', 00H, 'l', 00H, 't', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, '%', 00H, '0', 00H, '8', 00H, 'l', 00H, 'X', 00H, 00H
	DB	00H
	ORG $+6
$SG-10650 DB	'E', 00H, 'l', 00H, 'g', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	' ', 00H, 'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 'C'
	DB	00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e', 00H
	DB	' ', 00H, 'H', 00H, 'D', 00H, 00H, 00H
	ORG $+2
$SG-10657 DB	'CLSID_AudioInputDeviceCategory', 00H
	ORG $+1
$SG-10660 DB	'Unknown device category', 00H
$SG-10651 DB	'{', 00H, '3', 00H, '9', 00H, 'F', 00H, '5', 00H, '0', 00H
	DB	'F', 00H, '4', 00H, 'C', 00H, '-', 00H, '9', 00H, '9', 00H, 'E'
	DB	00H, '1', 00H, '-', 00H, '4', 00H, '6', 00H, '4', 00H, 'a', 00H
	DB	'-', 00H, 'B', 00H, '6', 00H, 'F', 00H, '9', 00H, '-', 00H, 'D'
	DB	00H, '6', 00H, '0', 00H, '5', 00H, 'B', 00H, '4', 00H, 'F', 00H
	DB	'B', 00H, '5', 00H, '9', 00H, '1', 00H, '8', 00H, '}', 00H, 00H
	DB	00H
	ORG $+2
$SG-10652 DB	'{', 00H, '%', 00H, '0', 00H, '8', 00H, 'X', 00H, '-', 00H
	DB	'%', 00H, '0', 00H, '4', 00H, 'h', 00H, 'X', 00H, '-', 00H, '%'
	DB	00H, '0', 00H, '4', 00H, 'h', 00H, 'X', 00H, '-', 00H, '%', 00H
	DB	'0', 00H, '2', 00H, 'X', 00H, '%', 00H, '0', 00H, '2', 00H, 'X'
	DB	00H, '-', 00H, '%', 00H, '0', 00H, '2', 00H, 'X', 00H, '%', 00H
	DB	'0', 00H, '2', 00H, 'X', 00H, '%', 00H, '0', 00H, '2', 00H, 'X'
	DB	00H, '%', 00H, '0', 00H, '2', 00H, 'X', 00H, '%', 00H, '0', 00H
	DB	'2', 00H, 'X', 00H, '%', 00H, '0', 00H, '2', 00H, 'X', 00H, '}'
	DB	00H, 00H, 00H
	ORG $+6
$SG-10653 DB	'F', 00H, 'i', 00H, 'l', 00H, 'l', 00H, 'O', 00H, 'u', 00H
	DB	't', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's', 00H, ':', 00H
	DB	' ', 00H, 'C', 00H, 'o', 00H, 'C', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 's', 00H, 't', 00H
	DB	'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' '
	DB	00H, 'e', 00H, 'n', 00H, 'u', 00H, 'm', 00H, ' ', 00H, 'f', 00H
	DB	'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ',', 00H, ' '
	DB	00H, 'r', 00H, 'e', 00H, 's', 00H, 'u', 00H, 'l', 00H, 't', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, '%', 00H, '0', 00H, '8', 00H, 'l'
	DB	00H, 'X', 00H, 00H, 00H
$SG-10654 DB	'F', 00H, 'i', 00H, 'l', 00H, 'l', 00H, 'O', 00H, 'u', 00H
	DB	't', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 's', 00H, ':', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e'
	DB	00H, 'E', 00H, 'n', 00H, 'u', 00H, 'm', 00H, '-', 00H, '>', 00H
	DB	'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, 'C'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 'E', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 'd', 00H, ',', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 's'
	DB	00H, 'u', 00H, 'l', 00H, 't', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'%', 00H, '0', 00H, '8', 00H, 'l', 00H, 'X', 00H, 00H, 00H
	ORG $+6
$SG-10655 DB	'F', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 'd', 00H
	DB	'l', 00H, 'y', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+6
$SG-10658 DB	'CLSID_VideoInputDeviceCategory', 00H
	ORG $+1
$SG-10659 DB	'CLSID_AudioRendererCategory', 00H
	ORG $+4
$SG-10663 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG-10664 DB	'F', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 'd', 00H
	DB	'l', 00H, 'y', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+6
$SG-10665 DB	'd', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'H', 00H
	DB	'a', 00H, 's', 00H, 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, 00H, 00H
	ORG $+4
$SG-10666 DB	'a', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG-10667 DB	's', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'O', 00H
	DB	'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'T', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, 00H, 00H
$SG-10668 DB	'v', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG-10669 DB	's', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'T', 00H
	DB	'i', 00H, 'm', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'f', 00H, 's'
	DB	00H, 'e', 00H, 't', 00H, 00H, 00H
$SG-10670 DB	'v', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG-10671 DB	't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'O', 00H, 'f', 00H
	DB	'f', 00H, 's', 00H, 'e', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG-10672 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG-10673 DB	'F', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 'd', 00H
	DB	'l', 00H, 'y', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+6
$SG-10674 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'S', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, '.', 00H, 'G', 00H, 'l', 00H, 'o', 00H
	DB	'b', 00H, 'a', 00H, 'l', 00H, 'E', 00H, 'x', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG-10675 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'S', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, '.', 00H, 'E', 00H, 'x', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 's', 00H, 'S', 00H, 'o', 00H, 'm', 00H, 'e'
	DB	00H, 'w', 00H, 'h', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 00H, 00H
$SG-10676 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'S', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, '.', 00H, 'E', 00H, 'x', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 's', 00H, 'I', 00H, 'n', 00H, 'S', 00H, 'c'
	DB	00H, 'e', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG-10677 DB	'a', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG-10678 DB	'a', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'N', 00H, 'a'
	DB	00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG-10679 DB	'a', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'I', 00H, 'D'
	DB	00H, 00H, 00H
	ORG $+4
$SG-10680 DB	'a', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'C', 00H, 'L'
	DB	00H, 'S', 00H, 'I', 00H, 'D', 00H, 00H, 00H
	ORG $+6
$SG-10681 DB	'd', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'H', 00H
	DB	'a', 00H, 's', 00H, 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, 00H, 00H
	ORG $+4
$SG-10682 DB	's', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'O', 00H
	DB	'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'T', 00H, 'y'
	DB	00H, 'p', 00H, 'e', 00H, 00H, 00H
$SG-10683 DB	's', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'T', 00H
	DB	'i', 00H, 'm', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'f', 00H, 's'
	DB	00H, 'e', 00H, 't', 00H, 00H, 00H
$SG-10684 DB	'v', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG-10685 DB	's', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'T', 00H
	DB	'i', 00H, 'm', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'f', 00H, 's'
	DB	00H, 'e', 00H, 't', 00H, 00H, 00H
$SG-10686 DB	't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'O', 00H, 'f', 00H
	DB	'f', 00H, 's', 00H, 'e', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG-10687 DB	'v', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG-10688 DB	'v', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H
	ORG $+2
$SG-10693 DB	'r', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'l', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'W', 00H, 'i', 00H, 'd'
	DB	00H, 't', 00H, 'h', 00H, 00H, 00H
$SG-10694 DB	'c', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG-10689 DB	'C', 00H, 'o', 00H, 'n', 00H, 'f', 00H, 'i', 00H, 'g', 00H
	DB	'u', 00H, 'r', 00H, 'e', 00H, 'D', 00H, 'S', 00H, 'h', 00H, 'o'
	DB	00H, 'w', 00H, 'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H
	DB	'e', 00H, ':', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L'
	DB	00H, ' ', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'm', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG-10690 DB	'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H
	ORG $+6
$SG-10691 DB	'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, 00H, 00H
	ORG $+6
$SG-10692 DB	'g', 00H, 'l', 00H, 'o', 00H, 'b', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG-10695 DB	'r', 00H, 'e', 00H, 's', 00H, 'o', 00H, 'l', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'H', 00H, 'e', 00H, 'i'
	DB	00H, 'g', 00H, 'h', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG-10696 DB	'c', 00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG-10700 DB	'e', 00H, 'n', 00H, 00H, 00H
	ORG $+6
$SG-10697 DB	'p', 00H, 'l', 00H, 'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	's', 00H, '/', 00H, 'D', 00H, 'S', 00H, 'h', 00H, 'o', 00H, 'w'
	DB	00H, 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'P', 00H
	DB	'l', 00H, 'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H, '/', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'e', 00H, '/', 00H
	DB	'e', 00H, 'n', 00H, '.', 00H, 't', 00H, 'x', 00H, 't', 00H, 00H
	DB	00H
	ORG $+2
$SG-10698 DB	'p', 00H, 'l', 00H, 'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	's', 00H, '/', 00H, 'D', 00H, 'S', 00H, 'h', 00H, 'o', 00H, 'w'
	DB	00H, 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'P', 00H
	DB	'l', 00H, 'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H, '/', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'e', 00H, '/', 00H
	DB	'e', 00H, 'n', 00H, '.', 00H, 't', 00H, 'x', 00H, 't', 00H, 00H
	DB	00H
	ORG $+2
$SG-10699 DB	'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'n', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H
	DB	'l', 00H, 'e', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H, '''', 00H, 00H
	DB	00H
	ORG $+2
$SG-10701 DB	'p', 00H, 'l', 00H, 'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	's', 00H, '/', 00H, 'D', 00H, 'S', 00H, 'h', 00H, 'o', 00H, 'w'
	DB	00H, 'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'P', 00H
	DB	'l', 00H, 'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H, '/', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'e', 00H, '/', 00H
	DB	00H, 00H
	ORG $+6
$SG-10702 DB	'.', 00H, 't', 00H, 'x', 00H, 't', 00H, 00H, 00H
	ORG $+6
$SG-10704 DB	'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 'N', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG-10703 DB	'C', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'n', 00H, ' ', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H
	DB	'l', 00H, 'e', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, ' ', 00H, '''', 00H, '%', 00H, 's', 00H, '''', 00H, 00H
	DB	00H
	ORG $+2
$SG-10705 DB	'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, 'S', 00H
	DB	'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 'D', 00H, 'S'
	DB	00H, 'h', 00H, 'o', 00H, 'w', 00H, 'C', 00H, 'a', 00H, 'p', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, 00H, 00H
$SG-10706 DB	'P', 00H, 'l', 00H, 'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	'.', 00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG-10707 DB	'P', 00H, 'l', 00H, 'u', 00H, 'g', 00H, 'i', 00H, 'n', 00H
	DB	'.', 00H, 'D', 00H, 'e', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\template.h
;	COMDAT ??0?$List@UtagSIZE@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$List@UtagSIZE@@@@QEAA@XZ PROC			; List<tagSIZE>::List<tagSIZE>, COMDAT

; 30   :     inline List() : array(NULL), num(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	DWORD PTR [rcx+8], eax
	mov	rax, rcx
	ret	0
??0?$List@UtagSIZE@@@@QEAA@XZ ENDP			; List<tagSIZE>::List<tagSIZE>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0?$List@PEAUSampleData@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$List@PEAUSampleData@@@@QEAA@XZ PROC		; List<SampleData * __ptr64>::List<SampleData * __ptr64>, COMDAT

; 30   :     inline List() : array(NULL), num(0) {}

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	DWORD PTR [rcx+8], eax
	mov	rax, rcx
	ret	0
??0?$List@PEAUSampleData@@@@QEAA@XZ ENDP		; List<SampleData * __ptr64>::List<SampleData * __ptr64>
_TEXT	ENDS
PUBLIC	DllMain
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
;	COMDAT DllMain
_TEXT	SEGMENT
hInst$ = 8
dwReason$ = 16
lpBla$ = 24
DllMain	PROC						; COMDAT

; 1324 :     if(dwReason == DLL_PROCESS_ATTACH)

	mov	rax, QWORD PTR ?hinstMain@@3PEAUHINSTANCE__@@EA ; hinstMain
	cmp	edx, 1
	cmove	rax, rcx
	mov	QWORD PTR ?hinstMain@@3PEAUHINSTANCE__@@EA, rax ; hinstMain

; 1325 :         hinstMain = hInst;
; 1326 : 
; 1327 :     return TRUE;

	mov	eax, 1

; 1328 : }

	ret	0
DllMain	ENDP
_TEXT	ENDS
PUBLIC	GetPluginDescription
; Function compile flags: /Ogtpy
;	COMDAT GetPluginDescription
_TEXT	SEGMENT
GetPluginDescription PROC				; COMDAT

; 1318 :     return PluginStr("Plugin.Description");

	mov	rcx, QWORD PTR ?pluginLocale@@3PEAVLocaleStringLookup@@EA ; pluginLocale
	lea	rdx, OFFSET FLAT:$SG-10707

; 1319 : }

	rex_jmp	QWORD PTR __imp_?LookupString@LocaleStringLookup@@QEAAPEB_WPEB_W@Z
GetPluginDescription ENDP
_TEXT	ENDS
PUBLIC	GetPluginName
; Function compile flags: /Ogtpy
;	COMDAT GetPluginName
_TEXT	SEGMENT
GetPluginName PROC					; COMDAT

; 1313 :     return PluginStr("Plugin.Name");

	mov	rcx, QWORD PTR ?pluginLocale@@3PEAVLocaleStringLookup@@EA ; pluginLocale
	lea	rdx, OFFSET FLAT:$SG-10706

; 1314 : }

	rex_jmp	QWORD PTR __imp_?LookupString@LocaleStringLookup@@QEAAPEB_WPEB_W@Z
GetPluginName ENDP
_TEXT	ENDS
;	COMDAT ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A
_BSS	SEGMENT
?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A DB 020H DUP (?) ; `ConfigureDialogProc'::`2'::colorData
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@ColorSelectionData@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+105
	DD	imagerel $unwind$?Clear@ColorSelectionData@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@ColorSelectionData@@QEAAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?Clear@ColorSelectionData@@QEAAXXZ
_TEXT	SEGMENT
?Clear@ColorSelectionData@@QEAAXXZ PROC			; ColorSelectionData::Clear, COMDAT

; 824  :     {

$LN7:
	sub	rsp, 40					; 00000028H

; 825  :         if(hdcDesktop)

	mov	rdx, QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A
	test	rdx, rdx
	je	SHORT $LN3@Clear

; 826  :         {
; 827  :             ReleaseDC(NULL, hdcDesktop);

	xor	ecx, ecx
	call	QWORD PTR __imp_ReleaseDC

; 828  :             hdcDesktop = NULL;

	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A, 0
$LN3@Clear:

; 829  :         }
; 830  : 
; 831  :         if(hdcDestination)

	mov	rcx, QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+8
	test	rcx, rcx
	je	SHORT $LN2@Clear

; 832  :         {
; 833  :             DeleteDC(hdcDestination);

	call	QWORD PTR __imp_DeleteDC

; 834  :             hdcDestination = NULL;

	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+8, 0
$LN2@Clear:

; 835  :         }
; 836  : 
; 837  :         if(hBitmap)

	mov	rcx, QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+16
	test	rcx, rcx
	je	SHORT $LN6@Clear

; 838  :         {
; 839  :             DeleteObject(hBitmap);

	call	QWORD PTR __imp_DeleteObject

; 840  :             hBitmap = NULL;

	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+16, 0
$LN6@Clear:

; 841  :         }
; 842  : 
; 843  :         bValid = false;

	mov	BYTE PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+24, 0

; 844  :     }

	add	rsp, 40					; 00000028H
	ret	0
?Clear@ColorSelectionData@@QEAAXXZ ENDP			; ColorSelectionData::Clear
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ColorSelectionData@@QEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+105
	DD	imagerel $unwind$??1ColorSelectionData@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ColorSelectionData@@QEAA@XZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??1ColorSelectionData@@QEAA@XZ
_TEXT	SEGMENT
??1ColorSelectionData@@QEAA@XZ PROC			; ColorSelectionData::~ColorSelectionData, COMDAT

; 801  :     inline ~ColorSelectionData() {Clear();}

$LN9:
	sub	rsp, 40					; 00000028H
	mov	rdx, QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A
	test	rdx, rdx
	je	SHORT $LN5@ColorSelec
	xor	ecx, ecx
	call	QWORD PTR __imp_ReleaseDC
	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A, 0
$LN5@ColorSelec:
	mov	rcx, QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+8
	test	rcx, rcx
	je	SHORT $LN4@ColorSelec
	call	QWORD PTR __imp_DeleteDC
	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+8, 0
$LN4@ColorSelec:
	mov	rcx, QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+16
	test	rcx, rcx
	je	SHORT $LN8@ColorSelec
	call	QWORD PTR __imp_DeleteObject
	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+16, 0
$LN8@ColorSelec:
	mov	BYTE PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+24, 0
	add	rsp, 40					; 00000028H
	ret	0
??1ColorSelectionData@@QEAA@XZ ENDP			; ColorSelectionData::~ColorSelectionData
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0ColorSelectionData@@QEAA@XZ
_TEXT	SEGMENT
??0ColorSelectionData@@QEAA@XZ PROC			; ColorSelectionData::ColorSelectionData, COMDAT

; 800  :     inline ColorSelectionData() : hdcDesktop(NULL), hdcDestination(NULL), hBitmap(NULL), bValid(false) {}

	xor	eax, eax
	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A, rax
	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+8, rax
	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+16, rax
	mov	BYTE PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+24, al
	lea	rax, OFFSET FLAT:?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A
	ret	0
??0ColorSelectionData@@QEAA@XZ ENDP			; ColorSelectionData::ColorSelectionData
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z	; GetExceptionDevice
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\xstring.h
pdata	SEGMENT
$pdata$?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z DD imagerel $LN58
	DD	imagerel $LN58+1045
	DD	imagerel $unwind$?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z DD imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+58
	DD	00H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+64
	DD	0ffffffffH
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+69
	DD	00H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+94
	DD	01H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+108
	DD	00H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+129
	DD	02H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+158
	DD	00H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+169
	DD	0ffffffffH
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+174
	DD	02H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+429
	DD	03H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+447
	DD	02H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+492
	DD	04H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+510
	DD	02H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+555
	DD	05H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+573
	DD	02H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+622
	DD	06H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+640
	DD	02H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+689
	DD	07H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+707
	DD	02H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+756
	DD	08H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+774
	DD	02H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+823
	DD	09H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+841
	DD	02H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+886
	DD	0aH
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+904
	DD	02H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+954
	DD	00H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+965
	DD	0ffffffffH
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+980
	DD	00H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+991
	DD	0ffffffffH
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+993
	DD	00H
	DD	imagerel ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z+1004
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z DD 052c19H
	DD	015341eH
	DD	012010eH
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z
	DD	082H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z DD 019930522H
	DD	0bH
	DD	imagerel $stateUnwindMap$?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z
	DD	00H
	DD	00H
	DD	020H
	DD	imagerel $ip2state$?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z
	DD	068H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA
	DD	00H
	DD	imagerel ?dtor$2@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA
	DD	02H
	DD	imagerel ?dtor$4@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA
	DD	02H
	DD	imagerel ?dtor$5@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA
	DD	02H
	DD	imagerel ?dtor$6@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA
	DD	02H
	DD	imagerel ?dtor$7@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA
	DD	02H
	DD	imagerel ?dtor$8@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA
	DD	02H
	DD	imagerel ?dtor$9@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA
	DD	02H
	DD	imagerel ?dtor$10@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
xdata	ENDS
;	COMDAT ?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z
_TEXT	SEGMENT
GUIDData$ = 48
$T109229 = 64
$T109228 = 64
$T109227 = 64
$T109226 = 64
$T109225 = 64
$T109224 = 64
$T109223 = 64
$T109222 = 64
$T109219 = 64
strGUID$ = 80
filter$ = 96
$T109385 = 104
targetGUID$ = 112
__$ArrayPad$ = 128
lpGUID$ = 160
?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z PROC	; GetExceptionDevice, COMDAT

; 110  : {

$LN58:
	push	rbp
	lea	rbp, QWORD PTR [rsp-87]
	sub	rsp, 144				; 00000090H
	mov	QWORD PTR $T109385[rbp-57], -2
	mov	QWORD PTR [rsp+168], rbx
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-57], rax

; 111  :     String strGUID = lpGUID;

	mov	rdx, rcx
	lea	rcx, QWORD PTR strGUID$[rbp-57]
	call	QWORD PTR __imp_??0String@@QEAA@PEB_W@Z
	npad	1

; 112  :     if(strGUID.Length() != 38)

	cmp	DWORD PTR strGUID$[rbp-49], 38		; 00000026H
	je	SHORT $LN5@GetExcepti

; 113  :         return NULL;

	jmp	$LN57@GetExcepti
$LN5@GetExcepti:

; 114  : 
; 115  :     strGUID = strGUID.Mid(1, strGUID.Length()-1);

	mov	r9d, 37					; 00000025H
	lea	r8d, QWORD PTR [r9-36]
	lea	rdx, QWORD PTR $T109219[rbp-57]
	lea	rcx, QWORD PTR strGUID$[rbp-57]
	call	QWORD PTR __imp_?Mid@String@@QEAA?AV1@II@Z
	npad	1
	mov	rdx, rax
	lea	rcx, QWORD PTR strGUID$[rbp-57]
	call	QWORD PTR __imp_??4String@@QEAAAEAV0@AEBV0@@Z
	npad	1
	lea	rcx, QWORD PTR $T109219[rbp-57]
	call	QWORD PTR __imp_??1String@@QEAA@XZ

; 116  : 
; 117  :     StringList GUIDData;

	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??0StringList@@QEAA@XZ
	npad	1

; 118  :     strGUID.GetTokenList(GUIDData, '-', FALSE);

	mov	r8d, 45					; 0000002dH
	xor	r9d, r9d
	lea	rdx, QWORD PTR GUIDData$[rbp-57]
	lea	rcx, QWORD PTR strGUID$[rbp-57]
	call	QWORD PTR __imp_?GetTokenList@String@@QEBAXAEAVStringList@@_WH@Z

; 119  : 
; 120  :     if (GUIDData.Num() != 5)

	cmp	DWORD PTR GUIDData$[rbp-49], 5
	je	SHORT $LN4@GetExcepti

; 121  :         return NULL;

	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??1StringList@@QEAA@XZ
	npad	1
	jmp	$LN57@GetExcepti
$LN4@GetExcepti:

; 122  : 
; 123  :     if (GUIDData[0].Length() != 8  ||
; 124  :         GUIDData[1].Length() != 4  ||
; 125  :         GUIDData[2].Length() != 4  ||
; 126  :         GUIDData[3].Length() != 4  ||
; 127  :         GUIDData[4].Length() != 12 )

	xor	edx, edx
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	cmp	DWORD PTR [rax+8], 8
	jne	$LN2@GetExcepti
	mov	edx, 1
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	cmp	DWORD PTR [rax+8], 4
	jne	$LN2@GetExcepti
	mov	edx, 2
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	cmp	DWORD PTR [rax+8], 4
	jne	$LN2@GetExcepti
	mov	edx, 3
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	cmp	DWORD PTR [rax+8], 4
	jne	$LN2@GetExcepti
	mov	edx, 4
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	cmp	DWORD PTR [rax+8], 12
	jne	$LN2@GetExcepti

; 130  :     }
; 131  : 
; 132  :     GUID targetGUID;
; 133  :     targetGUID.Data1 = (UINT)tstring_base_to_uint(GUIDData[0], NULL, 16);

	xor	edx, edx
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+16]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?tstring_base_to_uint@@YAIPEB_WPEAPEA_WH@Z
	mov	DWORD PTR targetGUID$[rbp-57], eax

; 134  :     targetGUID.Data2 = (WORD)tstring_base_to_uint(GUIDData[1], NULL, 16);

	mov	edx, 1
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+16]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?tstring_base_to_uint@@YAIPEB_WPEAPEA_WH@Z
	mov	WORD PTR targetGUID$[rbp-53], ax

; 135  :     targetGUID.Data3 = (WORD)tstring_base_to_uint(GUIDData[2], NULL, 16);

	mov	edx, 2
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+16]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?tstring_base_to_uint@@YAIPEB_WPEAPEA_WH@Z
	mov	WORD PTR targetGUID$[rbp-51], ax

; 136  :     targetGUID.Data4[0] = (BYTE)tstring_base_to_uint(GUIDData[3].Left(2), NULL, 16);

	mov	edx, 3
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rcx, rax
	mov	r8d, 2
	lea	rdx, QWORD PTR $T109222[rbp-57]
	call	QWORD PTR __imp_?Left@String@@QEAA?AV1@I@Z
	npad	1
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+16]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?tstring_base_to_uint@@YAIPEB_WPEAPEA_WH@Z
	mov	BYTE PTR targetGUID$[rbp-49], al
	lea	rcx, QWORD PTR $T109222[rbp-57]
	call	QWORD PTR __imp_??1String@@QEAA@XZ

; 137  :     targetGUID.Data4[1] = (BYTE)tstring_base_to_uint(GUIDData[3].Right(2), NULL, 16);

	mov	edx, 3
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rcx, rax
	mov	r8d, 2
	lea	rdx, QWORD PTR $T109223[rbp-57]
	call	QWORD PTR __imp_?Right@String@@QEAA?AV1@I@Z
	npad	1
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+16]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?tstring_base_to_uint@@YAIPEB_WPEAPEA_WH@Z
	mov	BYTE PTR targetGUID$[rbp-48], al
	lea	rcx, QWORD PTR $T109223[rbp-57]
	call	QWORD PTR __imp_??1String@@QEAA@XZ

; 138  :     targetGUID.Data4[2] = (BYTE)tstring_base_to_uint(GUIDData[4].Left(2), NULL, 16);

	mov	edx, 4
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rcx, rax
	mov	r8d, 2
	lea	rdx, QWORD PTR $T109224[rbp-57]
	call	QWORD PTR __imp_?Left@String@@QEAA?AV1@I@Z
	npad	1
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+16]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?tstring_base_to_uint@@YAIPEB_WPEAPEA_WH@Z
	mov	BYTE PTR targetGUID$[rbp-47], al
	lea	rcx, QWORD PTR $T109224[rbp-57]
	call	QWORD PTR __imp_??1String@@QEAA@XZ

; 139  :     targetGUID.Data4[3] = (BYTE)tstring_base_to_uint(GUIDData[4].Mid(2, 4), NULL, 16);

	mov	edx, 4
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rcx, rax
	mov	r9d, 4
	lea	r8d, QWORD PTR [r9-2]
	lea	rdx, QWORD PTR $T109225[rbp-57]
	call	QWORD PTR __imp_?Mid@String@@QEAA?AV1@II@Z
	npad	1
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+16]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?tstring_base_to_uint@@YAIPEB_WPEAPEA_WH@Z
	mov	BYTE PTR targetGUID$[rbp-46], al
	lea	rcx, QWORD PTR $T109225[rbp-57]
	call	QWORD PTR __imp_??1String@@QEAA@XZ

; 140  :     targetGUID.Data4[4] = (BYTE)tstring_base_to_uint(GUIDData[4].Mid(4, 6), NULL, 16);

	mov	edx, 4
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rcx, rax
	mov	r9d, 6
	lea	r8d, QWORD PTR [r9-2]
	lea	rdx, QWORD PTR $T109226[rbp-57]
	call	QWORD PTR __imp_?Mid@String@@QEAA?AV1@II@Z
	npad	1
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+16]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?tstring_base_to_uint@@YAIPEB_WPEAPEA_WH@Z
	mov	BYTE PTR targetGUID$[rbp-45], al
	lea	rcx, QWORD PTR $T109226[rbp-57]
	call	QWORD PTR __imp_??1String@@QEAA@XZ

; 141  :     targetGUID.Data4[5] = (BYTE)tstring_base_to_uint(GUIDData[4].Mid(6, 8), NULL, 16);

	mov	edx, 4
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rcx, rax
	mov	r9d, 8
	lea	r8d, QWORD PTR [r9-2]
	lea	rdx, QWORD PTR $T109227[rbp-57]
	call	QWORD PTR __imp_?Mid@String@@QEAA?AV1@II@Z
	npad	1
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+16]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?tstring_base_to_uint@@YAIPEB_WPEAPEA_WH@Z
	mov	BYTE PTR targetGUID$[rbp-44], al
	lea	rcx, QWORD PTR $T109227[rbp-57]
	call	QWORD PTR __imp_??1String@@QEAA@XZ

; 142  :     targetGUID.Data4[6] = (BYTE)tstring_base_to_uint(GUIDData[4].Mid(8, 10), NULL, 16);

	mov	edx, 4
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rcx, rax
	mov	r9d, 10
	lea	r8d, QWORD PTR [r9-2]
	lea	rdx, QWORD PTR $T109228[rbp-57]
	call	QWORD PTR __imp_?Mid@String@@QEAA?AV1@II@Z
	npad	1
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+16]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?tstring_base_to_uint@@YAIPEB_WPEAPEA_WH@Z
	mov	BYTE PTR targetGUID$[rbp-43], al
	lea	rcx, QWORD PTR $T109228[rbp-57]
	call	QWORD PTR __imp_??1String@@QEAA@XZ

; 143  :     targetGUID.Data4[7] = (BYTE)tstring_base_to_uint(GUIDData[4].Right(2), NULL, 16);

	mov	edx, 4
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rcx, rax
	mov	r8d, 2
	lea	rdx, QWORD PTR $T109229[rbp-57]
	call	QWORD PTR __imp_?Right@String@@QEAA?AV1@I@Z
	npad	1
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+16]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?tstring_base_to_uint@@YAIPEB_WPEAPEA_WH@Z
	mov	BYTE PTR targetGUID$[rbp-42], al
	lea	rcx, QWORD PTR $T109229[rbp-57]
	call	QWORD PTR __imp_??1String@@QEAA@XZ

; 144  : 
; 145  :     IBaseFilter *filter;
; 146  :     if(SUCCEEDED(CoCreateInstance(targetGUID, NULL, CLSCTX_INPROC_SERVER, IID_IBaseFilter, (void**)&filter)))

	lea	r11, QWORD PTR filter$[rbp-57]
	mov	QWORD PTR [rsp+32], r11
	lea	r9, OFFSET FLAT:IID_IBaseFilter
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+1]
	lea	rcx, QWORD PTR targetGUID$[rbp-57]
	call	QWORD PTR __imp_CoCreateInstance
	test	eax, eax
	js	SHORT $LN1@GetExcepti

; 147  :         return filter;

	mov	rbx, QWORD PTR filter$[rbp-57]
	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??1StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR strGUID$[rbp-57]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
	mov	rax, rbx
	jmp	SHORT $LN6@GetExcepti
$LN1@GetExcepti:

; 148  : 
; 149  :     return NULL;

	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??1StringList@@QEAA@XZ
	npad	1
	jmp	SHORT $LN57@GetExcepti
$LN2@GetExcepti:

; 128  :     {
; 129  :         return NULL;

	lea	rcx, QWORD PTR GUIDData$[rbp-57]
	call	QWORD PTR __imp_??1StringList@@QEAA@XZ
	npad	1
$LN57@GetExcepti:
	lea	rcx, QWORD PTR strGUID$[rbp-57]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
	xor	eax, eax
$LN6@GetExcepti:

; 150  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-57]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+168]
	add	rsp, 144				; 00000090H
	pop	rbp
	ret	0
?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z ENDP	; GetExceptionDevice
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
GUIDData$ = 48
$T109229 = 64
$T109228 = 64
$T109227 = 64
$T109226 = 64
$T109225 = 64
$T109224 = 64
$T109223 = 64
$T109222 = 64
$T109219 = 64
strGUID$ = 80
filter$ = 96
$T109385 = 104
targetGUID$ = 112
__$ArrayPad$ = 128
lpGUID$ = 160
?dtor$0@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA PROC ; `GetExceptionDevice'::`1'::dtor$0
	lea	rcx, QWORD PTR strGUID$[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$0@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA ENDP ; `GetExceptionDevice'::`1'::dtor$0
; Function compile flags: /Ogtpy
GUIDData$ = 48
$T109229 = 64
$T109228 = 64
$T109227 = 64
$T109226 = 64
$T109225 = 64
$T109224 = 64
$T109223 = 64
$T109222 = 64
$T109219 = 64
strGUID$ = 80
filter$ = 96
$T109385 = 104
targetGUID$ = 112
__$ArrayPad$ = 128
lpGUID$ = 160
?dtor$1@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA PROC ; `GetExceptionDevice'::`1'::dtor$1
	lea	rcx, QWORD PTR $T109219[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$1@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA ENDP ; `GetExceptionDevice'::`1'::dtor$1
; Function compile flags: /Ogtpy
GUIDData$ = 48
$T109229 = 64
$T109228 = 64
$T109227 = 64
$T109226 = 64
$T109225 = 64
$T109224 = 64
$T109223 = 64
$T109222 = 64
$T109219 = 64
strGUID$ = 80
filter$ = 96
$T109385 = 104
targetGUID$ = 112
__$ArrayPad$ = 128
lpGUID$ = 160
?dtor$2@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA PROC ; `GetExceptionDevice'::`1'::dtor$2
	lea	rcx, QWORD PTR GUIDData$[rdx]
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$2@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA ENDP ; `GetExceptionDevice'::`1'::dtor$2
; Function compile flags: /Ogtpy
GUIDData$ = 48
$T109229 = 64
$T109228 = 64
$T109227 = 64
$T109226 = 64
$T109225 = 64
$T109224 = 64
$T109223 = 64
$T109222 = 64
$T109219 = 64
strGUID$ = 80
filter$ = 96
$T109385 = 104
targetGUID$ = 112
__$ArrayPad$ = 128
lpGUID$ = 160
?dtor$3@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA PROC ; `GetExceptionDevice'::`1'::dtor$3
	lea	rcx, QWORD PTR $T109222[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$3@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA ENDP ; `GetExceptionDevice'::`1'::dtor$3
; Function compile flags: /Ogtpy
GUIDData$ = 48
$T109229 = 64
$T109228 = 64
$T109227 = 64
$T109226 = 64
$T109225 = 64
$T109224 = 64
$T109223 = 64
$T109222 = 64
$T109219 = 64
strGUID$ = 80
filter$ = 96
$T109385 = 104
targetGUID$ = 112
__$ArrayPad$ = 128
lpGUID$ = 160
?dtor$4@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA PROC ; `GetExceptionDevice'::`1'::dtor$4
	lea	rcx, QWORD PTR $T109223[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$4@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA ENDP ; `GetExceptionDevice'::`1'::dtor$4
; Function compile flags: /Ogtpy
GUIDData$ = 48
$T109229 = 64
$T109228 = 64
$T109227 = 64
$T109226 = 64
$T109225 = 64
$T109224 = 64
$T109223 = 64
$T109222 = 64
$T109219 = 64
strGUID$ = 80
filter$ = 96
$T109385 = 104
targetGUID$ = 112
__$ArrayPad$ = 128
lpGUID$ = 160
?dtor$5@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA PROC ; `GetExceptionDevice'::`1'::dtor$5
	lea	rcx, QWORD PTR $T109224[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$5@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA ENDP ; `GetExceptionDevice'::`1'::dtor$5
; Function compile flags: /Ogtpy
GUIDData$ = 48
$T109229 = 64
$T109228 = 64
$T109227 = 64
$T109226 = 64
$T109225 = 64
$T109224 = 64
$T109223 = 64
$T109222 = 64
$T109219 = 64
strGUID$ = 80
filter$ = 96
$T109385 = 104
targetGUID$ = 112
__$ArrayPad$ = 128
lpGUID$ = 160
?dtor$6@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA PROC ; `GetExceptionDevice'::`1'::dtor$6
	lea	rcx, QWORD PTR $T109225[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$6@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA ENDP ; `GetExceptionDevice'::`1'::dtor$6
; Function compile flags: /Ogtpy
GUIDData$ = 48
$T109229 = 64
$T109228 = 64
$T109227 = 64
$T109226 = 64
$T109225 = 64
$T109224 = 64
$T109223 = 64
$T109222 = 64
$T109219 = 64
strGUID$ = 80
filter$ = 96
$T109385 = 104
targetGUID$ = 112
__$ArrayPad$ = 128
lpGUID$ = 160
?dtor$7@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA PROC ; `GetExceptionDevice'::`1'::dtor$7
	lea	rcx, QWORD PTR $T109226[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$7@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA ENDP ; `GetExceptionDevice'::`1'::dtor$7
; Function compile flags: /Ogtpy
GUIDData$ = 48
$T109229 = 64
$T109228 = 64
$T109227 = 64
$T109226 = 64
$T109225 = 64
$T109224 = 64
$T109223 = 64
$T109222 = 64
$T109219 = 64
strGUID$ = 80
filter$ = 96
$T109385 = 104
targetGUID$ = 112
__$ArrayPad$ = 128
lpGUID$ = 160
?dtor$8@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA PROC ; `GetExceptionDevice'::`1'::dtor$8
	lea	rcx, QWORD PTR $T109227[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$8@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA ENDP ; `GetExceptionDevice'::`1'::dtor$8
; Function compile flags: /Ogtpy
GUIDData$ = 48
$T109229 = 64
$T109228 = 64
$T109227 = 64
$T109226 = 64
$T109225 = 64
$T109224 = 64
$T109223 = 64
$T109222 = 64
$T109219 = 64
strGUID$ = 80
filter$ = 96
$T109385 = 104
targetGUID$ = 112
__$ArrayPad$ = 128
lpGUID$ = 160
?dtor$9@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA PROC ; `GetExceptionDevice'::`1'::dtor$9
	lea	rcx, QWORD PTR $T109228[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$9@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA ENDP ; `GetExceptionDevice'::`1'::dtor$9
; Function compile flags: /Ogtpy
GUIDData$ = 48
$T109229 = 64
$T109228 = 64
$T109227 = 64
$T109226 = 64
$T109225 = 64
$T109224 = 64
$T109223 = 64
$T109222 = 64
$T109219 = 64
strGUID$ = 80
filter$ = 96
$T109385 = 104
targetGUID$ = 112
__$ArrayPad$ = 128
lpGUID$ = 160
?dtor$10@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA PROC ; `GetExceptionDevice'::`1'::dtor$10
	lea	rcx, QWORD PTR $T109229[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$10@?0??GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z@4HA ENDP ; `GetExceptionDevice'::`1'::dtor$10
text$x	ENDS
PUBLIC	?SourceListHasDevice@@YA_NPEB_WPEAVXElement@@@Z	; SourceListHasDevice
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SourceListHasDevice@@YA_NPEB_WPEAVXElement@@@Z DD imagerel $LN14
	DD	imagerel $LN14+249
	DD	imagerel $unwind$?SourceListHasDevice@@YA_NPEB_WPEAVXElement@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SourceListHasDevice@@YA_NPEB_WPEAVXElement@@@Z DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0c016321aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?SourceListHasDevice@@YA_NPEB_WPEAVXElement@@@Z
_TEXT	SEGMENT
lpDevice$ = 48
sourceList$ = 56
?SourceListHasDevice@@YA_NPEB_WPEAVXElement@@@Z PROC	; SourceListHasDevice, COMDAT

; 39   : {

$LN14:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	sub	rsp, 32					; 00000020H
	mov	r12, rdx
	mov	rbp, rcx

; 40   :     UINT numSources = sourceList->NumElements();

	xor	edx, edx
	mov	rcx, r12
	call	QWORD PTR __imp_?NumElements@XElement@@QEAAKPEB_W@Z

; 41   :     for(UINT i=0; i<numSources; i++)

	xor	ebx, ebx
	mov	edi, eax
	test	eax, eax
	je	$LN13@SourceList
	npad	9
$LL6@SourceList:

; 42   :     {
; 43   :         XElement *sourceElement = sourceList->GetElementByID(i);

	mov	edx, ebx
	mov	rcx, r12
	call	QWORD PTR __imp_?GetElementByID@XElement@@QEBAPEAV1@K@Z

; 44   :         if(scmpi(sourceElement->GetString(TEXT("class")), DSHOW_CLASSNAME) == 0)

	lea	rdx, OFFSET FLAT:$SG-10640
	xor	r8d, r8d
	mov	rcx, rax
	mov	rsi, rax
	call	QWORD PTR __imp_?GetString@XElement@@QEBAPEB_WPEB_WPEA_W@Z
	lea	rdx, OFFSET FLAT:$SG-10639
	mov	rcx, rax
	call	QWORD PTR __imp_?scmpi@@YAHPEB_W0@Z
	test	eax, eax
	jne	SHORT $LN5@SourceList

; 45   :         {
; 46   :             XElement *data = sourceElement->GetElement(TEXT("data"));

	lea	rdx, OFFSET FLAT:$SG-10641
	mov	rcx, rsi
	call	QWORD PTR __imp_?GetElement@XElement@@QEBAPEAV1@PEB_W@Z

; 47   :             if(scmpi(data->GetString(TEXT("device")), lpDevice) == 0)

	lea	rdx, OFFSET FLAT:$SG-10642
	xor	r8d, r8d
	mov	rcx, rax
	mov	rsi, rax
	call	QWORD PTR __imp_?GetString@XElement@@QEBAPEB_WPEB_WPEA_W@Z
	mov	rdx, rbp
	mov	rcx, rax
	call	QWORD PTR __imp_?scmpi@@YAHPEB_W0@Z
	test	eax, eax
	je	SHORT $LN10@SourceList

; 49   :             if(scmpi(data->GetString(TEXT("audioDevice")), lpDevice) == 0)

	lea	rdx, OFFSET FLAT:$SG-10643
	xor	r8d, r8d
	mov	rcx, rsi
	call	QWORD PTR __imp_?GetString@XElement@@QEBAPEB_WPEB_WPEA_W@Z
	mov	rdx, rbp
	mov	rcx, rax
	call	QWORD PTR __imp_?scmpi@@YAHPEB_W0@Z
	test	eax, eax
	je	SHORT $LN10@SourceList
$LN5@SourceList:

; 41   :     for(UINT i=0; i<numSources; i++)

	inc	ebx
	cmp	ebx, edi
	jb	$LL6@SourceList
$LN13@SourceList:

; 50   :                 return true;
; 51   :         }
; 52   :     }
; 53   : 
; 54   :     return false;

	xor	al, al
$LN7@SourceList:

; 55   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r12
	ret	0
$LN10@SourceList:

; 48   :                 return true;

	mov	al, 1
	jmp	SHORT $LN7@SourceList
?SourceListHasDevice@@YA_NPEB_WPEAVXElement@@@Z ENDP	; SourceListHasDevice
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\scene.h
pdata	SEGMENT
$pdata$?GetSceneImageSource@APIInterface@@QEAAPEAVImageSource@@PEB_W@Z DD imagerel $LN10
	DD	imagerel $LN10+54
	DD	imagerel $unwind$?GetSceneImageSource@APIInterface@@QEAAPEAVImageSource@@PEB_W@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSceneImageSource@APIInterface@@QEAAPEAVImageSource@@PEB_W@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\obsapi\apiinterface.h
xdata	ENDS
;	COMDAT ?GetSceneImageSource@APIInterface@@QEAAPEAVImageSource@@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
lpImageSource$ = 56
?GetSceneImageSource@APIInterface@@QEAAPEAVImageSource@@PEB_W@Z PROC ; APIInterface::GetSceneImageSource, COMDAT

; 99   :     {

$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H

; 100  :         Scene *scene = GetScene();

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rdx
	call	QWORD PTR [rax+80]

; 101  :         if(scene)

	test	rax, rax
	je	SHORT $LN1@GetSceneIm

; 102  :         {
; 103  :             SceneItem *item = scene->GetSceneItem(lpImageSource);

	mov	rdx, rbx
	mov	rcx, rax
	call	QWORD PTR __imp_?GetSceneItem@Scene@@QEBAPEAVSceneItem@@PEB_W@Z

; 104  :             if(item)

	test	rax, rax
	je	SHORT $LN1@GetSceneIm

; 105  :             {
; 106  :                 if(item->GetSource())

	mov	rax, QWORD PTR [rax+8]
	test	rax, rax

; 107  :                     return item->GetSource();

	jne	SHORT $LN4@GetSceneIm
$LN1@GetSceneIm:

; 108  :             }
; 109  :         }
; 110  : 
; 111  :         return NULL;

	xor	eax, eax
$LN4@GetSceneIm:

; 112  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?GetSceneImageSource@APIInterface@@QEAAPEAVImageSource@@PEB_W@Z ENDP ; APIInterface::GetSceneImageSource
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\inline.h
_TEXT	ENDS
;	COMDAT ?nop@@YAXXZ
_TEXT	SEGMENT
?nop@@YAXXZ PROC					; nop, COMDAT

; 310  : }

	ret	0
?nop@@YAXXZ ENDP					; nop
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\um\winbase.inl
pdata	SEGMENT
$pdata$IsolationAwareQueryActCtxW DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$IsolationAwareQueryActCtxW
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$IsolationAwareQueryActCtxW DD 010401H
	DD	08204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT IsolationAwareQueryActCtxW
_TEXT	SEGMENT
pvBuffer$ = 80
IsolationAwareQueryActCtxW PROC				; COMDAT

; 260  : {

$LN3:
	sub	rsp, 72					; 00000048H

; 261  : #ifdef _WIN64
; 262  :     return QueryActCtxW(dwFlags,hActCtx,pvSubInstance,ulInfoClass,pvBuffer,cbBuffer,pcbWrittenOrRequired);

	mov	QWORD PTR [rsp+48], 0
	lea	rdx, OFFSET FLAT:WinbaseIsolationAwarePrivateT_UnPgpgk
	mov	QWORD PTR [rsp+40], 16
	mov	QWORD PTR [rsp+32], rcx
	mov	r9d, 1
	xor	r8d, r8d
	mov	ecx, -2147483632			; 80000010H
	call	QWORD PTR __imp_QueryActCtxW

; 263  : #else
; 264  :     BOOL fResult = FALSE;
; 265  :     typedef BOOL (WINAPI* PFN)(_In_ DWORD dwFlags,_In_ HANDLE hActCtx,_In_opt_ PVOID pvSubInstance,_In_ ULONG ulInfoClass,_Out_writes_bytes_to_opt_(cbBuffer,*pcbWrittenOrRequired) PVOID pvBuffer,_In_ SIZE_T cbBuffer,_Out_opt_ SIZE_T*pcbWrittenOrRequired);
; 266  :     static PFN s_pfn;
; 267  :     PFN __IsolationAware_pfn = s_pfn;
; 268  :     if (__IsolationAware_pfn == NULL)
; 269  :     {
; 270  :         __IsolationAware_pfn = (PFN) WinbaseIsolationAwarePrivatetRgCebPnQQeRff_xReaRYQP_QYY("QueryActCtxW");
; 271  :         if (__IsolationAware_pfn == NULL)
; 272  :             return fResult;
; 273  :         s_pfn = __IsolationAware_pfn;
; 274  :     }
; 275  :     fResult = __IsolationAware_pfn(dwFlags,hActCtx,pvSubInstance,ulInfoClass,pvBuffer,cbBuffer,pcbWrittenOrRequired);
; 276  :     return fResult;
; 277  : #endif
; 278  : }

	add	rsp, 72					; 00000048H
	ret	0
IsolationAwareQueryActCtxW ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$IsolationAwareFindActCtxSectionStringW DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$IsolationAwareFindActCtxSectionStringW
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$IsolationAwareFindActCtxSectionStringW DD 010401H
	DD	06204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT IsolationAwareFindActCtxSectionStringW
_TEXT	SEGMENT
ReturnedData$ = 64
IsolationAwareFindActCtxSectionStringW PROC		; COMDAT

; 239  : {

$LN3:
	sub	rsp, 56					; 00000038H

; 240  : #ifdef _WIN64
; 241  :     return FindActCtxSectionStringW(dwFlags,lpExtensionGuid,ulSectionId,lpStringToFind,ReturnedData);

	xor	edx, edx
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, OFFSET FLAT:??_C@_1BK@BFMCNHEO@?$AAC?$AAo?$AAm?$AAc?$AAt?$AAl?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@
	lea	r8d, QWORD PTR [rdx+2]
	xor	ecx, ecx
	call	QWORD PTR __imp_FindActCtxSectionStringW

; 242  : #else
; 243  :     BOOL fResult = FALSE;
; 244  :     typedef BOOL (WINAPI* PFN)(_In_ DWORD dwFlags,_Reserved_ const GUID*lpExtensionGuid,_In_ ULONG ulSectionId,_In_ LPCWSTR lpStringToFind,_Out_ PACTCTX_SECTION_KEYED_DATA ReturnedData);
; 245  :     static PFN s_pfn;
; 246  :     PFN __IsolationAware_pfn = s_pfn;
; 247  :     if (__IsolationAware_pfn == NULL)
; 248  :     {
; 249  :         __IsolationAware_pfn = (PFN) WinbaseIsolationAwarePrivatetRgCebPnQQeRff_xReaRYQP_QYY("FindActCtxSectionStringW");
; 250  :         if (__IsolationAware_pfn == NULL)
; 251  :             return fResult;
; 252  :         s_pfn = __IsolationAware_pfn;
; 253  :     }
; 254  :     fResult = __IsolationAware_pfn(dwFlags,lpExtensionGuid,ulSectionId,lpStringToFind,ReturnedData);
; 255  :     return fResult;
; 256  : #endif
; 257  : }

	add	rsp, 56					; 00000038H
	ret	0
IsolationAwareFindActCtxSectionStringW ENDP
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT IsolationAwareDeactivateActCtx
_TEXT	SEGMENT
ulCookie$ = 8
IsolationAwareDeactivateActCtx PROC			; COMDAT

; 219  : #ifdef _WIN64
; 220  :     return DeactivateActCtx(dwFlags,ulCookie);

	mov	rdx, rcx
	xor	ecx, ecx

; 221  : #else
; 222  :     BOOL fResult = FALSE;
; 223  :     typedef BOOL (WINAPI* PFN)(_In_ DWORD dwFlags,_In_ ULONG_PTR ulCookie);
; 224  :     static PFN s_pfn;
; 225  :     PFN __IsolationAware_pfn = s_pfn;
; 226  :     if (__IsolationAware_pfn == NULL)
; 227  :     {
; 228  :         __IsolationAware_pfn = (PFN) WinbaseIsolationAwarePrivatetRgCebPnQQeRff_xReaRYQP_QYY("DeactivateActCtx");
; 229  :         if (__IsolationAware_pfn == NULL)
; 230  :             return fResult;
; 231  :         s_pfn = __IsolationAware_pfn;
; 232  :     }
; 233  :     fResult = __IsolationAware_pfn(dwFlags,ulCookie);
; 234  :     return fResult;
; 235  : #endif
; 236  : }

	rex_jmp	QWORD PTR __imp_DeactivateActCtx
IsolationAwareDeactivateActCtx ENDP
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT IsolationAwareActivateActCtx
_TEXT	SEGMENT
hActCtx$ = 8
lpCookie$ = 16
IsolationAwareActivateActCtx PROC			; COMDAT

; 198  : #ifdef _WIN64
; 199  :     return ActivateActCtx(hActCtx,lpCookie);
; 200  : #else
; 201  :     BOOL fResult = FALSE;
; 202  :     typedef BOOL (WINAPI* PFN)(_Inout_opt_ HANDLE hActCtx,_Out_ ULONG_PTR*lpCookie);
; 203  :     static PFN s_pfn;
; 204  :     PFN __IsolationAware_pfn = s_pfn;
; 205  :     if (__IsolationAware_pfn == NULL)
; 206  :     {
; 207  :         __IsolationAware_pfn = (PFN) WinbaseIsolationAwarePrivatetRgCebPnQQeRff_xReaRYQP_QYY("ActivateActCtx");
; 208  :         if (__IsolationAware_pfn == NULL)
; 209  :             return fResult;
; 210  :         s_pfn = __IsolationAware_pfn;
; 211  :     }
; 212  :     fResult = __IsolationAware_pfn(hActCtx,lpCookie);
; 213  :     return fResult;
; 214  : #endif
; 215  : }

	rex_jmp	QWORD PTR __imp_ActivateActCtx
IsolationAwareActivateActCtx ENDP
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT IsolationAwareCreateActCtxW
_TEXT	SEGMENT
pActCtx$ = 8
IsolationAwareCreateActCtxW PROC			; COMDAT

; 156  : #ifdef _WIN64
; 157  :     return CreateActCtxW(pActCtx);
; 158  : #else
; 159  :     HANDLE result = INVALID_HANDLE_VALUE;
; 160  :     typedef HANDLE (WINAPI* PFN)(_In_ PCACTCTXW pActCtx);
; 161  :     static PFN s_pfn;
; 162  :     PFN __IsolationAware_pfn = s_pfn;
; 163  :     if (__IsolationAware_pfn == NULL)
; 164  :     {
; 165  :         __IsolationAware_pfn = (PFN) WinbaseIsolationAwarePrivatetRgCebPnQQeRff_xReaRYQP_QYY("CreateActCtxW");
; 166  :         if (__IsolationAware_pfn == NULL)
; 167  :             return result;
; 168  :         s_pfn = __IsolationAware_pfn;
; 169  :     }
; 170  :     result = __IsolationAware_pfn(pActCtx);
; 171  :     return result;
; 172  : #endif
; 173  : }

	rex_jmp	QWORD PTR __imp_CreateActCtxW
IsolationAwareCreateActCtxW ENDP
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\alloc.h
pdata	SEGMENT
$pdata$?Clear@?$List@UtagSIZE@@@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+49
	DD	imagerel $unwind$?Clear@?$List@UtagSIZE@@@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@?$List@UtagSIZE@@@@QEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\template.h
xdata	ENDS
;	COMDAT ?Clear@?$List@UtagSIZE@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Clear@?$List@UtagSIZE@@@@QEAAXXZ PROC			; List<tagSIZE>::Clear, COMDAT

; 329  :     {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H

; 330  :         if(array)

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN1@Clear@2

; 331  :         {
; 332  :             /*if(IsBadWritePtr(array, sizeof(T)*num))
; 333  :                 CrashError(TEXT("what the.."));*/
; 334  :             Free(array);

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]

; 335  :             array = NULL;

	xor	r11d, r11d
	mov	QWORD PTR [rbx], r11

; 336  :             num = 0;

	mov	DWORD PTR [rbx+8], r11d
$LN1@Clear@2:

; 337  :         }
; 338  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?Clear@?$List@UtagSIZE@@@@QEAAXXZ ENDP			; List<tagSIZE>::Clear
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\alloc.h
pdata	SEGMENT
$pdata$??1?$List@UtagSIZE@@@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+49
	DD	imagerel $unwind$??1?$List@UtagSIZE@@@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$List@UtagSIZE@@@@QEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\template.h
xdata	ENDS
;	COMDAT ??1?$List@UtagSIZE@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$List@UtagSIZE@@@@QEAA@XZ PROC			; List<tagSIZE>::~List<tagSIZE>, COMDAT

; 32   :     {

$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H

; 33   :         Clear();

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN3@List
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	xor	r11d, r11d
	mov	QWORD PTR [rbx], r11
	mov	DWORD PTR [rbx+8], r11d
$LN3@List:

; 34   :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1?$List@UtagSIZE@@@@QEAA@XZ ENDP			; List<tagSIZE>::~List<tagSIZE>
_TEXT	ENDS
PUBLIC	?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z ; GetDeviceByValue
EXTRN	__CxxFrameHandler3:PROC
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\xstring.h
pdata	SEGMENT
$pdata$?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z DD imagerel $LN45
	DD	imagerel $LN45+823
	DD	imagerel $unwind$?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z DD imagerel ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z
	DD	0ffffffffH
	DD	imagerel ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z+434
	DD	00H
	DD	imagerel ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z+506
	DD	0ffffffffH
	DD	imagerel ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z+521
	DD	00H
	DD	imagerel ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z+567
	DD	01H
	DD	imagerel ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z+584
	DD	00H
	DD	imagerel ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z+607
	DD	0ffffffffH
	DD	imagerel ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z+645
	DD	00H
	DD	imagerel ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z+683
	DD	0ffffffffH
	DD	imagerel ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z+695
	DD	01H
	DD	imagerel ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z+746
	DD	00H
	DD	imagerel ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z+757
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z DD 0d2b11H
	DD	01fc42bH
	DD	01e7427H
	DD	01d6423H
	DD	01c341fH
	DD	0180113H
	DD	0d006e008H
	DD	05004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z
	DD	00H
	DD	00H
	DD	0cH
	DD	imagerel $ip2state$?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z
	DD	098H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z@4HA
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
xdata	ENDS
;	COMDAT ?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z
_TEXT	SEGMENT
deviceInfo$ = 48
videoDeviceEnum$ = 56
propertyData$92246 = 64
deviceEnum$ = 72
filter$92261 = 80
count$ = 88
strVal1$92258 = 96
strVal2$92274 = 112
valueThingy$92250 = 128
$T110218 = 152
valueThingy2$92251 = 160
enumType$ = 224
lpType$ = 232
lpName$ = 240
lpType2$ = 248
lpName2$ = 256
?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z PROC ; GetDeviceByValue, COMDAT

; 153  : {

$LN45:
	mov	rax, rsp
	push	rbp
	push	r13
	push	r14
	lea	rbp, QWORD PTR [rax-87]
	sub	rsp, 192				; 000000c0H
	mov	QWORD PTR $T110218[rbp-129], -2
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rsi
	mov	QWORD PTR [rax+24], rdi
	mov	QWORD PTR [rax+32], r12
	mov	rsi, r9
	mov	r12, r8
	mov	r13, rdx
	mov	rdi, rcx

; 154  :     //---------------------------------
; 155  :     // exception devices
; 156  :     if(scmpi(lpType2, L"DevicePath") == 0 && lpName2 && *lpName2 == '{')

	lea	rdx, OFFSET FLAT:$SG-10646
	mov	rcx, r9
	call	QWORD PTR __imp_?scmpi@@YAHPEB_W0@Z
	mov	rbx, QWORD PTR lpName2$[rbp-129]
	test	eax, eax
	jne	SHORT $LN27@GetDeviceB
	test	rbx, rbx
	je	SHORT $LN27@GetDeviceB
	cmp	WORD PTR [rbx], 123			; 0000007bH
	jne	SHORT $LN27@GetDeviceB

; 157  :         return GetExceptionDevice(lpName2);

	mov	rcx, rbx
	call	?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z ; GetExceptionDevice
	jmp	$LN28@GetDeviceB
$LN27@GetDeviceB:

; 158  : 
; 159  :     //---------------------------------
; 160  : 
; 161  :     ICreateDevEnum *deviceEnum;
; 162  :     IEnumMoniker *videoDeviceEnum;
; 163  : 
; 164  :     HRESULT err;
; 165  :     err = CoCreateInstance(CLSID_SystemDeviceEnum, NULL, CLSCTX_INPROC, IID_ICreateDevEnum, (void**)&deviceEnum);

	lea	rax, QWORD PTR deviceEnum$[rbp-129]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:IID_ICreateDevEnum
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+3]
	lea	rcx, OFFSET FLAT:CLSID_SystemDeviceEnum
	call	QWORD PTR __imp_CoCreateInstance

; 166  :     if(FAILED(err))

	test	eax, eax
	jns	SHORT $LN26@GetDeviceB

; 167  :     {
; 168  :         AppWarning(TEXT("GetDeviceByName: CoCreateInstance for the device enum failed, result = %08lX"), err);

	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG-10647
	call	QWORD PTR __imp_?AppWarning@@YAXPEB_WZZ
$LN44@GetDeviceB:

; 169  :         return NULL;

	xor	eax, eax
	jmp	$LN28@GetDeviceB
$LN26@GetDeviceB:

; 170  :     }
; 171  : 
; 172  :     err = deviceEnum->CreateClassEnumerator(enumType, &videoDeviceEnum, 0);

	mov	rcx, QWORD PTR deviceEnum$[rbp-129]
	mov	rax, QWORD PTR [rcx]
	xor	r9d, r9d
	lea	r8, QWORD PTR videoDeviceEnum$[rbp-129]
	mov	rdx, rdi
	call	QWORD PTR [rax+24]
	mov	edi, eax

; 173  :     if(FAILED(err))

	test	eax, eax
	jns	SHORT $LN25@GetDeviceB

; 174  :     {
; 175  :         AppWarning(TEXT("GetDeviceByName: deviceEnum->CreateClassEnumerator failed, result = %08lX"), err);

	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG-10648
	call	QWORD PTR __imp_?AppWarning@@YAXPEB_WZZ

; 176  :         deviceEnum->Release();

	mov	rcx, QWORD PTR deviceEnum$[rbp-129]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]

; 177  :         return NULL;

	xor	eax, eax
	jmp	$LN28@GetDeviceB
$LN25@GetDeviceB:

; 178  :     }
; 179  : 
; 180  :     SafeRelease(deviceEnum);

	xor	r14d, r14d
	mov	rcx, QWORD PTR deviceEnum$[rbp-129]
	test	rcx, rcx
	je	SHORT $LN24@GetDeviceB
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR deviceEnum$[rbp-129], r14
$LN24@GetDeviceB:

; 181  : 
; 182  :     if(err == S_FALSE) //no devices, so NO ENUM FO U

	cmp	edi, 1

; 183  :         return NULL;

	je	SHORT $LN44@GetDeviceB

; 184  : 
; 185  :     //---------------------------------
; 186  : 
; 187  :     IBaseFilter *bestFilter = NULL;

	mov	rdi, r14
$LN2@GetDeviceB:

; 188  : 
; 189  :     IMoniker *deviceInfo;
; 190  :     DWORD count;
; 191  :     while(videoDeviceEnum->Next(1, &deviceInfo, &count) == S_OK)

	mov	rcx, QWORD PTR videoDeviceEnum$[rbp-129]
	mov	rax, QWORD PTR [rcx]
	lea	r9, QWORD PTR count$[rbp-129]
	lea	r8, QWORD PTR deviceInfo$[rbp-129]
	mov	edx, 1
	call	QWORD PTR [rax+24]
	test	eax, eax
	jne	$LN42@GetDeviceB

; 192  :     {
; 193  :         IPropertyBag *propertyData;
; 194  :         err = deviceInfo->BindToStorage(0, 0, IID_IPropertyBag, (void**)&propertyData);

	mov	rcx, QWORD PTR deviceInfo$[rbp-129]
	mov	rax, QWORD PTR [rcx]
	lea	rdx, QWORD PTR propertyData$92246[rbp-129]
	mov	QWORD PTR [rsp+32], rdx
	lea	r9, OFFSET FLAT:IID_IPropertyBag
	xor	r8d, r8d
	xor	edx, edx
	call	QWORD PTR [rax+72]

; 195  :         if(SUCCEEDED(err))

	test	eax, eax
	js	$LN19@GetDeviceB

; 196  :         {
; 197  :             VARIANT valueThingy;
; 198  :             VARIANT valueThingy2;
; 199  :             VariantInit(&valueThingy);

	lea	rcx, QWORD PTR valueThingy$92250[rbp-129]
	call	QWORD PTR __imp_VariantInit

; 200  :             VariantInit(&valueThingy2);

	lea	rcx, QWORD PTR valueThingy2$92251[rbp-129]
	call	QWORD PTR __imp_VariantInit

; 201  :             /*valueThingy.vt  = VT_BSTR;
; 202  :             valueThingy.pbstrVal = NULL;
; 203  : 
; 204  :             valueThingy2.vt = VT_BSTR;
; 205  :             valueThingy2.bstrVal = NULL;*/
; 206  : 
; 207  :             if(SUCCEEDED(propertyData->Read(lpType, &valueThingy, NULL)))

	mov	rcx, QWORD PTR propertyData$92246[rbp-129]
	mov	rax, QWORD PTR [rcx]
	xor	r9d, r9d
	lea	r8, QWORD PTR valueThingy$92250[rbp-129]
	mov	rdx, r13
	call	QWORD PTR [rax+24]
	test	eax, eax
	js	$LN19@GetDeviceB

; 208  :             {
; 209  :                 if(lpType2 && lpName2)

	test	rsi, rsi
	je	SHORT $LN32@GetDeviceB
	test	rbx, rbx
	je	SHORT $LN32@GetDeviceB

; 210  :                 {
; 211  :                     if(FAILED(propertyData->Read(lpType2, &valueThingy2, NULL)))

	mov	rcx, QWORD PTR propertyData$92246[rbp-129]
	mov	rax, QWORD PTR [rcx]
	xor	r9d, r9d
	lea	r8, QWORD PTR valueThingy2$92251[rbp-129]
	mov	rdx, rsi
	call	QWORD PTR [rax+24]

; 212  :                         nop();

$LN32@GetDeviceB:

; 213  :                 }
; 214  : 
; 215  :                 SafeRelease(propertyData);

	mov	rcx, QWORD PTR propertyData$92246[rbp-129]
	test	rcx, rcx
	je	SHORT $LN16@GetDeviceB
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR propertyData$92246[rbp-129], r14
$LN16@GetDeviceB:

; 216  : 
; 217  :                 String strVal1 = (CWSTR)valueThingy.bstrVal;

	mov	rdx, QWORD PTR valueThingy$92250[rbp-121]
	lea	rcx, QWORD PTR strVal1$92258[rbp-129]
	call	QWORD PTR __imp_??0String@@QEAA@PEB_W@Z
	npad	1

; 218  : 
; 219  :                 if(strVal1 == lpName)

	mov	rdx, r12
	lea	rcx, QWORD PTR strVal1$92258[rbp-129]
	call	QWORD PTR __imp_?Compare@String@@QEBAHPEB_W@Z
	test	eax, eax
	je	$LN3@GetDeviceB

; 220  :                 {
; 221  :                     IBaseFilter *filter;
; 222  :                     err = deviceInfo->BindToObject(NULL, 0, IID_IBaseFilter, (void**)&filter);

	mov	rcx, QWORD PTR deviceInfo$[rbp-129]
	mov	rax, QWORD PTR [rcx]
	lea	rdx, QWORD PTR filter$92261[rbp-129]
	mov	QWORD PTR [rsp+32], rdx
	lea	r9, OFFSET FLAT:IID_IBaseFilter
	xor	r8d, r8d
	xor	edx, edx
	call	QWORD PTR [rax+64]

; 223  :                     if(FAILED(err))

	test	eax, eax
	jns	SHORT $LN14@GetDeviceB

; 224  :                     {
; 225  :                         AppWarning(TEXT("GetDeviceByName: deviceInfo->BindToObject failed, result = %08lX"), err);

	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG-10649
	call	QWORD PTR __imp_?AppWarning@@YAXPEB_WZZ
	npad	1

; 226  :                         continue;

	lea	rcx, QWORD PTR strVal1$92258[rbp-129]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
	jmp	$LN2@GetDeviceB
$LN14@GetDeviceB:

; 227  :                     }
; 228  : 
; 229  :                     if(!bestFilter)

	test	rdi, rdi
	jne	SHORT $LN13@GetDeviceB

; 230  :                     {
; 231  :                         bestFilter = filter;

	mov	rdi, QWORD PTR filter$92261[rbp-129]

; 232  : 
; 233  :                         if(!lpType2 || !lpName2)

	test	rsi, rsi
	je	SHORT $LN40@GetDeviceB
	test	rbx, rbx
	je	SHORT $LN40@GetDeviceB

; 239  :                         }
; 240  :                     }

	jmp	SHORT $LN3@GetDeviceB
$LN13@GetDeviceB:

; 241  :                     else if(lpType2 && lpName2)

	test	rsi, rsi
	je	SHORT $LN7@GetDeviceB
	test	rbx, rbx
	je	SHORT $LN7@GetDeviceB

; 242  :                     {
; 243  :                         String strVal2 = (CWSTR)valueThingy2.bstrVal;

	mov	rdx, QWORD PTR valueThingy2$92251[rbp-121]
	lea	rcx, QWORD PTR strVal2$92274[rbp-129]
	call	QWORD PTR __imp_??0String@@QEAA@PEB_W@Z
	npad	1

; 244  :                         if(strVal2 == lpName2)

	mov	rdx, rbx
	lea	rcx, QWORD PTR strVal2$92274[rbp-129]
	call	QWORD PTR __imp_?Compare@String@@QEBAHPEB_W@Z
	test	eax, eax
	jne	SHORT $LN41@GetDeviceB

; 254  :                         }
; 255  :                     }

	lea	rcx, QWORD PTR strVal2$92274[rbp-129]
	call	QWORD PTR __imp_??1String@@QEAA@XZ

; 256  :                     else

	jmp	SHORT $LN3@GetDeviceB
$LN7@GetDeviceB:

; 257  :                         filter->Release();

	mov	rcx, QWORD PTR filter$92261[rbp-129]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN3@GetDeviceB:

; 258  :                 }
; 259  :             }

	lea	rcx, QWORD PTR strVal1$92258[rbp-129]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
$LN19@GetDeviceB:

; 260  :         }
; 261  : 
; 262  :         SafeRelease(deviceInfo);

	mov	rcx, QWORD PTR deviceInfo$[rbp-129]
	test	rcx, rcx
	je	$LN2@GetDeviceB
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR deviceInfo$[rbp-129], r14

; 188  : 
; 189  :     IMoniker *deviceInfo;
; 190  :     DWORD count;
; 191  :     while(videoDeviceEnum->Next(1, &deviceInfo, &count) == S_OK)

	jmp	$LN2@GetDeviceB
$LN40@GetDeviceB:

; 234  :                         {
; 235  :                             SafeRelease(deviceInfo);

	mov	rcx, QWORD PTR deviceInfo$[rbp-129]
	test	rcx, rcx
	je	SHORT $LN10@GetDeviceB
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR deviceInfo$[rbp-129], r14
$LN10@GetDeviceB:

; 236  :                             SafeRelease(videoDeviceEnum);

	mov	rcx, QWORD PTR videoDeviceEnum$[rbp-129]
	test	rcx, rcx
	je	SHORT $LN9@GetDeviceB
	mov	rdx, QWORD PTR [rcx]
	call	QWORD PTR [rdx+16]
	mov	QWORD PTR videoDeviceEnum$[rbp-129], r14
$LN9@GetDeviceB:

; 237  : 
; 238  :                             return bestFilter;

	lea	rcx, QWORD PTR strVal1$92258[rbp-129]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
	jmp	SHORT $LN1@GetDeviceB
$LN41@GetDeviceB:

; 245  :                         {
; 246  :                             bestFilter->Release();

	mov	rax, QWORD PTR [rdi]
	mov	rcx, rdi
	call	QWORD PTR [rax+16]

; 247  : 
; 248  :                             bestFilter = filter;

	mov	rbx, QWORD PTR filter$92261[rbp-129]

; 249  : 
; 250  :                             SafeRelease(deviceInfo);

	mov	rcx, QWORD PTR deviceInfo$[rbp-129]
	test	rcx, rcx
	je	SHORT $LN5@GetDeviceB
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR deviceInfo$[rbp-129], r14
$LN5@GetDeviceB:

; 251  :                             SafeRelease(videoDeviceEnum);

	mov	rcx, QWORD PTR videoDeviceEnum$[rbp-129]
	test	rcx, rcx
	je	SHORT $LN4@GetDeviceB
	mov	rdx, QWORD PTR [rcx]
	call	QWORD PTR [rdx+16]
	mov	QWORD PTR videoDeviceEnum$[rbp-129], r14
$LN4@GetDeviceB:

; 252  : 
; 253  :                             return bestFilter;

	lea	rcx, QWORD PTR strVal2$92274[rbp-129]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR strVal1$92258[rbp-129]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
	mov	rax, rbx
	jmp	SHORT $LN28@GetDeviceB
$LN42@GetDeviceB:

; 263  :     }
; 264  : 
; 265  :     SafeRelease(videoDeviceEnum);

	mov	rcx, QWORD PTR videoDeviceEnum$[rbp-129]
	test	rcx, rcx
	je	SHORT $LN1@GetDeviceB
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
$LN1@GetDeviceB:

; 266  : 
; 267  :     return bestFilter;

	mov	rax, rdi
$LN28@GetDeviceB:

; 268  : }

	lea	r11, QWORD PTR [rsp+192]
	mov	rbx, QWORD PTR [r11+32]
	mov	rsi, QWORD PTR [r11+40]
	mov	rdi, QWORD PTR [r11+48]
	mov	r12, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r14
	pop	r13
	pop	rbp
	ret	0
?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z ENDP ; GetDeviceByValue
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
deviceInfo$ = 48
videoDeviceEnum$ = 56
propertyData$92246 = 64
deviceEnum$ = 72
filter$92261 = 80
count$ = 88
strVal1$92258 = 96
strVal2$92274 = 112
valueThingy$92250 = 128
$T110218 = 152
valueThingy2$92251 = 160
enumType$ = 224
lpType$ = 232
lpName$ = 240
lpType2$ = 248
lpName2$ = 256
?dtor$0@?0??GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z@4HA PROC ; `GetDeviceByValue'::`1'::dtor$0
	lea	rcx, QWORD PTR strVal1$92258[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$0@?0??GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z@4HA ENDP ; `GetDeviceByValue'::`1'::dtor$0
; Function compile flags: /Ogtpy
deviceInfo$ = 48
videoDeviceEnum$ = 56
propertyData$92246 = 64
deviceEnum$ = 72
filter$92261 = 80
count$ = 88
strVal1$92258 = 96
strVal2$92274 = 112
valueThingy$92250 = 128
$T110218 = 152
valueThingy2$92251 = 160
enumType$ = 224
lpType$ = 232
lpName$ = 240
lpType2$ = 248
lpName2$ = 256
?dtor$1@?0??GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z@4HA PROC ; `GetDeviceByValue'::`1'::dtor$1
	lea	rcx, QWORD PTR strVal2$92274[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$1@?0??GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z@4HA ENDP ; `GetDeviceByValue'::`1'::dtor$1
text$x	ENDS
PUBLIC	?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z	; CurrentDeviceExists
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z DD imagerel $LN22
	DD	imagerel $LN22+92
	DD	imagerel $unwind$?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z DD imagerel $LN22+92
	DD	imagerel $LN22+225
	DD	imagerel $chain$0$?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z DD imagerel $LN22+225
	DD	imagerel $LN22+273
	DD	imagerel $chain$2$?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z DD 020021H
	DD	066400H
	DD	imagerel $LN22
	DD	imagerel $LN22+92
	DD	imagerel $unwind$?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z DD 020521H
	DD	066405H
	DD	imagerel $LN22
	DD	imagerel $LN22+92
	DD	imagerel $unwind$?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z DD 060f01H
	DD	08540fH
	DD	07340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z
_TEXT	SEGMENT
lpDevice$ = 48
bGlobal$ = 56
isGlobal$ = 64
?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z PROC		; CurrentDeviceExists, COMDAT

; 58   : {

$LN22:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rbp
	push	rdi
	sub	rsp, 32					; 00000020H

; 59   :     isGlobal = false;
; 60   : 
; 61   :     XElement *globalSources = API->GetGlobalSourceListElement();

	mov	rax, QWORD PTR __imp_?API@@3PEAVAPIInterface@@EA
	mov	BYTE PTR [r8], 0
	mov	rbp, rcx
	mov	rcx, QWORD PTR [rax]
	mov	rbx, r8
	movzx	edi, dl
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+64]

; 62   :     if(globalSources)

	test	rax, rax
	je	SHORT $LN13@CurrentDev

; 63   :     {
; 64   :         if(SourceListHasDevice(lpDevice, globalSources))

	mov	rdx, rax
	mov	rcx, rbp
	call	?SourceListHasDevice@@YA_NPEB_WPEAVXElement@@@Z ; SourceListHasDevice
	test	al, al
	je	SHORT $LN13@CurrentDev

; 65   :         {
; 66   :             isGlobal = true;

	mov	BYTE PTR [rbx], 1

; 67   :             return true;

	mov	al, 1

; 107  : }

	mov	rbx, QWORD PTR [rsp+56]
	mov	rbp, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN13@CurrentDev:

; 68   :         }
; 69   :     }
; 70   : 
; 71   :     if(bGlobal)
; 72   :     {
; 73   :         XElement *sceneListElement = API->GetSceneListElement();

	mov	rax, QWORD PTR __imp_?API@@3PEAVAPIInterface@@EA
	mov	QWORD PTR [rsp+48], rsi
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	test	dil, dil
	je	SHORT $LN12@CurrentDev
	call	QWORD PTR [rax+56]
	mov	rsi, rax

; 74   :         if(sceneListElement)

	test	rax, rax
	je	SHORT $LN1@CurrentDev

; 75   :         {
; 76   :             UINT numScenes = sceneListElement->NumElements();

	xor	edx, edx
	mov	rcx, rax
	call	QWORD PTR __imp_?NumElements@XElement@@QEAAKPEB_W@Z

; 77   :             for(UINT i=0; i<numScenes; i++)

	xor	ebx, ebx
	mov	edi, eax
	test	eax, eax
	je	SHORT $LN1@CurrentDev
	npad	6
$LL10@CurrentDev:

; 78   :             {
; 79   :                 XElement *sceneElement = sceneListElement->GetElementByID(i);

	mov	edx, ebx
	mov	rcx, rsi
	call	QWORD PTR __imp_?GetElementByID@XElement@@QEBAPEAV1@K@Z

; 80   :                 if(sceneElement)

	test	rax, rax
	je	SHORT $LN9@CurrentDev

; 81   :                 {
; 82   :                     XElement *sourceListElement = sceneElement->GetElement(TEXT("sources"));

	lea	rdx, OFFSET FLAT:$SG-10644
	mov	rcx, rax
	call	QWORD PTR __imp_?GetElement@XElement@@QEBAPEAV1@PEB_W@Z

; 83   :                     if(sourceListElement)

	test	rax, rax
	je	SHORT $LN9@CurrentDev

; 84   :                     {
; 85   :                         if(SourceListHasDevice(lpDevice, sourceListElement))

	mov	rdx, rax
	mov	rcx, rbp
	call	?SourceListHasDevice@@YA_NPEB_WPEAVXElement@@@Z ; SourceListHasDevice
	test	al, al
	jne	SHORT $LN18@CurrentDev
$LN9@CurrentDev:

; 77   :             for(UINT i=0; i<numScenes; i++)

	inc	ebx
	cmp	ebx, edi
	jb	SHORT $LL10@CurrentDev
$LN1@CurrentDev:

; 102  :             }
; 103  :         }
; 104  :     }
; 105  : 
; 106  :     return false;

	xor	al, al
$LN21@CurrentDev:
	mov	rsi, QWORD PTR [rsp+48]

; 107  : }

	mov	rbx, QWORD PTR [rsp+56]
	mov	rbp, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN12@CurrentDev:

; 86   :                             return true;
; 87   :                     }
; 88   :                 }
; 89   :             }
; 90   :         }
; 91   :     }
; 92   :     else
; 93   :     {
; 94   :         XElement *sceneElement = API->GetSceneElement();

	call	QWORD PTR [rax+96]

; 95   :         if(sceneElement)

	test	rax, rax
	je	SHORT $LN1@CurrentDev

; 96   :         {
; 97   :             XElement *sourceListElement = sceneElement->GetElement(TEXT("sources"));

	lea	rdx, OFFSET FLAT:$SG-10645
	mov	rcx, rax
	call	QWORD PTR __imp_?GetElement@XElement@@QEBAPEAV1@PEB_W@Z

; 98   :             if(sourceListElement)

	test	rax, rax
	je	SHORT $LN1@CurrentDev

; 99   :             {
; 100  :                 if(SourceListHasDevice(lpDevice, sourceListElement))

	mov	rdx, rax
	mov	rcx, rbp
	call	?SourceListHasDevice@@YA_NPEB_WPEAVXElement@@@Z ; SourceListHasDevice
	test	al, al
	je	SHORT $LN1@CurrentDev
$LN18@CurrentDev:

; 101  :                     return true;

	mov	al, 1
	jmp	SHORT $LN21@CurrentDev
?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z ENDP		; CurrentDeviceExists
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__GSHandlerCheck_SEH:PROC
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\um\winbase.inl
pdata	SEGMENT
$pdata$WinbaseIsolationAwarePrivatetRgzlnPgpgk DD imagerel $LN37
	DD	imagerel $LN37+467
	DD	imagerel $unwind$WinbaseIsolationAwarePrivatetRgzlnPgpgk
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$WinbaseIsolationAwarePrivatetRgzlnPgpgk$fin$0 DD imagerel WinbaseIsolationAwarePrivatetRgzlnPgpgk$fin$0
	DD	imagerel WinbaseIsolationAwarePrivatetRgzlnPgpgk$fin$0+29
	DD	imagerel $unwind$WinbaseIsolationAwarePrivatetRgzlnPgpgk$fin$0
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$WinbaseIsolationAwarePrivatetRgzlnPgpgk$fin$0 DD 020601H
	DD	050027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$WinbaseIsolationAwarePrivatetRgzlnPgpgk DD 031b19H
	DD	05e0109H
	DD	03002H
	DD	imagerel __GSHandlerCheck_SEH
	DD	01H
	DD	imagerel $LN37+365
	DD	imagerel $LN37+422
	DD	imagerel WinbaseIsolationAwarePrivatetRgzlnPgpgk$fin$0
	DD	00H
	DD	02e2H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT WinbaseIsolationAwarePrivatetRgzlnPgpgk
_TEXT	SEGMENT
ulpCookie$ = 64
hmodSelf$17010 = 72
actCtxBasicInfo$ = 80
actCtxSectionKeyedData$17028 = 96
actCtx$17007 = 96
rgchFullModulePath$17008 = 208
__$ArrayPad$ = 736
WinbaseIsolationAwarePrivatetRgzlnPgpgk PROC		; COMDAT

; 360  : {

$LN37:
	push	rbx
	sub	rsp, 752				; 000002f0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 361  :     BOOL fResult = FALSE;

	xor	ebx, ebx

; 362  :     ACTIVATION_CONTEXT_BASIC_INFORMATION actCtxBasicInfo;
; 363  :     ULONG_PTR ulpCookie = 0;

	mov	QWORD PTR ulpCookie$[rsp], rbx

; 364  : 
; 365  : #ifdef _M_IX86
; 366  :     if (IsolationAwarePrivateT_SqbjaYRiRY)
; 367  :     {
; 368  :         fResult = TRUE;
; 369  :         goto Exit;
; 370  :     }
; 371  : #endif
; 372  : 
; 373  :     if (WinbaseIsolationAwarePrivateT_UnPgpgk != INVALID_HANDLE_VALUE)

	cmp	QWORD PTR WinbaseIsolationAwarePrivateT_UnPgpgk, -1

; 374  :     {
; 375  :         fResult = TRUE;
; 376  :         goto Exit;

	jne	$LN35@WinbaseIso

; 377  :     }
; 378  : 
; 379  :     if (!IsolationAwareQueryActCtxW(
; 380  :         QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS
; 381  :         | QUERY_ACTCTX_FLAG_NO_ADDREF,
; 382  :         &WinbaseIsolationAwarePrivateT_UnPgpgk,
; 383  :         NULL,
; 384  :         ActivationContextBasicInformation,
; 385  :         &actCtxBasicInfo,
; 386  :         sizeof(actCtxBasicInfo),
; 387  :         NULL))

	mov	QWORD PTR [rsp+48], rbx
	mov	QWORD PTR [rsp+40], 16
	lea	rax, QWORD PTR actCtxBasicInfo$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9d, QWORD PTR [rbx+1]
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:WinbaseIsolationAwarePrivateT_UnPgpgk
	mov	ecx, -2147483632			; 80000010H
	call	QWORD PTR __imp_QueryActCtxW
	test	eax, eax
	je	$Exit$17002

; 388  :         goto Exit;
; 389  : 
; 390  :     /*
; 391  :     If QueryActCtxW returns NULL, try CreateActCtx(3).
; 392  :     */
; 393  :     if (actCtxBasicInfo.hActCtx == NULL)

	mov	rax, QWORD PTR actCtxBasicInfo$[rsp]
	test	rax, rax
	jne	$LN13@WinbaseIso

; 394  :     {
; 395  :         ACTCTXW actCtx;
; 396  :         WCHAR rgchFullModulePath[MAX_PATH + 1];
; 397  :         DWORD dw;
; 398  :         HMODULE hmodSelf;
; 399  : #ifdef _M_IX86
; 400  :         PGET_MODULE_HANDLE_EXW pfnGetModuleHandleExW = (PGET_MODULE_HANDLE_EXW)WinbaseIsolationAwarePrivatetRgCebPnQQeRff_xReaRYQP_QYY("GetModuleHandleExW");
; 401  :         if (pfnGetModuleHandleExW == NULL)
; 402  :             goto Exit;
; 403  : #endif
; 404  :         if (!
; 405  : #ifdef _M_IX86
; 406  :             (*pfnGetModuleHandleExW)
; 407  : #else
; 408  :             GetModuleHandleExW
; 409  : #endif
; 410  :             (     GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT
; 411  :                 | GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS,
; 412  :                 (LPCWSTR)&WinbaseIsolationAwarePrivateT_UnPgpgk,
; 413  :                 &hmodSelf))

	lea	r8, QWORD PTR hmodSelf$17010[rsp]
	lea	rdx, OFFSET FLAT:WinbaseIsolationAwarePrivateT_UnPgpgk
	lea	ecx, QWORD PTR [rbx+6]
	call	QWORD PTR __imp_GetModuleHandleExW
	test	eax, eax
	je	$Exit$17002

; 414  :             goto Exit;
; 415  : 
; 416  :         dw = GetModuleFileNameW(hmodSelf, rgchFullModulePath, WINBASE_NUMBER_OF(rgchFullModulePath));

	mov	r8d, 261				; 00000105H
	lea	rdx, QWORD PTR rgchFullModulePath$17008[rsp]
	mov	rcx, QWORD PTR hmodSelf$17010[rsp]
	call	QWORD PTR __imp_GetModuleFileNameW

; 417  :         if (dw == 0)

	test	eax, eax
	je	$Exit$17002

; 418  :             goto Exit;
; 419  :         if (dw >= WINBASE_NUMBER_OF(rgchFullModulePath))

	cmp	eax, 261				; 00000105H
	jb	SHORT $LN8@WinbaseIso

; 420  :         {
; 421  :             SetLastError(ERROR_BUFFER_OVERFLOW);

	lea	ecx, QWORD PTR [rbx+111]
	call	QWORD PTR __imp_SetLastError

; 422  :             goto Exit;

	jmp	$Exit$17002
$LN8@WinbaseIso:

; 423  :         }
; 424  : 
; 425  :         actCtx.cbSize = sizeof(actCtx);

	mov	DWORD PTR actCtx$17007[rsp], 56		; 00000038H

; 426  :         actCtx.dwFlags = ACTCTX_FLAG_RESOURCE_NAME_VALID | ACTCTX_FLAG_HMODULE_VALID;

	mov	DWORD PTR actCtx$17007[rsp+4], 136	; 00000088H

; 427  :         actCtx.lpSource = rgchFullModulePath;

	lea	rax, QWORD PTR rgchFullModulePath$17008[rsp]
	mov	QWORD PTR actCtx$17007[rsp+8], rax

; 428  :         actCtx.lpResourceName = (LPCWSTR)(ULONG_PTR)3;

	mov	QWORD PTR actCtx$17007[rsp+32], 3

; 429  :         actCtx.hModule = hmodSelf;

	mov	rax, QWORD PTR hmodSelf$17010[rsp]
	mov	QWORD PTR actCtx$17007[rsp+48], rax

; 430  :         actCtxBasicInfo.hActCtx = IsolationAwareCreateActCtxW(&actCtx);

	lea	rcx, QWORD PTR actCtx$17007[rsp]
	call	QWORD PTR __imp_CreateActCtxW
	mov	QWORD PTR actCtxBasicInfo$[rsp], rax

; 431  :         if (actCtxBasicInfo.hActCtx == INVALID_HANDLE_VALUE)

	cmp	rax, -1
	jne	SHORT $LN6@WinbaseIso

; 432  :         {
; 433  :             const DWORD dwLastError = GetLastError();

	call	QWORD PTR __imp_GetLastError

; 434  :             if ((dwLastError != ERROR_RESOURCE_DATA_NOT_FOUND) &&
; 435  :                 (dwLastError != ERROR_RESOURCE_TYPE_NOT_FOUND) &&
; 436  :                 (dwLastError != ERROR_RESOURCE_LANG_NOT_FOUND) &&
; 437  :                 (dwLastError != ERROR_RESOURCE_NAME_NOT_FOUND) &&
; 438  :                 (dwLastError != ERROR_FILE_NOT_FOUND) &&
; 439  :                 (dwLastError != ERROR_PATH_NOT_FOUND))

	cmp	eax, 1812				; 00000714H
	je	SHORT $LN5@WinbaseIso
	cmp	eax, 1813				; 00000715H
	je	SHORT $LN5@WinbaseIso
	cmp	eax, 1815				; 00000717H
	je	SHORT $LN5@WinbaseIso
	cmp	eax, 1814				; 00000716H
	je	SHORT $LN5@WinbaseIso
	cmp	eax, 2
	je	SHORT $LN5@WinbaseIso
	cmp	eax, 3
	jne	SHORT $Exit$17002
$LN5@WinbaseIso:

; 440  :                 goto Exit;
; 441  : 
; 442  :             actCtxBasicInfo.hActCtx = NULL;

	mov	rax, rbx
	mov	QWORD PTR actCtxBasicInfo$[rsp], rbx
$LN6@WinbaseIso:

; 443  :         }
; 444  : 
; 445  :         WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk = TRUE;

	mov	DWORD PTR WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk, 1
$LN13@WinbaseIso:

; 446  :     }
; 447  : 
; 448  :     WinbaseIsolationAwarePrivateT_UnPgpgk = actCtxBasicInfo.hActCtx;

	mov	QWORD PTR WinbaseIsolationAwarePrivateT_UnPgpgk, rax

; 449  : 
; 450  : #define ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION              (2)
; 451  : 
; 452  :     if (IsolationAwareActivateActCtx(actCtxBasicInfo.hActCtx, &ulpCookie))

	lea	rdx, QWORD PTR ulpCookie$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_ActivateActCtx
	test	eax, eax
	je	SHORT $LN35@WinbaseIso

; 453  :     {
; 454  :         __try
; 455  :         {
; 456  :             ACTCTX_SECTION_KEYED_DATA actCtxSectionKeyedData;
; 457  : 
; 458  :             actCtxSectionKeyedData.cbSize = sizeof(actCtxSectionKeyedData);

	mov	DWORD PTR actCtxSectionKeyedData$17028[rsp], 112 ; 00000070H

; 459  :             if (IsolationAwareFindActCtxSectionStringW(0, NULL, ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION, L"Comctl32.dll", &actCtxSectionKeyedData))

	lea	rax, QWORD PTR actCtxSectionKeyedData$17028[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:??_C@_1BK@BFMCNHEO@?$AAC?$AAo?$AAm?$AAc?$AAt?$AAl?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@
	xor	edx, edx
	xor	ecx, ecx
	lea	r8d, QWORD PTR [rdx+2]
	call	QWORD PTR __imp_FindActCtxSectionStringW
	test	eax, eax
	je	SHORT $LN1@WinbaseIso

; 460  :             {
; 461  :                 /* get button, edit, etc. registered */
; 462  :                 LoadLibraryW(L"Comctl32.dll");

	lea	rcx, OFFSET FLAT:??_C@_1BK@BFMCNHEO@?$AAC?$AAo?$AAm?$AAc?$AAt?$AAl?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@
	call	QWORD PTR __imp_LoadLibraryW
	npad	1
$LN1@WinbaseIso:
$LN24@WinbaseIso:

; 463  :             }
; 464  :         }
; 465  :         __finally
; 466  :         {
; 467  :             IsolationAwareDeactivateActCtx(0, ulpCookie);

	mov	rdx, QWORD PTR ulpCookie$[rsp]
	xor	ecx, ecx
	call	QWORD PTR __imp_DeactivateActCtx
$LN35@WinbaseIso:

; 468  :         }
; 469  :     }
; 470  : 
; 471  :     fResult = TRUE;

	mov	ebx, 1
$Exit$17002:

; 472  : Exit:
; 473  :     return fResult;

	mov	eax, ebx
$LN18@WinbaseIso:

; 474  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 752				; 000002f0H
	pop	rbx
	ret	0
WinbaseIsolationAwarePrivatetRgzlnPgpgk ENDP
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
ulpCookie$ = 64
hmodSelf$17010 = 72
actCtxBasicInfo$ = 80
actCtxSectionKeyedData$17028 = 96
actCtx$17007 = 96
rgchFullModulePath$17008 = 208
__$ArrayPad$ = 736
WinbaseIsolationAwarePrivatetRgzlnPgpgk$fin$0 PROC

; 465  :         __finally

	push	rbp
	sub	rsp, 64					; 00000040H
	mov	rbp, rdx
$LN21@WinbaseIso@2:

; 466  :         {
; 467  :             IsolationAwareDeactivateActCtx(0, ulpCookie);

	mov	rdx, QWORD PTR ulpCookie$[rbp]
	xor	ecx, ecx
	call	QWORD PTR __imp_DeactivateActCtx
	npad	1
$LN22@WinbaseIso@2:
	add	rsp, 64					; 00000040H
	pop	rbp
	ret	0
	int	3
WinbaseIsolationAwarePrivatetRgzlnPgpgk$fin$0 ENDP
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GLocaleStringLookup@@QEAAPEAXI@Z DD imagerel $LN11
	DD	imagerel $LN11+37
	DD	imagerel $unwind$??_GLocaleStringLookup@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GLocaleStringLookup@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GLocaleStringLookup@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
??_GLocaleStringLookup@@QEAAPEAXI@Z PROC		; LocaleStringLookup::`scalar deleting destructor', COMDAT
$LN11:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rax]
	mov	rdx, rbx
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GLocaleStringLookup@@QEAAPEAXI@Z ENDP		; LocaleStringLookup::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	UnloadPlugin
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\alloc.h
pdata	SEGMENT
$pdata$UnloadPlugin DD imagerel $LN12
	DD	imagerel $LN12+52
	DD	imagerel $unwind$UnloadPlugin
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnloadPlugin DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
xdata	ENDS
;	COMDAT UnloadPlugin
_TEXT	SEGMENT
UnloadPlugin PROC					; COMDAT

; 1307 : {

$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H

; 1308 :     delete pluginLocale;

	mov	rbx, QWORD PTR ?pluginLocale@@3PEAVLocaleStringLookup@@EA ; pluginLocale
	test	rbx, rbx
	je	SHORT $LN10@UnloadPlug
	mov	rcx, rbx
	call	QWORD PTR __imp_??1LocaleStringLookup@@QEAA@XZ
	mov	r11, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, rbx
	mov	rcx, QWORD PTR [r11]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
$LN10@UnloadPlug:

; 1309 : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
UnloadPlugin ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ConfigDialogData@@QEAA@XZ DD imagerel $LN16
	DD	imagerel $LN16+130
	DD	imagerel $unwind$??0ConfigDialogData@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ConfigDialogData@@QEAA@XZ DD imagerel ??0ConfigDialogData@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0ConfigDialogData@@QEAA@XZ+31
	DD	00H
	DD	imagerel ??0ConfigDialogData@@QEAA@XZ+38
	DD	01H
	DD	imagerel ??0ConfigDialogData@@QEAA@XZ+49
	DD	02H
	DD	imagerel ??0ConfigDialogData@@QEAA@XZ+60
	DD	03H
	DD	imagerel ??0ConfigDialogData@@QEAA@XZ+71
	DD	04H
	DD	imagerel ??0ConfigDialogData@@QEAA@XZ+82
	DD	05H
	DD	imagerel ??0ConfigDialogData@@QEAA@XZ+93
	DD	06H
	DD	imagerel ??0ConfigDialogData@@QEAA@XZ+107
	DD	07H
	DD	imagerel ??0ConfigDialogData@@QEAA@XZ+121
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ConfigDialogData@@QEAA@XZ DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ConfigDialogData@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ConfigDialogData@@QEAA@XZ DD 019930522H
	DD	09H
	DD	imagerel $stateUnwindMap$??0ConfigDialogData@@QEAA@XZ
	DD	00H
	DD	00H
	DD	0aH
	DD	imagerel $ip2state$??0ConfigDialogData@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ConfigDialogData@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0ConfigDialogData@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0ConfigDialogData@@QEAA@XZ@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???0ConfigDialogData@@QEAA@XZ@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0???0ConfigDialogData@@QEAA@XZ@4HA
	DD	03H
	DD	imagerel ?dtor$4@?0???0ConfigDialogData@@QEAA@XZ@4HA
	DD	04H
	DD	imagerel ?dtor$5@?0???0ConfigDialogData@@QEAA@XZ@4HA
	DD	05H
	DD	imagerel ?dtor$6@?0???0ConfigDialogData@@QEAA@XZ@4HA
	DD	06H
	DD	imagerel ?dtor$7@?0???0ConfigDialogData@@QEAA@XZ@4HA
	DD	07H
	DD	imagerel ?dtor$8@?0???0ConfigDialogData@@QEAA@XZ@4HA
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0ConfigDialogData@@QEAA@XZ
_TEXT	SEGMENT
$T111020 = 32
this$ = 64
??0ConfigDialogData@@QEAA@XZ PROC			; ConfigDialogData::ConfigDialogData, COMDAT
$LN16:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T111020[rsp], -2
	mov	rbx, rcx
	xor	eax, eax
	mov	QWORD PTR [rcx+16], rax
	mov	DWORD PTR [rcx+24], eax
	mov	QWORD PTR [rcx+32], rax
	mov	DWORD PTR [rcx+40], eax
	add	rcx, 48					; 00000030H
	call	QWORD PTR __imp_??0StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+64]
	call	QWORD PTR __imp_??0StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+80]
	call	QWORD PTR __imp_??0StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+96]
	call	QWORD PTR __imp_??0StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+112]
	call	QWORD PTR __imp_??0StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+128]
	call	QWORD PTR __imp_??0StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+144]
	call	QWORD PTR __imp_??0StringList@@QEAA@XZ
	npad	1
	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0ConfigDialogData@@QEAA@XZ ENDP			; ConfigDialogData::ConfigDialogData
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T111020 = 32
this$ = 64
?dtor$0@?0???0ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 16
	jmp	??1?$List@UMediaOutputInfo@@@@QEAA@XZ	; List<MediaOutputInfo>::~List<MediaOutputInfo>
?dtor$0@?0???0ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$0
; Function compile flags: /Ogtpy
$T111020 = 32
this$ = 64
?dtor$1@?0???0ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 32					; 00000020H
	jmp	??1?$List@UtagSIZE@@@@QEAA@XZ		; List<tagSIZE>::~List<tagSIZE>
?dtor$1@?0???0ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$1
; Function compile flags: /Ogtpy
$T111020 = 32
this$ = 64
?dtor$2@?0???0ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 48					; 00000030H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$2@?0???0ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$2
; Function compile flags: /Ogtpy
$T111020 = 32
this$ = 64
?dtor$3@?0???0ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 64					; 00000040H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$3@?0???0ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$3
; Function compile flags: /Ogtpy
$T111020 = 32
this$ = 64
?dtor$4@?0???0ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$4
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 80					; 00000050H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$4@?0???0ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$4
; Function compile flags: /Ogtpy
$T111020 = 32
this$ = 64
?dtor$5@?0???0ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$5
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 96					; 00000060H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$5@?0???0ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$5
; Function compile flags: /Ogtpy
$T111020 = 32
this$ = 64
?dtor$6@?0???0ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$6
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 112				; 00000070H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$6@?0???0ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$6
; Function compile flags: /Ogtpy
$T111020 = 32
this$ = 64
?dtor$7@?0???0ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$7
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 128				; 00000080H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$7@?0???0ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$7
; Function compile flags: /Ogtpy
$T111020 = 32
this$ = 64
?dtor$8@?0???0ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$8
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 144				; 00000090H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$8@?0???0ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::ConfigDialogData'::`1'::dtor$8
text$x	ENDS
PUBLIC	devicename$GSCopy$
PUBLIC	deviceid$GSCopy$
PUBLIC	?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z ; OpenPropertyPages
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\xstring.h
pdata	SEGMENT
$pdata$?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z DD imagerel $LN13
	DD	imagerel $LN13+273
	DD	imagerel $unwind$?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z DD imagerel ?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z
	DD	0ffffffffH
	DD	imagerel ?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z+45
	DD	01H
	DD	imagerel ?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z+243
	DD	00H
	DD	imagerel ?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z+253
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z DD 051911H
	DD	014010dH
	DD	060057006H
	DD	03004H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z
	DD	080H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z@4HA
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
xdata	ENDS
;	COMDAT ?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z
_TEXT	SEGMENT
filter$ = 96
propPages$93041 = 104
cauuid$93042 = 112
$T111072 = 128
deviceid$GSCopy$ = 136
devicename$GSCopy$ = 144
hwnd$ = 192
devicename$ = 200
deviceid$ = 208
matchGUID$ = 216
?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z PROC ; OpenPropertyPages, COMDAT

; 879  : void OpenPropertyPages(HWND hwnd, String devicename, String deviceid, GUID matchGUID) {

$LN13:
	mov	rax, rsp
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 160				; 000000a0H
	mov	QWORD PTR $T111072[rsp], -2
	mov	r10, r9
	mov	rdi, r8
	mov	rbx, rdx
	mov	rsi, rcx
	mov	QWORD PTR [rax-40], rdx
	mov	QWORD PTR [rax-48], r8

; 880  :     IBaseFilter *filter = GetDeviceByValue(matchGUID,
; 881  :                                             L"FriendlyName", devicename,
; 882  :                                             L"DevicePath", deviceid);

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:$SG-10663
	mov	r8, QWORD PTR [rdx]
	lea	rdx, OFFSET FLAT:$SG-10664
	mov	rcx, r10
	call	?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z ; GetDeviceByValue
	mov	QWORD PTR filter$[rsp], rax

; 883  :     if(filter)

	test	rax, rax
	je	$LN4@OpenProper

; 884  :     {
; 885  :         ISpecifyPropertyPages *propPages;
; 886  :         CAUUID cauuid;
; 887  : 
; 888  :         if(SUCCEEDED(filter->QueryInterface(IID_ISpecifyPropertyPages, (void**)&propPages)))

	mov	r9, QWORD PTR [rax]
	lea	r8, QWORD PTR propPages$93041[rsp]
	lea	rdx, OFFSET FLAT:IID_ISpecifyPropertyPages
	mov	rcx, rax
	call	QWORD PTR [r9]
	test	eax, eax
	js	SHORT $LN3@OpenProper

; 889  :         {
; 890  :             if(SUCCEEDED(propPages->GetPages(&cauuid)))

	mov	rcx, QWORD PTR propPages$93041[rsp]
	mov	rax, QWORD PTR [rcx]
	lea	rdx, QWORD PTR cauuid$93042[rsp]
	call	QWORD PTR [rax+24]
	test	eax, eax
	js	SHORT $LN1@OpenProper

; 891  :             {
; 892  :                 if(cauuid.cElems)

	mov	edx, DWORD PTR cauuid$93042[rsp]
	test	edx, edx
	je	SHORT $LN1@OpenProper

; 893  :                 {
; 894  :                     OleCreatePropertyFrame(hwnd, 0, 0, NULL, 1, (LPUNKNOWN*)&filter, cauuid.cElems, cauuid.pElems, 0, 0, NULL);

	xor	eax, eax
	mov	QWORD PTR [rsp+80], rax
	mov	DWORD PTR [rsp+72], eax
	mov	DWORD PTR [rsp+64], eax
	mov	rax, QWORD PTR cauuid$93042[rsp+8]
	mov	QWORD PTR [rsp+56], rax
	mov	DWORD PTR [rsp+48], edx
	lea	rax, QWORD PTR filter$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], 1
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rsi
	call	QWORD PTR __imp_OleCreatePropertyFrame

; 895  :                     CoTaskMemFree(cauuid.pElems);

	mov	rcx, QWORD PTR cauuid$93042[rsp+8]
	call	QWORD PTR __imp_CoTaskMemFree
$LN1@OpenProper:

; 896  :                 }
; 897  :             }
; 898  :             propPages->Release();

	mov	rcx, QWORD PTR propPages$93041[rsp]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
$LN3@OpenProper:

; 899  :         }
; 900  : 
; 901  :         filter->Release();

	mov	rcx, QWORD PTR filter$[rsp]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN4@OpenProper:

; 902  :     }
; 903  : 
; 904  :     return;

	mov	rcx, rbx
	call	QWORD PTR __imp_??1String@@QEAA@XZ
	npad	1
	mov	rcx, rdi
	call	QWORD PTR __imp_??1String@@QEAA@XZ

; 905  : }

	add	rsp, 160				; 000000a0H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z ENDP ; OpenPropertyPages
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
filter$ = 96
propPages$93041 = 104
cauuid$93042 = 112
$T111072 = 128
deviceid$GSCopy$ = 136
devicename$GSCopy$ = 144
hwnd$ = 192
devicename$ = 200
deviceid$ = 208
matchGUID$ = 216
?dtor$0@?0??OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z@4HA PROC ; `OpenPropertyPages'::`1'::dtor$0
	mov	rcx, QWORD PTR deviceid$GSCopy$[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$0@?0??OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z@4HA ENDP ; `OpenPropertyPages'::`1'::dtor$0
; Function compile flags: /Ogtpy
filter$ = 96
propPages$93041 = 104
cauuid$93042 = 112
$T111072 = 128
deviceid$GSCopy$ = 136
devicename$GSCopy$ = 144
hwnd$ = 192
devicename$ = 200
deviceid$ = 208
matchGUID$ = 216
?dtor$1@?0??OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z@4HA PROC ; `OpenPropertyPages'::`1'::dtor$1
	mov	rcx, QWORD PTR devicename$GSCopy$[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$1@?0??OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z@4HA ENDP ; `OpenPropertyPages'::`1'::dtor$1
text$x	ENDS
PUBLIC	?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z ; FillOutListOfDevices
EXTRN	__ImageBase:BYTE
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\xstring.h
pdata	SEGMENT
$pdata$?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z DD imagerel $LN83
	DD	imagerel $LN83+1220
	DD	imagerel $unwind$?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z DD imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z
	DD	0ffffffffH
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+511
	DD	00H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+599
	DD	01H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+613
	DD	00H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+680
	DD	02H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+694
	DD	00H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+759
	DD	03H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+774
	DD	00H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+799
	DD	04H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+813
	DD	00H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+940
	DD	05H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+987
	DD	00H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+1012
	DD	06H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+1081
	DD	00H
	DD	imagerel ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z+1092
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z DD 0a2111H
	DD	0230119H
	DD	0e00bf00dH
	DD	0c007d009H
	DD	060047005H
	DD	050023003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z DD 019930522H
	DD	07H
	DD	imagerel $stateUnwindMap$?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z
	DD	00H
	DD	00H
	DD	0fH
	DD	imagerel $ip2state$?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z
	DD	0108H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$2@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$3@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$4@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$5@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$6@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
xdata	ENDS
;	COMDAT ?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z
_TEXT	SEGMENT
deviceInfo$ = 48
deviceEnum$ = 56
propertyData$92914 = 64
count$ = 72
videoDeviceEnum$ = 80
strDeviceName$92928 = 88
filter$92924 = 104
deviceIDList$GSCopy$1$ = 112
$T111089 = 120
$T111090 = 136
strDeviceID$92954 = 152
$T111088 = 168
$T111087 = 184
devicePathValue$92919 = 200
friendlyNameValue$92918 = 224
$T111091 = 248
$T111210 = 264
hwndCombo$ = 352
matchGUID$ = 360
deviceList$ = 368
deviceIDList$ = 376
GUIDList$ = 384
GUID_dump$ = 392
?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z PROC ; FillOutListOfDevices, COMDAT

; 656  : {

$LN83:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-24]
	sub	rsp, 280				; 00000118H
	mov	QWORD PTR $T111210[rbp-256], -2
	mov	rsi, r9
	mov	QWORD PTR deviceIDList$GSCopy$1$[rsp], r9
	mov	rdi, r8
	mov	r12, rdx
	mov	r14, rcx
	mov	r13, QWORD PTR GUIDList$[rbp-256]
	mov	r15, QWORD PTR GUID_dump$[rbp-256]

; 657  :     //deviceIDList->Clear();
; 658  :     //deviceList->Clear();
; 659  :     //if(hwndCombo != NULL) SendMessage(hwndCombo, CB_RESETCONTENT, 0, 0);
; 660  : 
; 661  :     //------------------------------------------
; 662  : 
; 663  :     for(int i=0; i<DEV_EXCEPTION_COUNT; i++)
; 664  :     {
; 665  :         IBaseFilter *exceptionFilter = GetExceptionDevice(lpExceptionGUIDs[i]);

	mov	rcx, QWORD PTR ?lpExceptionGUIDs@@3PAPEB_WA ; lpExceptionGUIDs
	call	?GetExceptionDevice@@YAPEAUIBaseFilter@@PEB_W@Z ; GetExceptionDevice
	mov	rbx, rax

; 666  :         if(exceptionFilter)

	test	rax, rax
	je	SHORT $LN28@FillOutLis

; 667  :         {
; 668  :             deviceList->Add(lpExceptionNames[i]);

	mov	rdx, QWORD PTR ?lpExceptionNames@@3PAPEB_WA ; lpExceptionNames
	mov	rcx, rdi
	call	QWORD PTR __imp_?Add@StringList@@QEAAIPEB_W@Z

; 669  :             deviceIDList->Add(lpExceptionGUIDs[i]);

	mov	rdx, QWORD PTR ?lpExceptionGUIDs@@3PAPEB_WA ; lpExceptionGUIDs
	mov	rcx, rsi
	call	QWORD PTR __imp_?Add@StringList@@QEAAIPEB_W@Z

; 670  : 
; 671  :             if(hwndCombo != NULL) SendMessage(hwndCombo, CB_ADDSTRING, 0, (LPARAM)lpExceptionNames[i]);

	test	r14, r14
	je	SHORT $LN25@FillOutLis
	mov	r9, QWORD PTR ?lpExceptionNames@@3PAPEB_WA ; lpExceptionNames
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, r14
	call	QWORD PTR __imp_SendMessageW
$LN25@FillOutLis:

; 672  : 
; 673  :             exceptionFilter->Release();

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+16]
$LN28@FillOutLis:

; 674  :         }
; 675  :     }
; 676  : 
; 677  :     //------------------------------------------
; 678  : 
; 679  :     ICreateDevEnum *deviceEnum;
; 680  :     IEnumMoniker *videoDeviceEnum;
; 681  : 
; 682  :     HRESULT err;
; 683  :     err = CoCreateInstance(CLSID_SystemDeviceEnum, NULL, CLSCTX_INPROC, IID_ICreateDevEnum, (void**)&deviceEnum);

	lea	rax, QWORD PTR deviceEnum$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:IID_ICreateDevEnum
	xor	edx, edx
	lea	r8d, QWORD PTR [rdx+3]
	lea	rcx, OFFSET FLAT:CLSID_SystemDeviceEnum
	call	QWORD PTR __imp_CoCreateInstance

; 684  :     if(FAILED(err))

	test	eax, eax
	jns	SHORT $LN24@FillOutLis

; 685  :     {
; 686  :         AppWarning(TEXT("FillOutListDevices: CoCreateInstance for the device enum failed, result = %08lX"), err);

	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG-10653
	call	QWORD PTR __imp_?AppWarning@@YAXPEB_WZZ

; 687  :         return;

	jmp	$LN1@FillOutLis
$LN24@FillOutLis:

; 688  :     }
; 689  : 
; 690  :     err = deviceEnum->CreateClassEnumerator(matchGUID, &videoDeviceEnum, 0);

	mov	rcx, QWORD PTR deviceEnum$[rsp]
	mov	rax, QWORD PTR [rcx]
	xor	r9d, r9d
	lea	r8, QWORD PTR videoDeviceEnum$[rsp]
	mov	rdx, r12
	call	QWORD PTR [rax+24]
	mov	ebx, eax

; 691  :     if(FAILED(err))

	test	eax, eax
	jns	SHORT $LN23@FillOutLis

; 692  :     {
; 693  :         AppWarning(TEXT("FillOutListDevices: deviceEnum->CreateClassEnumerator failed, result = %08lX"), err);

	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG-10654
	call	QWORD PTR __imp_?AppWarning@@YAXPEB_WZZ

; 694  :         deviceEnum->Release();

	mov	rcx, QWORD PTR deviceEnum$[rsp]

; 695  :         return;

	jmp	$LN79@FillOutLis
$LN23@FillOutLis:

; 696  :     }
; 697  : 
; 698  :     SafeRelease(deviceEnum);

	xor	esi, esi
	mov	rcx, QWORD PTR deviceEnum$[rsp]
	test	rcx, rcx
	je	SHORT $LN22@FillOutLis
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR deviceEnum$[rsp], rsi
$LN22@FillOutLis:

; 699  : 
; 700  :     if(err == S_FALSE) //no devices

	cmp	ebx, 1
	je	$LN1@FillOutLis

; 701  :         return;
; 702  : 
; 703  :     //------------------------------------------
; 704  : 
; 705  :     IMoniker *deviceInfo;
; 706  :     DWORD count;
; 707  : 
; 708  :     while(videoDeviceEnum->Next(1, &deviceInfo, &count) == S_OK)

	mov	rcx, QWORD PTR videoDeviceEnum$[rsp]
	mov	rax, QWORD PTR [rcx]
	lea	r9, QWORD PTR count$[rsp]
	lea	r8, QWORD PTR deviceInfo$[rsp]
	mov	edx, 1
	call	QWORD PTR [rax+24]
	test	eax, eax
	jne	$LN19@FillOutLis
	lea	ebx, QWORD PTR [rax+8]
$LL20@FillOutLis:

; 709  :     {
; 710  :         IPropertyBag *propertyData;
; 711  :         err = deviceInfo->BindToStorage(0, 0, IID_IPropertyBag, (void**)&propertyData);

	mov	rcx, QWORD PTR deviceInfo$[rsp]
	mov	rax, QWORD PTR [rcx]
	lea	rdx, QWORD PTR propertyData$92914[rsp]
	mov	QWORD PTR [rsp+32], rdx
	lea	r9, OFFSET FLAT:IID_IPropertyBag
	xor	r8d, r8d
	xor	edx, edx
	call	QWORD PTR [rax+72]

; 712  :         if(SUCCEEDED(err))

	test	eax, eax
	js	$LN3@FillOutLis

; 713  :         {
; 714  :             VARIANT friendlyNameValue, devicePathValue;
; 715  :             friendlyNameValue.vt = VT_BSTR;

	mov	WORD PTR friendlyNameValue$92918[rbp-256], bx

; 716  :             friendlyNameValue.bstrVal = NULL;

	mov	QWORD PTR friendlyNameValue$92918[rbp-248], rsi

; 717  :             devicePathValue.vt = VT_BSTR;

	mov	WORD PTR devicePathValue$92919[rbp-256], bx

; 718  :             devicePathValue.bstrVal = NULL;

	mov	QWORD PTR devicePathValue$92919[rbp-248], rsi

; 719  : 
; 720  :             err = propertyData->Read(L"FriendlyName", &friendlyNameValue, NULL);

	mov	rcx, QWORD PTR propertyData$92914[rsp]
	mov	rax, QWORD PTR [rcx]
	xor	r9d, r9d
	lea	r8, QWORD PTR friendlyNameValue$92918[rbp-256]
	lea	rdx, OFFSET FLAT:$SG-10655
	call	QWORD PTR [rax+24]
	mov	ebx, eax

; 721  :             propertyData->Read(L"DevicePath", &devicePathValue, NULL);

	mov	rcx, QWORD PTR propertyData$92914[rsp]
	mov	r10, QWORD PTR [rcx]
	xor	r9d, r9d
	lea	r8, QWORD PTR devicePathValue$92919[rbp-256]
	lea	rdx, OFFSET FLAT:$SG-10656
	call	QWORD PTR [r10+24]

; 722  : 
; 723  :             if(SUCCEEDED(err))

	test	ebx, ebx
	js	$LN16@FillOutLis

; 724  :             {
; 725  :                 IBaseFilter *filter;
; 726  :                 err = deviceInfo->BindToObject(NULL, 0, IID_IBaseFilter, (void**)&filter);

	mov	rcx, QWORD PTR deviceInfo$[rsp]
	mov	rax, QWORD PTR [rcx]
	lea	rdx, QWORD PTR filter$92924[rsp]
	mov	QWORD PTR [rsp+32], rdx
	lea	r9, OFFSET FLAT:IID_IBaseFilter
	xor	r8d, r8d
	xor	edx, edx
	call	QWORD PTR [rax+64]

; 727  :                 if(SUCCEEDED(err))

	test	eax, eax
	js	$LN16@FillOutLis

; 728  :                 {
; 729  :                     String strDeviceName = (CWSTR)friendlyNameValue.bstrVal;

	mov	rdx, QWORD PTR friendlyNameValue$92918[rbp-248]
	lea	rcx, QWORD PTR strDeviceName$92928[rsp]
	call	QWORD PTR __imp_??0String@@QEAA@PEB_W@Z
	npad	1

; 730  :                     deviceList->Add(strDeviceName);

	lea	rdx, QWORD PTR strDeviceName$92928[rsp]
	mov	rcx, rdi
	call	QWORD PTR __imp_?Add@StringList@@QEAAIAEBVString@@@Z

; 731  :                     if(GUIDList != NULL) {

	test	r13, r13
	je	$LN15@FillOutLis

; 732  :                         if(matchGUID == CLSID_AudioInputDeviceCategory) GUIDList->Add("CLSID_AudioInputDeviceCategory");

	lea	r8, OFFSET FLAT:__ImageBase
	mov	rdx, QWORD PTR [r12]
	cmp	rdx, QWORD PTR CLSID_AudioInputDeviceCategory[r8]
	jne	SHORT $LN75@FillOutLis
	mov	rdx, QWORD PTR [r12+8]
	cmp	rdx, QWORD PTR CLSID_AudioInputDeviceCategory[r8+8]
	jne	SHORT $LN75@FillOutLis
	mov	eax, esi
	jmp	SHORT $LN76@FillOutLis
$LN75@FillOutLis:
	sbb	eax, eax
	sbb	eax, -1
$LN76@FillOutLis:
	test	eax, eax
	jne	SHORT $LN14@FillOutLis
	lea	rdx, OFFSET FLAT:$SG-10657
	lea	rcx, QWORD PTR $T111087[rbp-256]
	call	QWORD PTR __imp_??0String@@QEAA@PEBD@Z
	npad	1
	lea	rdx, QWORD PTR $T111087[rbp-256]
	mov	rcx, r13
	call	QWORD PTR __imp_?Add@StringList@@QEAAIAEBVString@@@Z
	npad	1
	lea	rcx, QWORD PTR $T111087[rbp-256]

; 733  :                         else if(matchGUID == CLSID_VideoInputDeviceCategory) GUIDList->Add("CLSID_VideoInputDeviceCategory");

	jmp	$LN80@FillOutLis
$LN14@FillOutLis:
	mov	rdx, QWORD PTR [r12]
	cmp	rdx, QWORD PTR CLSID_VideoInputDeviceCategory[r8]
	jne	SHORT $LN73@FillOutLis
	mov	rdx, QWORD PTR [r12+8]
	cmp	rdx, QWORD PTR CLSID_VideoInputDeviceCategory[r8+8]
	jne	SHORT $LN73@FillOutLis
	mov	eax, esi
	jmp	SHORT $LN74@FillOutLis
$LN73@FillOutLis:
	sbb	eax, eax
	sbb	eax, -1
$LN74@FillOutLis:
	test	eax, eax
	jne	SHORT $LN12@FillOutLis
	lea	rdx, OFFSET FLAT:$SG-10658
	lea	rcx, QWORD PTR $T111088[rbp-256]
	call	QWORD PTR __imp_??0String@@QEAA@PEBD@Z
	npad	1
	lea	rdx, QWORD PTR $T111088[rbp-256]
	mov	rcx, r13
	call	QWORD PTR __imp_?Add@StringList@@QEAAIAEBVString@@@Z
	npad	1
	lea	rcx, QWORD PTR $T111088[rbp-256]

; 734  :                         else if(matchGUID == CLSID_AudioRendererCategory) GUIDList->Add("CLSID_AudioRendererCategory");

	jmp	SHORT $LN80@FillOutLis
$LN12@FillOutLis:
	mov	rdx, QWORD PTR [r12]
	cmp	rdx, QWORD PTR CLSID_AudioRendererCategory[r8]
	jne	SHORT $LN71@FillOutLis
	mov	rdx, QWORD PTR [r12+8]
	cmp	rdx, QWORD PTR CLSID_AudioRendererCategory[r8+8]
	jne	SHORT $LN71@FillOutLis
	mov	eax, esi
	jmp	SHORT $LN72@FillOutLis
$LN71@FillOutLis:
	sbb	eax, eax
	sbb	eax, -1
$LN72@FillOutLis:
	test	eax, eax
	jne	SHORT $LN10@FillOutLis
	lea	rdx, OFFSET FLAT:$SG-10659
	lea	rcx, QWORD PTR $T111089[rsp]
	call	QWORD PTR __imp_??0String@@QEAA@PEBD@Z
	npad	1
	lea	rdx, QWORD PTR $T111089[rsp]
	mov	rcx, r13
	call	QWORD PTR __imp_?Add@StringList@@QEAAIAEBVString@@@Z
	npad	1
	lea	rcx, QWORD PTR $T111089[rsp]
	jmp	SHORT $LN80@FillOutLis
$LN10@FillOutLis:

; 735  :                         else GUIDList->Add("Unknown device category");

	lea	rdx, OFFSET FLAT:$SG-10660
	lea	rcx, QWORD PTR $T111090[rbp-256]
	call	QWORD PTR __imp_??0String@@QEAA@PEBD@Z
	npad	1
	lea	rdx, QWORD PTR $T111090[rbp-256]
	mov	rcx, r13
	call	QWORD PTR __imp_?Add@StringList@@QEAAIAEBVString@@@Z
	npad	1
	lea	rcx, QWORD PTR $T111090[rbp-256]
$LN80@FillOutLis:
	call	QWORD PTR __imp_??1String@@QEAA@XZ

; 736  :                         GUID_dump[deviceList->Num()] = matchGUID;

	mov	ecx, DWORD PTR [rdi+8]
	add	rcx, rcx
	mov	eax, DWORD PTR [r12]
	mov	DWORD PTR [r15+rcx*8], eax
	mov	eax, DWORD PTR [r12+4]
	mov	DWORD PTR [r15+rcx*8+4], eax
	mov	eax, DWORD PTR [r12+8]
	mov	DWORD PTR [r15+rcx*8+8], eax
	mov	eax, DWORD PTR [r12+12]
	mov	DWORD PTR [r15+rcx*8+12], eax
$LN15@FillOutLis:

; 737  :                     }
; 738  : 
; 739  :                     UINT count = 0;
; 740  :                     UINT id = INVALID;

	or	ebx, -1					; ffffffffH
$LL8@FillOutLis:

; 741  :                     while((id = deviceList->FindNextValueIndexI(strDeviceName, id)) != INVALID) count++;

	inc	ebx
$LN82@FillOutLis:
	cmp	ebx, DWORD PTR [rdi+8]
	jae	SHORT $LN70@FillOutLis
	mov	ecx, ebx
	shl	rcx, 4
	add	rcx, QWORD PTR [rdi]
	mov	rdx, QWORD PTR strDeviceName$92928[rsp]
	call	QWORD PTR __imp_?CompareI@String@@QEBAHPEB_W@Z
	test	eax, eax
	jne	SHORT $LN67@FillOutLis
	inc	ebx
	jmp	SHORT $LN82@FillOutLis
$LN67@FillOutLis:
	cmp	ebx, -1					; ffffffffH
	je	SHORT $LN70@FillOutLis
	inc	esi
	jmp	SHORT $LL8@FillOutLis
$LN70@FillOutLis:

; 742  : 
; 743  :                     if(count > 1)

	cmp	esi, 1
	jbe	SHORT $LN6@FillOutLis

; 744  :                         strDeviceName << TEXT(" (") << UIntString(count) << TEXT(")");

	mov	r8d, 10
	mov	edx, esi
	lea	rcx, QWORD PTR $T111091[rbp-256]
	call	QWORD PTR __imp_?UIntString@@YA?AVString@@IH@Z
	mov	rbx, rax
	lea	rdx, OFFSET FLAT:$SG-10661
	lea	rcx, QWORD PTR strDeviceName$92928[rsp]
	call	QWORD PTR __imp_??6String@@QEAAAEAV0@PEB_W@Z
	mov	rcx, rax
	mov	rdx, rbx
	call	QWORD PTR __imp_??6String@@QEAAAEAV0@AEBV0@@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:$SG-10662
	call	QWORD PTR __imp_??6String@@QEAAAEAV0@PEB_W@Z
	npad	1
	lea	rcx, QWORD PTR $T111091[rbp-256]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
$LN6@FillOutLis:

; 745  : 
; 746  :                     String strDeviceID = (CWSTR)devicePathValue.bstrVal;

	mov	rdx, QWORD PTR devicePathValue$92919[rbp-248]
	lea	rcx, QWORD PTR strDeviceID$92954[rbp-256]
	call	QWORD PTR __imp_??0String@@QEAA@PEB_W@Z
	npad	1

; 747  :                     if(hwndCombo != NULL) SendMessage(hwndCombo, CB_ADDSTRING, 0, (LPARAM)strDeviceName.Array());

	test	r14, r14
	je	SHORT $LN5@FillOutLis
	mov	r9, QWORD PTR strDeviceName$92928[rsp]
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, r14
	call	QWORD PTR __imp_SendMessageW
$LN5@FillOutLis:

; 748  :                     deviceIDList->Add(strDeviceID);

	lea	rdx, QWORD PTR strDeviceID$92954[rbp-256]
	mov	rcx, QWORD PTR deviceIDList$GSCopy$1$[rsp]
	call	QWORD PTR __imp_?Add@StringList@@QEAAIAEBVString@@@Z

; 749  : 
; 750  :                     SafeRelease(filter);

	mov	rcx, QWORD PTR filter$92924[rsp]
	test	rcx, rcx
	je	SHORT $LN77@FillOutLis
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	xor	esi, esi
	mov	QWORD PTR filter$92924[rsp], rsi
	jmp	SHORT $LN4@FillOutLis
$LN77@FillOutLis:

; 748  :                     deviceIDList->Add(strDeviceID);

	xor	esi, esi
$LN4@FillOutLis:

; 751  :                 }

	lea	rcx, QWORD PTR strDeviceID$92954[rbp-256]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR strDeviceName$92928[rsp]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
$LN16@FillOutLis:

; 752  :             }
; 753  : 
; 754  :             SafeRelease(propertyData);

	mov	rcx, QWORD PTR propertyData$92914[rsp]
	test	rcx, rcx
	je	SHORT $LN78@FillOutLis
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR propertyData$92914[rsp], rsi
$LN78@FillOutLis:

; 749  : 
; 750  :                     SafeRelease(filter);

	mov	ebx, 8
$LN3@FillOutLis:

; 755  :         }
; 756  : 
; 757  :         SafeRelease(deviceInfo);

	mov	rcx, QWORD PTR deviceInfo$[rsp]
	test	rcx, rcx
	je	SHORT $LN2@FillOutLis
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR deviceInfo$[rsp], rsi
$LN2@FillOutLis:

; 701  :         return;
; 702  : 
; 703  :     //------------------------------------------
; 704  : 
; 705  :     IMoniker *deviceInfo;
; 706  :     DWORD count;
; 707  : 
; 708  :     while(videoDeviceEnum->Next(1, &deviceInfo, &count) == S_OK)

	mov	rcx, QWORD PTR videoDeviceEnum$[rsp]
	mov	rax, QWORD PTR [rcx]
	lea	r9, QWORD PTR count$[rsp]
	lea	r8, QWORD PTR deviceInfo$[rsp]
	mov	edx, 1
	call	QWORD PTR [rax+24]
	test	eax, eax
	je	$LL20@FillOutLis
$LN19@FillOutLis:

; 758  :     }
; 759  : 
; 760  :     SafeRelease(videoDeviceEnum);

	mov	rcx, QWORD PTR videoDeviceEnum$[rsp]
	test	rcx, rcx
	je	SHORT $LN1@FillOutLis
$LN79@FillOutLis:
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
$LN1@FillOutLis:

; 761  : }

	add	rsp, 280				; 00000118H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbx
	pop	rbp
	ret	0
?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z ENDP ; FillOutListOfDevices
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
deviceInfo$ = 48
deviceEnum$ = 56
propertyData$92914 = 64
count$ = 72
videoDeviceEnum$ = 80
strDeviceName$92928 = 88
filter$92924 = 104
deviceIDList$GSCopy$1$ = 112
$T111089 = 120
$T111090 = 136
strDeviceID$92954 = 152
$T111088 = 168
$T111087 = 184
devicePathValue$92919 = 200
friendlyNameValue$92918 = 224
$T111091 = 248
$T111210 = 264
hwndCombo$ = 352
matchGUID$ = 360
deviceList$ = 368
deviceIDList$ = 376
GUIDList$ = 384
GUID_dump$ = 392
?dtor$0@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA PROC ; `FillOutListOfDevices'::`1'::dtor$0
	lea	rcx, QWORD PTR strDeviceName$92928[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$0@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA ENDP ; `FillOutListOfDevices'::`1'::dtor$0
; Function compile flags: /Ogtpy
deviceInfo$ = 48
deviceEnum$ = 56
propertyData$92914 = 64
count$ = 72
videoDeviceEnum$ = 80
strDeviceName$92928 = 88
filter$92924 = 104
deviceIDList$GSCopy$1$ = 112
$T111089 = 120
$T111090 = 136
strDeviceID$92954 = 152
$T111088 = 168
$T111087 = 184
devicePathValue$92919 = 200
friendlyNameValue$92918 = 224
$T111091 = 248
$T111210 = 264
hwndCombo$ = 352
matchGUID$ = 360
deviceList$ = 368
deviceIDList$ = 376
GUIDList$ = 384
GUID_dump$ = 392
?dtor$1@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA PROC ; `FillOutListOfDevices'::`1'::dtor$1
	lea	rcx, QWORD PTR $T111087[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$1@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA ENDP ; `FillOutListOfDevices'::`1'::dtor$1
; Function compile flags: /Ogtpy
deviceInfo$ = 48
deviceEnum$ = 56
propertyData$92914 = 64
count$ = 72
videoDeviceEnum$ = 80
strDeviceName$92928 = 88
filter$92924 = 104
deviceIDList$GSCopy$1$ = 112
$T111089 = 120
$T111090 = 136
strDeviceID$92954 = 152
$T111088 = 168
$T111087 = 184
devicePathValue$92919 = 200
friendlyNameValue$92918 = 224
$T111091 = 248
$T111210 = 264
hwndCombo$ = 352
matchGUID$ = 360
deviceList$ = 368
deviceIDList$ = 376
GUIDList$ = 384
GUID_dump$ = 392
?dtor$2@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA PROC ; `FillOutListOfDevices'::`1'::dtor$2
	lea	rcx, QWORD PTR $T111088[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$2@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA ENDP ; `FillOutListOfDevices'::`1'::dtor$2
; Function compile flags: /Ogtpy
deviceInfo$ = 48
deviceEnum$ = 56
propertyData$92914 = 64
count$ = 72
videoDeviceEnum$ = 80
strDeviceName$92928 = 88
filter$92924 = 104
deviceIDList$GSCopy$1$ = 112
$T111089 = 120
$T111090 = 136
strDeviceID$92954 = 152
$T111088 = 168
$T111087 = 184
devicePathValue$92919 = 200
friendlyNameValue$92918 = 224
$T111091 = 248
$T111210 = 264
hwndCombo$ = 352
matchGUID$ = 360
deviceList$ = 368
deviceIDList$ = 376
GUIDList$ = 384
GUID_dump$ = 392
?dtor$3@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA PROC ; `FillOutListOfDevices'::`1'::dtor$3
	lea	rcx, QWORD PTR $T111089[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$3@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA ENDP ; `FillOutListOfDevices'::`1'::dtor$3
; Function compile flags: /Ogtpy
deviceInfo$ = 48
deviceEnum$ = 56
propertyData$92914 = 64
count$ = 72
videoDeviceEnum$ = 80
strDeviceName$92928 = 88
filter$92924 = 104
deviceIDList$GSCopy$1$ = 112
$T111089 = 120
$T111090 = 136
strDeviceID$92954 = 152
$T111088 = 168
$T111087 = 184
devicePathValue$92919 = 200
friendlyNameValue$92918 = 224
$T111091 = 248
$T111210 = 264
hwndCombo$ = 352
matchGUID$ = 360
deviceList$ = 368
deviceIDList$ = 376
GUIDList$ = 384
GUID_dump$ = 392
?dtor$4@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA PROC ; `FillOutListOfDevices'::`1'::dtor$4
	lea	rcx, QWORD PTR $T111090[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$4@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA ENDP ; `FillOutListOfDevices'::`1'::dtor$4
; Function compile flags: /Ogtpy
deviceInfo$ = 48
deviceEnum$ = 56
propertyData$92914 = 64
count$ = 72
videoDeviceEnum$ = 80
strDeviceName$92928 = 88
filter$92924 = 104
deviceIDList$GSCopy$1$ = 112
$T111089 = 120
$T111090 = 136
strDeviceID$92954 = 152
$T111088 = 168
$T111087 = 184
devicePathValue$92919 = 200
friendlyNameValue$92918 = 224
$T111091 = 248
$T111210 = 264
hwndCombo$ = 352
matchGUID$ = 360
deviceList$ = 368
deviceIDList$ = 376
GUIDList$ = 384
GUID_dump$ = 392
?dtor$5@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA PROC ; `FillOutListOfDevices'::`1'::dtor$5
	lea	rcx, QWORD PTR $T111091[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$5@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA ENDP ; `FillOutListOfDevices'::`1'::dtor$5
; Function compile flags: /Ogtpy
deviceInfo$ = 48
deviceEnum$ = 56
propertyData$92914 = 64
count$ = 72
videoDeviceEnum$ = 80
strDeviceName$92928 = 88
filter$92924 = 104
deviceIDList$GSCopy$1$ = 112
$T111089 = 120
$T111090 = 136
strDeviceID$92954 = 152
$T111088 = 168
$T111087 = 184
devicePathValue$92919 = 200
friendlyNameValue$92918 = 224
$T111091 = 248
$T111210 = 264
hwndCombo$ = 352
matchGUID$ = 360
deviceList$ = 368
deviceIDList$ = 376
GUIDList$ = 384
GUID_dump$ = 392
?dtor$6@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA PROC ; `FillOutListOfDevices'::`1'::dtor$6
	lea	rcx, QWORD PTR strDeviceID$92954[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$6@?0??FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z@4HA ENDP ; `FillOutListOfDevices'::`1'::dtor$6
text$x	ENDS
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\alloc.h
pdata	SEGMENT
$pdata$?ClearOutputList@ConfigDialogData@@QEAAXXZ DD imagerel $LN25
	DD	imagerel $LN25+14
	DD	imagerel $unwind$?ClearOutputList@ConfigDialogData@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?ClearOutputList@ConfigDialogData@@QEAAXXZ DD imagerel $LN25+14
	DD	imagerel $LN25+35
	DD	imagerel $chain$0$?ClearOutputList@ConfigDialogData@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?ClearOutputList@ConfigDialogData@@QEAAXXZ DD imagerel $LN25+35
	DD	imagerel $LN25+179
	DD	imagerel $chain$2$?ClearOutputList@ConfigDialogData@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?ClearOutputList@ConfigDialogData@@QEAAXXZ DD imagerel $LN25+179
	DD	imagerel $LN25+193
	DD	imagerel $chain$3$?ClearOutputList@ConfigDialogData@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?ClearOutputList@ConfigDialogData@@QEAAXXZ DD imagerel $LN25+193
	DD	imagerel $LN25+229
	DD	imagerel $chain$4$?ClearOutputList@ConfigDialogData@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?ClearOutputList@ConfigDialogData@@QEAAXXZ DD 021H
	DD	imagerel $LN25
	DD	imagerel $LN25+14
	DD	imagerel $unwind$?ClearOutputList@ConfigDialogData@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?ClearOutputList@ConfigDialogData@@QEAAXXZ DD 021H
	DD	imagerel $LN25+14
	DD	imagerel $LN25+35
	DD	imagerel $chain$0$?ClearOutputList@ConfigDialogData@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?ClearOutputList@ConfigDialogData@@QEAAXXZ DD 040a21H
	DD	07540aH
	DD	063405H
	DD	imagerel $LN25+14
	DD	imagerel $LN25+35
	DD	imagerel $chain$0$?ClearOutputList@ConfigDialogData@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?ClearOutputList@ConfigDialogData@@QEAAXXZ DD 020521H
	DD	087405H
	DD	imagerel $LN25
	DD	imagerel $LN25+14
	DD	imagerel $unwind$?ClearOutputList@ConfigDialogData@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearOutputList@ConfigDialogData@@QEAAXXZ DD 040b01H
	DD	09640bH
	DD	0c007320bH
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
xdata	ENDS
;	COMDAT ?ClearOutputList@ConfigDialogData@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ClearOutputList@ConfigDialogData@@QEAAXXZ PROC		; ConfigDialogData::ClearOutputList, COMDAT

; 580  :     {

$LN25:
	mov	QWORD PTR [rsp+32], rsi
	push	r12
	sub	rsp, 32					; 00000020H

; 581  :         for(UINT i=0; i<outputList.Num(); i++)

	xor	r12d, r12d
	mov	QWORD PTR [rsp+64], rdi
	mov	rsi, rcx
	mov	edi, r12d
	cmp	DWORD PTR [rcx+24], r12d
	jbe	$LN1@ClearOutpu

; 582  :             outputList[i].FreeData();

	mov	QWORD PTR [rsp+48], rbx
	mov	QWORD PTR [rsp+56], rbp
	cmp	r12d, DWORD PTR [rcx+24]
	jb	SHORT $LN8@ClearOutpu
	lea	rdx, OFFSET FLAT:?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	lea	rcx, OFFSET FLAT:??_R0?AUMediaOutputInfo@@@8
	call	?name@type_info@@QEBAPEBDPEAU__type_info_node@@@Z ; type_info::name
	lea	rcx, OFFSET FLAT:??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@
	mov	r8d, r12d
	mov	rdx, rax
	call	QWORD PTR __imp_?CrashError@@YAXPEB_WZZ
	mov	rbx, QWORD PTR [rsi+16]
	jmp	SHORT $LN9@ClearOutpu
$LN8@ClearOutpu:
	mov	ebx, edi
	shl	rbx, 6
	add	rbx, QWORD PTR [rsi+16]
$LN9@ClearOutpu:
	mov	rbp, QWORD PTR [rbx+8]
	cmp	DWORD PTR [rbp+72], r12d
	je	SHORT $LN14@ClearOutpu
	mov	rcx, QWORD PTR [rbp+80]
	call	QWORD PTR __imp_CoTaskMemFree
	mov	DWORD PTR [rbp+72], r12d
	mov	QWORD PTR [rbp+80], r12
$LN14@ClearOutpu:
	mov	rcx, QWORD PTR [rbp+64]
	test	rcx, rcx
	je	SHORT $LN13@ClearOutpu
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR [rbp+64], r12
$LN13@ClearOutpu:
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_CoTaskMemFree
	inc	edi
	cmp	edi, DWORD PTR [rsi+24]
	jb	SHORT $LN8@ClearOutpu
	mov	rbp, QWORD PTR [rsp+56]
	mov	rbx, QWORD PTR [rsp+48]
$LN1@ClearOutpu:

; 583  :         outputList.Clear();

	mov	rdx, QWORD PTR [rsi+16]
	mov	rdi, QWORD PTR [rsp+64]
	test	rdx, rdx
	je	SHORT $LN17@ClearOutpu
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	mov	QWORD PTR [rsi+16], r12
	mov	DWORD PTR [rsi+24], r12d
$LN17@ClearOutpu:

; 584  :     }

	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r12
	ret	0
?ClearOutputList@ConfigDialogData@@QEAAXXZ ENDP		; ConfigDialogData::ClearOutputList
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\alloc.h
pdata	SEGMENT
$pdata$??1ConfigDialogData@@QEAA@XZ DD imagerel $LN26
	DD	imagerel $LN26+193
	DD	imagerel $unwind$??1ConfigDialogData@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ConfigDialogData@@QEAA@XZ DD imagerel ??1ConfigDialogData@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1ConfigDialogData@@QEAA@XZ+27
	DD	08H
	DD	imagerel ??1ConfigDialogData@@QEAA@XZ+33
	DD	07H
	DD	imagerel ??1ConfigDialogData@@QEAA@XZ+47
	DD	06H
	DD	imagerel ??1ConfigDialogData@@QEAA@XZ+61
	DD	05H
	DD	imagerel ??1ConfigDialogData@@QEAA@XZ+72
	DD	04H
	DD	imagerel ??1ConfigDialogData@@QEAA@XZ+83
	DD	03H
	DD	imagerel ??1ConfigDialogData@@QEAA@XZ+94
	DD	02H
	DD	imagerel ??1ConfigDialogData@@QEAA@XZ+105
	DD	01H
	DD	imagerel ??1ConfigDialogData@@QEAA@XZ+116
	DD	00H
	DD	imagerel ??1ConfigDialogData@@QEAA@XZ+150
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ConfigDialogData@@QEAA@XZ DD 041811H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1ConfigDialogData@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1ConfigDialogData@@QEAA@XZ DD 019930522H
	DD	09H
	DD	imagerel $stateUnwindMap$??1ConfigDialogData@@QEAA@XZ
	DD	00H
	DD	00H
	DD	0bH
	DD	imagerel $ip2state$??1ConfigDialogData@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ConfigDialogData@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1ConfigDialogData@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???1ConfigDialogData@@QEAA@XZ@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???1ConfigDialogData@@QEAA@XZ@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0???1ConfigDialogData@@QEAA@XZ@4HA
	DD	03H
	DD	imagerel ?dtor$4@?0???1ConfigDialogData@@QEAA@XZ@4HA
	DD	04H
	DD	imagerel ?dtor$5@?0???1ConfigDialogData@@QEAA@XZ@4HA
	DD	05H
	DD	imagerel ?dtor$6@?0???1ConfigDialogData@@QEAA@XZ@4HA
	DD	06H
	DD	imagerel ?dtor$7@?0???1ConfigDialogData@@QEAA@XZ@4HA
	DD	07H
	DD	imagerel ?dtor$8@?0???1ConfigDialogData@@QEAA@XZ@4HA
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
xdata	ENDS
;	COMDAT ??1ConfigDialogData@@QEAA@XZ
_TEXT	SEGMENT
$T111358 = 32
this$ = 64
??1ConfigDialogData@@QEAA@XZ PROC			; ConfigDialogData::~ConfigDialogData, COMDAT

; 575  :     {

$LN26:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T111358[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	rbx, rcx

; 576  :         ClearOutputList();

	call	?ClearOutputList@ConfigDialogData@@QEAAXXZ ; ConfigDialogData::ClearOutputList
	npad	1

; 577  :     }

	lea	rcx, QWORD PTR [rbx+144]
	call	QWORD PTR __imp_??1StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+128]
	call	QWORD PTR __imp_??1StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+112]
	call	QWORD PTR __imp_??1StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+96]
	call	QWORD PTR __imp_??1StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+80]
	call	QWORD PTR __imp_??1StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+64]
	call	QWORD PTR __imp_??1StringList@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+48]
	call	QWORD PTR __imp_??1StringList@@QEAA@XZ
	npad	1
	mov	rdx, QWORD PTR [rbx+32]
	xor	edi, edi
	test	rdx, rdx
	je	SHORT $LN14@ConfigDial
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	mov	QWORD PTR [rbx+32], rdi
	mov	DWORD PTR [rbx+40], edi
$LN14@ConfigDial:
	mov	rdx, QWORD PTR [rbx+16]
	test	rdx, rdx
	je	SHORT $LN21@ConfigDial
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	mov	QWORD PTR [rbx+16], rdi
	mov	DWORD PTR [rbx+24], edi
$LN21@ConfigDial:
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1ConfigDialogData@@QEAA@XZ ENDP			; ConfigDialogData::~ConfigDialogData
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T111358 = 32
this$ = 64
?dtor$0@?0???1ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 16
	jmp	??1?$List@UMediaOutputInfo@@@@QEAA@XZ	; List<MediaOutputInfo>::~List<MediaOutputInfo>
?dtor$0@?0???1ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$0
; Function compile flags: /Ogtpy
$T111358 = 32
this$ = 64
?dtor$1@?0???1ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 32					; 00000020H
	jmp	??1?$List@UtagSIZE@@@@QEAA@XZ		; List<tagSIZE>::~List<tagSIZE>
?dtor$1@?0???1ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$1
; Function compile flags: /Ogtpy
$T111358 = 32
this$ = 64
?dtor$2@?0???1ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 48					; 00000030H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$2@?0???1ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$2
; Function compile flags: /Ogtpy
$T111358 = 32
this$ = 64
?dtor$3@?0???1ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 64					; 00000040H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$3@?0???1ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$3
; Function compile flags: /Ogtpy
$T111358 = 32
this$ = 64
?dtor$4@?0???1ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$4
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 80					; 00000050H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$4@?0???1ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$4
; Function compile flags: /Ogtpy
$T111358 = 32
this$ = 64
?dtor$5@?0???1ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$5
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 96					; 00000060H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$5@?0???1ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$5
; Function compile flags: /Ogtpy
$T111358 = 32
this$ = 64
?dtor$6@?0???1ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$6
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 112				; 00000070H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$6@?0???1ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$6
; Function compile flags: /Ogtpy
$T111358 = 32
this$ = 64
?dtor$7@?0???1ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$7
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 128				; 00000080H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$7@?0???1ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$7
; Function compile flags: /Ogtpy
$T111358 = 32
this$ = 64
?dtor$8@?0???1ConfigDialogData@@QEAA@XZ@4HA PROC	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$8
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 144				; 00000090H
	rex_jmp	QWORD PTR __imp_??1StringList@@QEAA@XZ
?dtor$8@?0???1ConfigDialogData@@QEAA@XZ@4HA ENDP	; `ConfigDialogData::~ConfigDialogData'::`1'::dtor$8
text$x	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z ; GetOutputPin
EXTRN	__GSHandlerCheck:PROC
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
pdata	SEGMENT
$pdata$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z DD imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z DD imagerel $LN57+66
	DD	imagerel $LN57+665
	DD	imagerel $chain$3$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z DD imagerel $LN57+665
	DD	imagerel $LN57+689
	DD	imagerel $chain$4$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z DD imagerel $LN57+689
	DD	imagerel $LN57+733
	DD	imagerel $chain$5$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z DD 080021H
	DD	036c400H
	DD	0377400H
	DD	03c6400H
	DD	03b3400H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z DD 021H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z DD 083221H
	DD	036c432H
	DD	037742aH
	DD	03c6410H
	DD	03b3408H
	DD	imagerel $LN57
	DD	imagerel $LN57+66
	DD	imagerel $unwind$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z DD 032219H
	DD	0380111H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	01a0H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
xdata	ENDS
;	COMDAT ?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z
_TEXT	SEGMENT
curPin$ = 64
propertySet$92316 = 72
pins$ = 80
num$ = 88
pinDir$92312 = 92
curVal$92304 = 96
mediaTypesEnum$92300 = 104
pinMediaType$92299 = 112
retSize$92321 = 120
chi$92322 = 128
pinCategory$92320 = 400
__$ArrayPad$ = 416
filter$ = 464
?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z PROC ; GetOutputPin, COMDAT

; 272  : {

$LN57:
	push	rbp
	lea	rbp, QWORD PTR [rsp-192]
	sub	rsp, 448				; 000001c0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax

; 273  :     IPin *foundPin = NULL;
; 274  :     IEnumPins *pins;
; 275  : 
; 276  :     if(!filter) return NULL;

	test	rcx, rcx
	jne	SHORT $LN22@GetOutputP
$LN56@GetOutputP:
	xor	eax, eax
	jmp	$LN23@GetOutputP
$LN22@GetOutputP:

; 277  :     if(FAILED(filter->EnumPins(&pins))) return NULL;

	mov	rax, QWORD PTR [rcx]
	lea	rdx, QWORD PTR pins$[rsp]
	call	QWORD PTR [rax+80]
	test	eax, eax
	js	SHORT $LN56@GetOutputP

; 278  : 
; 279  :     IPin *curPin;
; 280  :     ULONG num;
; 281  :     while(pins->Next(1, &curPin, &num) == S_OK)

	mov	rcx, QWORD PTR pins$[rsp]
	mov	QWORD PTR [rsp+472], rbx
	mov	QWORD PTR [rsp+480], rsi
	mov	rax, QWORD PTR [rcx]
	lea	r9, QWORD PTR num$[rsp]
	lea	r8, QWORD PTR curPin$[rsp]
	mov	edx, 1
	mov	QWORD PTR [rsp+440], rdi
	mov	QWORD PTR [rsp+432], r12
	call	QWORD PTR [rax+24]
	test	eax, eax
	jne	$LN49@GetOutputP
	xor	esi, esi
	lea	r12, OFFSET FLAT:__ImageBase
	npad	8
$LL20@GetOutputP:

; 282  :     {
; 283  :         if(majorType)
; 284  :         {
; 285  :             AM_MEDIA_TYPE *pinMediaType;
; 286  : 
; 287  :             IEnumMediaTypes *mediaTypesEnum;
; 288  :             if(FAILED(curPin->EnumMediaTypes(&mediaTypesEnum)))

	mov	rcx, QWORD PTR curPin$[rsp]
	lea	rdx, QWORD PTR mediaTypesEnum$92300[rsp]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+96]
	test	eax, eax

; 289  :             {
; 290  :                 SafeRelease(curPin);
; 291  :                 continue;

	js	$LN3@GetOutputP

; 292  :             }
; 293  : 
; 294  :             ULONG curVal = 0;
; 295  :             HRESULT hRes = mediaTypesEnum->Next(1, &pinMediaType, &curVal);

	mov	rcx, QWORD PTR mediaTypesEnum$92300[rsp]
	mov	DWORD PTR curVal$92304[rsp], esi
	lea	r9, QWORD PTR curVal$92304[rsp]
	mov	rax, QWORD PTR [rcx]
	lea	r8, QWORD PTR pinMediaType$92299[rsp]
	mov	edx, 1
	call	QWORD PTR [rax+24]

; 296  : 
; 297  :             mediaTypesEnum->Release();

	mov	rcx, QWORD PTR mediaTypesEnum$92300[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	ebx, eax
	call	QWORD PTR [rdx+16]

; 298  : 
; 299  :             if(hRes != S_OK)

	test	ebx, ebx

; 300  :             {
; 301  :                 SafeRelease(curPin);
; 302  :                 continue;

	jne	$LN3@GetOutputP

; 303  :             }
; 304  : 
; 305  :             BOOL bDesiredMediaType = (pinMediaType->majortype == *majorType);

	mov	rbx, QWORD PTR pinMediaType$92299[rsp]
	mov	rdx, QWORD PTR [rbx]
	cmp	rdx, QWORD PTR MEDIATYPE_Audio[r12]
	jne	SHORT $LN47@GetOutputP
	mov	rdx, QWORD PTR [rbx+8]
	cmp	rdx, QWORD PTR MEDIATYPE_Audio[r12+8]
	jne	SHORT $LN47@GetOutputP
	mov	eax, esi
	jmp	SHORT $LN48@GetOutputP
$LN47@GetOutputP:
	sbb	eax, eax
	sbb	eax, -1
$LN48@GetOutputP:
	test	eax, eax
	mov	edi, esi
	sete	dil

; 306  :             DeleteMediaType(pinMediaType);

	test	rbx, rbx
	je	SHORT $LN29@GetOutputP
	cmp	DWORD PTR [rbx+72], esi
	je	SHORT $LN33@GetOutputP
	mov	rcx, QWORD PTR [rbx+80]
	call	QWORD PTR __imp_CoTaskMemFree
	mov	DWORD PTR [rbx+72], esi
	mov	QWORD PTR [rbx+80], rsi
$LN33@GetOutputP:
	mov	rcx, QWORD PTR [rbx+64]
	test	rcx, rcx
	je	SHORT $LN32@GetOutputP
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR [rbx+64], rsi
$LN32@GetOutputP:
	mov	rcx, rbx
	call	QWORD PTR __imp_CoTaskMemFree
$LN29@GetOutputP:

; 307  : 
; 308  :             if(!bDesiredMediaType)
; 309  :             {
; 310  :                 SafeRelease(curPin);

	mov	rcx, QWORD PTR curPin$[rsp]
	test	edi, edi

; 311  :                 continue;

	je	$LN55@GetOutputP

; 312  :             }
; 313  :         }
; 314  : 
; 315  :         //------------------------------
; 316  : 
; 317  :         PIN_DIRECTION pinDir;
; 318  :         if(SUCCEEDED(curPin->QueryDirection(&pinDir)))

	mov	rax, QWORD PTR [rcx]
	lea	rdx, QWORD PTR pinDir$92312[rsp]
	call	QWORD PTR [rax+72]
	test	eax, eax
	js	$LN3@GetOutputP

; 319  :         {
; 320  :             if(pinDir == PINDIR_OUTPUT)

	cmp	DWORD PTR pinDir$92312[rsp], 1
	jne	$LN3@GetOutputP

; 321  :             {
; 322  :                 IKsPropertySet *propertySet;
; 323  :                 if(SUCCEEDED(curPin->QueryInterface(IID_IKsPropertySet, (void**)&propertySet)))

	mov	rcx, QWORD PTR curPin$[rsp]
	lea	r8, QWORD PTR propertySet$92316[rsp]
	lea	rdx, OFFSET FLAT:IID_IKsPropertySet
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax]
	test	eax, eax
	js	$LN3@GetOutputP

; 324  :                 {
; 325  :                     GUID pinCategory;
; 326  :                     DWORD retSize;
; 327  : 
; 328  :                     PIN_INFO chi;
; 329  :                     curPin->QueryPinInfo(&chi);

	mov	rcx, QWORD PTR curPin$[rsp]
	lea	rdx, QWORD PTR chi$92322[rbp-256]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+64]

; 330  : 
; 331  :                     if(chi.pFilter)

	mov	rcx, QWORD PTR chi$92322[rbp-256]
	test	rcx, rcx
	je	SHORT $LN8@GetOutputP

; 332  :                         chi.pFilter->Release();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
$LN8@GetOutputP:

; 333  : 
; 334  :                     if(SUCCEEDED(propertySet->Get(AMPROPSETID_Pin, AMPROPERTY_PIN_CATEGORY, NULL, 0, &pinCategory, sizeof(GUID), &retSize)))

	mov	rcx, QWORD PTR propertySet$92316[rsp]
	lea	rdx, QWORD PTR retSize$92321[rsp]
	xor	r9d, r9d
	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rsp+56], rdx
	lea	rdx, QWORD PTR pinCategory$92320[rbp-256]
	mov	DWORD PTR [rsp+48], 16
	mov	QWORD PTR [rsp+40], rdx
	lea	rdx, OFFSET FLAT:AMPROPSETID_Pin
	xor	r8d, r8d
	mov	DWORD PTR [rsp+32], esi
	call	QWORD PTR [rax+32]
	test	eax, eax
	js	SHORT $LN6@GetOutputP

; 335  :                     {
; 336  :                         if(pinCategory == PIN_CATEGORY_CAPTURE)

	lea	rax, QWORD PTR pinCategory$92320[rbp-256]
	mov	rdx, QWORD PTR [rax]
	cmp	rdx, QWORD PTR PIN_CATEGORY_CAPTURE[r12]
	jne	SHORT $LN45@GetOutputP
	mov	rdx, QWORD PTR [rax+8]
	cmp	rdx, QWORD PTR PIN_CATEGORY_CAPTURE[r12+8]
	jne	SHORT $LN45@GetOutputP
	mov	eax, esi
	jmp	SHORT $LN46@GetOutputP
$LN45@GetOutputP:
	sbb	eax, eax
	sbb	eax, -1
$LN46@GetOutputP:
	test	eax, eax
	je	$LN44@GetOutputP
$LN6@GetOutputP:

; 342  :                         }
; 343  :                     }
; 344  : 
; 345  :                     SafeRelease(propertySet);

	mov	rcx, QWORD PTR propertySet$92316[rsp]
	test	rcx, rcx
	je	SHORT $LN3@GetOutputP
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR propertySet$92316[rsp], rsi
$LN3@GetOutputP:

; 346  :                 }
; 347  :             }
; 348  :         }
; 349  : 
; 350  :         SafeRelease(curPin);

	mov	rcx, QWORD PTR curPin$[rsp]
$LN55@GetOutputP:
	test	rcx, rcx
	je	SHORT $LN2@GetOutputP
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR curPin$[rsp], rsi
$LN2@GetOutputP:

; 278  : 
; 279  :     IPin *curPin;
; 280  :     ULONG num;
; 281  :     while(pins->Next(1, &curPin, &num) == S_OK)

	mov	rcx, QWORD PTR pins$[rsp]
	lea	r9, QWORD PTR num$[rsp]
	lea	r8, QWORD PTR curPin$[rsp]
	mov	rax, QWORD PTR [rcx]
	mov	edx, 1
	call	QWORD PTR [rax+24]
	test	eax, eax
	je	$LL20@GetOutputP
$LN49@GetOutputP:

; 351  :     }
; 352  : 
; 353  :     SafeRelease(pins);

	mov	rcx, QWORD PTR pins$[rsp]
	test	rcx, rcx
	je	SHORT $LN1@GetOutputP
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
$LN1@GetOutputP:

; 354  : 
; 355  :     return foundPin;

	xor	eax, eax
$LN53@GetOutputP:
	mov	rdi, QWORD PTR [rsp+440]
	mov	rsi, QWORD PTR [rsp+480]
	mov	rbx, QWORD PTR [rsp+472]
	mov	r12, QWORD PTR [rsp+432]
$LN23@GetOutputP:

; 356  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 448				; 000001c0H
	pop	rbp
	ret	0
$LN44@GetOutputP:

; 337  :                         {
; 338  :                             SafeRelease(propertySet);

	mov	rcx, QWORD PTR propertySet$92316[rsp]
	test	rcx, rcx
	je	SHORT $LN5@GetOutputP
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR propertySet$92316[rsp], rsi
$LN5@GetOutputP:

; 339  :                             SafeRelease(pins);

	mov	rcx, QWORD PTR pins$[rsp]
	test	rcx, rcx
	je	SHORT $LN4@GetOutputP
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
$LN4@GetOutputP:

; 340  : 
; 341  :                             return curPin;

	mov	rax, QWORD PTR curPin$[rsp]
	jmp	SHORT $LN53@GetOutputP
?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z ENDP ; GetOutputPin
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\um\winbase.inl
pdata	SEGMENT
$pdata$IsolationAwarePrivatenPgViNgRzlnPgpgk DD imagerel $LN13
	DD	imagerel $LN13+92
	DD	imagerel $unwind$IsolationAwarePrivatenPgViNgRzlnPgpgk
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$IsolationAwarePrivatenPgViNgRzlnPgpgk DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT IsolationAwarePrivatenPgViNgRzlnPgpgk
_TEXT	SEGMENT
pulpCookie$ = 48
IsolationAwarePrivatenPgViNgRzlnPgpgk PROC		; COMDAT

; 536  : {

$LN13:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 537  :     BOOL fResult = FALSE;

	xor	ebx, ebx
	mov	rdi, rcx

; 538  : 
; 539  :     if (WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ)

	cmp	DWORD PTR WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ, ebx
	je	SHORT $LN11@IsolationA

; 540  :     {
; 541  :         const static char debugString[] = "IsolationAware function called after IsolationAwareCleanup\n";
; 542  :         OutputDebugStringA(debugString);

	lea	rcx, OFFSET FLAT:?debugString@?4??IsolationAwarePrivatenPgViNgRzlnPgpgk@@9@4QBDB ; `IsolationAwarePrivatenPgViNgRzlnPgpgk'::`5'::debugString
	call	QWORD PTR __imp_OutputDebugStringA

; 543  :     }
; 544  : 
; 545  : #ifdef _M_IX86
; 546  :     if (IsolationAwarePrivateT_SqbjaYRiRY)
; 547  :     {
; 548  :         fResult = TRUE;
; 549  :         goto Exit;
; 550  :     }
; 551  : #endif
; 552  : 
; 553  :     /* Do not call Init if Cleanup has been called. */
; 554  :     if (!WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ)

	cmp	DWORD PTR WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ, ebx
	jne	SHORT $LN4@IsolationA
$LN11@IsolationA:

; 555  :     {
; 556  :         if (!WinbaseIsolationAwarePrivatetRgzlnPgpgk())

	call	WinbaseIsolationAwarePrivatetRgzlnPgpgk
	test	eax, eax
	je	SHORT $LN12@IsolationA
$LN4@IsolationA:

; 557  :             goto Exit;
; 558  :     }
; 559  :     /* If Cleanup has been called and id3 was in use, this will activate NULL. */
; 560  :     if (!IsolationAwareActivateActCtx(WinbaseIsolationAwarePrivateT_UnPgpgk, pulpCookie))

	mov	rcx, QWORD PTR WinbaseIsolationAwarePrivateT_UnPgpgk
	mov	rdx, rdi
	call	QWORD PTR __imp_ActivateActCtx
	mov	ecx, 1
	test	eax, eax
	cmovne	ebx, ecx
$LN12@IsolationA:

; 561  :         goto Exit;
; 562  : 
; 563  :     fResult = TRUE;
; 564  : Exit:
; 565  : #ifdef _M_IX86
; 566  :     if (!fResult)
; 567  :     {
; 568  :         const DWORD dwLastError = GetLastError();
; 569  :         if (dwLastError == ERROR_PROC_NOT_FOUND
; 570  :             || dwLastError == ERROR_MOD_NOT_FOUND
; 571  :             || dwLastError == ERROR_CALL_NOT_IMPLEMENTED)
; 572  :         {
; 573  :             IsolationAwarePrivateT_SqbjaYRiRY = TRUE;
; 574  :             fResult = TRUE;
; 575  :         }
; 576  :     }
; 577  : #endif
; 578  :     return fResult;

	mov	eax, ebx
$Exit$17053:

; 579  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
IsolationAwarePrivatenPgViNgRzlnPgpgk ENDP
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0DeviceSource@@QEAA@XZ DD imagerel $LN20
	DD	imagerel $LN20+161
	DD	imagerel $unwind$??0DeviceSource@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0DeviceSource@@QEAA@XZ DD imagerel ??0DeviceSource@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0DeviceSource@@QEAA@XZ+32
	DD	00H
	DD	imagerel ??0DeviceSource@@QEAA@XZ+53
	DD	01H
	DD	imagerel ??0DeviceSource@@QEAA@XZ+67
	DD	02H
	DD	imagerel ??0DeviceSource@@QEAA@XZ+81
	DD	03H
	DD	imagerel ??0DeviceSource@@QEAA@XZ+95
	DD	04H
	DD	imagerel ??0DeviceSource@@QEAA@XZ+109
	DD	05H
	DD	imagerel ??0DeviceSource@@QEAA@XZ+123
	DD	06H
	DD	imagerel ??0DeviceSource@@QEAA@XZ+137
	DD	07H
	DD	imagerel ??0DeviceSource@@QEAA@XZ+152
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0DeviceSource@@QEAA@XZ DD 021311H
	DD	03006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0DeviceSource@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0DeviceSource@@QEAA@XZ DD 019930522H
	DD	09H
	DD	imagerel $stateUnwindMap$??0DeviceSource@@QEAA@XZ
	DD	00H
	DD	00H
	DD	0aH
	DD	imagerel $ip2state$??0DeviceSource@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0DeviceSource@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0DeviceSource@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0DeviceSource@@QEAA@XZ@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???0DeviceSource@@QEAA@XZ@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0???0DeviceSource@@QEAA@XZ@4HA
	DD	03H
	DD	imagerel ?dtor$4@?0???0DeviceSource@@QEAA@XZ@4HA
	DD	04H
	DD	imagerel ?dtor$5@?0???0DeviceSource@@QEAA@XZ@4HA
	DD	05H
	DD	imagerel ?dtor$6@?0???0DeviceSource@@QEAA@XZ@4HA
	DD	06H
	DD	imagerel ?dtor$7@?0???0DeviceSource@@QEAA@XZ@4HA
	DD	07H
	DD	imagerel ?dtor$8@?0???0DeviceSource@@QEAA@XZ@4HA
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0DeviceSource@@QEAA@XZ
_TEXT	SEGMENT
$T112496 = 32
this$ = 64
??0DeviceSource@@QEAA@XZ PROC				; DeviceSource::DeviceSource, COMDAT
$LN20:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T112496[rsp], -2
	mov	rbx, rcx
	mov	rax, QWORD PTR __imp_??_7ImageSource@@6B@
	mov	QWORD PTR [rcx], rax
	lea	rax, OFFSET FLAT:??_7DeviceSource@@6B@
	mov	QWORD PTR [rcx], rax
	add	rcx, 112				; 00000070H
	call	QWORD PTR __imp_??0String@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+128]
	call	QWORD PTR __imp_??0String@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+144]
	call	QWORD PTR __imp_??0String@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+160]
	call	QWORD PTR __imp_??0String@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+176]
	call	QWORD PTR __imp_??0String@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+192]
	call	QWORD PTR __imp_??0String@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbx+208]
	call	QWORD PTR __imp_??0String@@QEAA@XZ
	npad	1
	xor	eax, eax
	mov	QWORD PTR [rbx+368], rax
	mov	DWORD PTR [rbx+376], eax
	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0DeviceSource@@QEAA@XZ ENDP				; DeviceSource::DeviceSource
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T112496 = 32
this$ = 64
?dtor$0@?0???0DeviceSource@@QEAA@XZ@4HA PROC		; `DeviceSource::DeviceSource'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1ImageSource@@UEAA@XZ
?dtor$0@?0???0DeviceSource@@QEAA@XZ@4HA ENDP		; `DeviceSource::DeviceSource'::`1'::dtor$0
; Function compile flags: /Ogtpy
$T112496 = 32
this$ = 64
?dtor$1@?0???0DeviceSource@@QEAA@XZ@4HA PROC		; `DeviceSource::DeviceSource'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 112				; 00000070H
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$1@?0???0DeviceSource@@QEAA@XZ@4HA ENDP		; `DeviceSource::DeviceSource'::`1'::dtor$1
; Function compile flags: /Ogtpy
$T112496 = 32
this$ = 64
?dtor$2@?0???0DeviceSource@@QEAA@XZ@4HA PROC		; `DeviceSource::DeviceSource'::`1'::dtor$2
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 128				; 00000080H
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$2@?0???0DeviceSource@@QEAA@XZ@4HA ENDP		; `DeviceSource::DeviceSource'::`1'::dtor$2
; Function compile flags: /Ogtpy
$T112496 = 32
this$ = 64
?dtor$3@?0???0DeviceSource@@QEAA@XZ@4HA PROC		; `DeviceSource::DeviceSource'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 144				; 00000090H
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$3@?0???0DeviceSource@@QEAA@XZ@4HA ENDP		; `DeviceSource::DeviceSource'::`1'::dtor$3
; Function compile flags: /Ogtpy
$T112496 = 32
this$ = 64
?dtor$4@?0???0DeviceSource@@QEAA@XZ@4HA PROC		; `DeviceSource::DeviceSource'::`1'::dtor$4
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 160				; 000000a0H
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$4@?0???0DeviceSource@@QEAA@XZ@4HA ENDP		; `DeviceSource::DeviceSource'::`1'::dtor$4
; Function compile flags: /Ogtpy
$T112496 = 32
this$ = 64
?dtor$5@?0???0DeviceSource@@QEAA@XZ@4HA PROC		; `DeviceSource::DeviceSource'::`1'::dtor$5
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 176				; 000000b0H
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$5@?0???0DeviceSource@@QEAA@XZ@4HA ENDP		; `DeviceSource::DeviceSource'::`1'::dtor$5
; Function compile flags: /Ogtpy
$T112496 = 32
this$ = 64
?dtor$6@?0???0DeviceSource@@QEAA@XZ@4HA PROC		; `DeviceSource::DeviceSource'::`1'::dtor$6
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 192				; 000000c0H
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$6@?0???0DeviceSource@@QEAA@XZ@4HA ENDP		; `DeviceSource::DeviceSource'::`1'::dtor$6
; Function compile flags: /Ogtpy
$T112496 = 32
this$ = 64
?dtor$7@?0???0DeviceSource@@QEAA@XZ@4HA PROC		; `DeviceSource::DeviceSource'::`1'::dtor$7
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 208				; 000000d0H
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$7@?0???0DeviceSource@@QEAA@XZ@4HA ENDP		; `DeviceSource::DeviceSource'::`1'::dtor$7
; Function compile flags: /Ogtpy
$T112496 = 32
this$ = 64
?dtor$8@?0???0DeviceSource@@QEAA@XZ@4HA PROC		; `DeviceSource::DeviceSource'::`1'::dtor$8
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 368				; 00000170H
	jmp	??1?$List@PEAUSampleData@@@@QEAA@XZ	; List<SampleData * __ptr64>::~List<SampleData * __ptr64>
?dtor$8@?0???0DeviceSource@@QEAA@XZ@4HA ENDP		; `DeviceSource::DeviceSource'::`1'::dtor$8
text$x	ENDS
PUBLIC	?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z ; CreateDShowSource
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\inline.h
pdata	SEGMENT
$pdata$?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z DD imagerel $LN24
	DD	imagerel $LN24+191
	DD	imagerel $unwind$?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z DD imagerel ?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z
	DD	0ffffffffH
	DD	imagerel ?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z+124
	DD	00H
	DD	imagerel ?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z+140
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z DD 041411H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z@4HA
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
xdata	ENDS
;	COMDAT ?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z
_TEXT	SEGMENT
$T112561 = 32
data$ = 64
$T112514 = 72
?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z PROC ; CreateDShowSource, COMDAT

; 1271 : {

$LN24:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T112561[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	rdi, rcx

; 1272 :     DeviceSource *source = new DeviceSource;

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	mov	edx, 480				; 000001e0H
	call	QWORD PTR [rax+8]
	xor	ebx, ebx
	mov	rdx, rax
	lea	r8d, QWORD PTR [rbx+7]
	npad	11
$LL23@CreateDSho:
	mov	QWORD PTR [rdx], rbx
	mov	QWORD PTR [rdx+8], rbx
	mov	QWORD PTR [rdx+16], rbx
	add	rdx, 64					; 00000040H
	mov	QWORD PTR [rdx-40], rbx
	mov	QWORD PTR [rdx-32], rbx
	mov	QWORD PTR [rdx-24], rbx
	mov	QWORD PTR [rdx-16], rbx
	mov	QWORD PTR [rdx-8], rbx
	dec	r8
	jne	SHORT $LL23@CreateDSho
	mov	QWORD PTR [rdx], rbx
	mov	QWORD PTR [rdx+8], rbx
	mov	QWORD PTR [rdx+16], rbx
	mov	QWORD PTR [rdx+24], rbx
	mov	QWORD PTR $T112514[rsp], rax
	test	rax, rax
	je	SHORT $LN5@CreateDSho
	mov	rcx, rax
	call	??0DeviceSource@@QEAA@XZ
	mov	rbx, rax
$LN5@CreateDSho:

; 1273 :     if(!source->Init(data))

	mov	rdx, rdi
	mov	rcx, rbx
	call	?Init@DeviceSource@@QEAA_NPEAVXElement@@@Z ; DeviceSource::Init
	test	al, al
	jne	SHORT $LN1@CreateDSho

; 1274 :     {
; 1275 :         delete source;

	test	rbx, rbx
	je	SHORT $LN6@CreateDSho
	mov	rax, QWORD PTR [rbx]
	mov	edx, 1
	mov	rcx, rbx
	call	QWORD PTR [rax]
$LN6@CreateDSho:

; 1276 :         return NULL;

	xor	eax, eax
	jmp	SHORT $LN2@CreateDSho
$LN1@CreateDSho:

; 1277 :     }
; 1278 : 
; 1279 :     return source;

	mov	rax, rbx
$LN2@CreateDSho:

; 1280 : }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z ENDP ; CreateDShowSource
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T112561 = 32
data$ = 64
$T112514 = 72
?dtor$0@?0??CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z@4HA PROC ; `CreateDShowSource'::`1'::dtor$0
	mov	rcx, QWORD PTR $T112514[rdx]
	jmp	??3@YAXPEAX@Z				; operator delete
?dtor$0@?0??CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z@4HA ENDP ; `CreateDShowSource'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GConfigDialogData@@QEAAPEAXI@Z DD imagerel $LN8
	DD	imagerel $LN8+42
	DD	imagerel $unwind$??_GConfigDialogData@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GConfigDialogData@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GConfigDialogData@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
??_GConfigDialogData@@QEAAPEAXI@Z PROC			; ConfigDialogData::`scalar deleting destructor', COMDAT
$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	??1ConfigDialogData@@QEAA@XZ		; ConfigDialogData::~ConfigDialogData
	mov	r11, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [r11]
	mov	rdx, rbx
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GConfigDialogData@@QEAAPEAXI@Z ENDP			; ConfigDialogData::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	$T112609
PUBLIC	$T112608
PUBLIC	$T112607
PUBLIC	$T112612
PUBLIC	$T112611
PUBLIC	$T112610
PUBLIC	$T112613
PUBLIC	$T112614
PUBLIC	?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z	; ConfigureDialogProc
;	COMDAT ?$S1@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4IA
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\xstring.h
_BSS	SEGMENT
?$S1@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4IA DD 01H DUP (?) ; `ConfigureDialogProc'::`2'::$S1
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN112
	DD	imagerel $LN112+3573
	DD	imagerel $unwind$?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA DD imagerel ?dtor$0@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA
	DD	imagerel ?dtor$0@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA+22
	DD	imagerel $unwind$?dtor$0@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z DD imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z
	DD	0ffffffffH
	DD	imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z+73
	DD	00H
	DD	imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z+113
	DD	0ffffffffH
	DD	imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z+780
	DD	06H
	DD	imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z+883
	DD	0ffffffffH
	DD	imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z+898
	DD	06H
	DD	imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z+1296
	DD	0ffffffffH
	DD	imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z+1618
	DD	04H
	DD	imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z+1648
	DD	0ffffffffH
	DD	imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z+1761
	DD	02H
	DD	imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z+1788
	DD	0ffffffffH
	DD	imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z+2788
	DD	01H
	DD	imagerel ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z+3531
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA DD 010201H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z DD 092911H
	DD	0d6829H
	DD	0223425H
	DD	01c0119H
	DD	0600d700eH
	DD	0500cH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z DD 019930522H
	DD	07H
	DD	imagerel $stateUnwindMap$?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z
	DD	00H
	DD	00H
	DD	0dH
	DD	imagerel $ip2state$?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z
	DD	0a0H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA
	DD	04H
	DD	imagerel ?dtor$5@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$6@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
xdata	ENDS
;	COMDAT ?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
source$1$ = 48
hwndAudioList$1$ = 48
tv1118 = 48
tv1092 = 48
tv681 = 48
$T112605 = 48
$T112601 = 48
configData$1$ = 56
hwndAudioDeviceList$1$ = 56
filter$1$ = 56
source$1$ = 56
tv634 = 56
tv568 = 56
hwndCrossbarList$1$ = 64
strAudioDevice$93256 = 64
$T112603 = 64
$T112599 = 64
hwndTemp$93106 = 64
strAudioDevice$93080 = 64
$T112614 = 80
$T112613 = 80
$T112610 = 80
$T112609 = 80
$T112612 = 96
$T112607 = 96
$T112611 = 112
$T112608 = 112
$T112604 = 128
$T112600 = 144
$T112740 = 160
$T112598 = 168
$T112602 = 184
hwnd$ = 256
bHasAudio$1$ = 264
soundOutputType$1$ = 264
bFoundGlobal$93259 = 264
message$ = 264
wParam$ = 272
lParam$ = 280
?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z PROC	; ConfigureDialogProc, COMDAT

; 908  : {

$LN112:
	mov	rax, rsp
	mov	QWORD PTR [rax+32], r9
	mov	QWORD PTR [rax+8], rcx
	push	rbp
	push	rsi
	push	rdi
	lea	rbp, QWORD PTR [rax-95]
	sub	rsp, 224				; 000000e0H
	mov	QWORD PTR $T112740[rbp-153], -2
	mov	QWORD PTR [rax+24], rbx
	movaps	XMMWORD PTR [rax-40], xmm6
	mov	r10, r9
	mov	rsi, r8
	mov	ebx, edx
	mov	rdi, rcx

; 909  :     static bool bSelectingColor = false;
; 910  :     static bool bMouseDown = false;
; 911  :     static ColorSelectionData colorData;

	mov	eax, DWORD PTR ?$S1@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4IA
	xor	ecx, ecx
	test	al, 1
	jne	SHORT $LN66@ConfigureD
	or	eax, 1
	mov	DWORD PTR ?$S1@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4IA, eax
	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A, rcx
	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+8, rcx
	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+16, rcx
	mov	BYTE PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+24, cl
	lea	rcx, OFFSET FLAT:??__FcolorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@YAXXZ ; `ConfigureDialogProc'::`2'::`dynamic atexit destructor for 'colorData''
	call	atexit
	npad	1
	xor	ecx, ecx
	mov	r10, QWORD PTR lParam$[rbp-153]
$LN66@ConfigureD:

; 912  : 
; 913  :     switch(message)

	sub	ebx, 272				; 00000110H
	je	$LN63@ConfigureD
	dec	ebx
	jne	$LN47@ConfigureD

; 997  :             }
; 998  : 
; 999  :         case WM_DESTROY:
; 1000 :             break;
; 1001 : 
; 1002 :         case WM_LBUTTONDOWN:
; 1003 :             break;
; 1004 : 
; 1005 :         case WM_MOUSEMOVE:
; 1006 :             break;
; 1007 : 
; 1008 :         case WM_LBUTTONUP:
; 1009 :             break;
; 1010 : 
; 1011 :         case WM_CAPTURECHANGED:
; 1012 :             break;
; 1013 : 
; 1014 :         case WM_COMMAND:
; 1015 :             switch(LOWORD(wParam))

	movzx	ebx, si
	cmp	ebx, 1007				; 000003efH
	jg	$LN69@ConfigureD
	je	$LN23@ConfigureD
	mov	ecx, ebx
	dec	ecx
	je	$LN16@ConfigureD
	dec	ecx
	je	$LN3@ConfigureD
	sub	ecx, 1001				; 000003e9H
	je	SHORT $LN28@ConfigureD
	dec	ecx
	je	$LN23@ConfigureD
	jmp	$LN47@ConfigureD
$LN28@ConfigureD:

; 1088 : 
; 1089 :                         break;
; 1090 :                     }
; 1091 : 
; 1092 :                 case IDC_AUDIOLIST:
; 1093 :                     if(HIWORD(wParam) == CBN_SELCHANGE)

	shr	rsi, 16
	cmp	si, 1
	jne	$LN47@ConfigureD

; 1094 :                     {
; 1095 :                         HWND hwndDevices = (HWND)lParam;
; 1096 :                         UINT id = (UINT)SendMessage(hwndDevices, CB_GETCURSEL, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 327				; 00000147H
	mov	rcx, r10
	call	QWORD PTR __imp_SendMessageW
	mov	rsi, rax

; 1097 : 
; 1098 :                         ConfigDialogData *configData = (ConfigDialogData*)GetWindowLongPtr(hwnd, DWLP_USER);

	mov	edx, 16
	mov	rcx, rdi
	call	QWORD PTR __imp_GetWindowLongPtrW
	mov	rbx, rax

; 1099 :                         IBaseFilter *filter = GetDeviceByValue(CLSID_AudioInputDeviceCategory,
; 1100 :                                                                 L"FriendlyName", configData->audioNameList[id],
; 1101 :                                                                 L"DevicePath", configData->audioIDList[id]);

	lea	rcx, QWORD PTR [rax+96]
	mov	edx, esi
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rdi, QWORD PTR [rax]
	lea	rcx, QWORD PTR [rbx+80]
	mov	edx, esi
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	QWORD PTR [rsp+32], rdi
	lea	r9, OFFSET FLAT:$SG-10672
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:$SG-10673
	lea	rcx, OFFSET FLAT:CLSID_AudioInputDeviceCategory
	call	?GetDeviceByValue@@YAPEAUIBaseFilter@@AEBU_GUID@@PEA_WPEB_W12@Z ; GetDeviceByValue
	mov	QWORD PTR filter$1$[rbp-153], rax

; 1102 :                         if(filter)

	test	rax, rax
	je	$LN47@ConfigureD

; 1103 :                         {
; 1104 :                             //--------------------------------
; 1105 :                             // get audio info
; 1106 : 
; 1107 :                             bool bHasAudio = false;

	xor	bl, bl
	mov	BYTE PTR bHasAudio$1$[rbp-153], bl

; 1108 : 
; 1109 :                             IPin *outputPin = GetOutputPin(filter, &MEDIATYPE_Audio);

	mov	rcx, rax
	call	?GetOutputPin@@YAPEAUIPin@@PEAUIBaseFilter@@PEBU_GUID@@@Z ; GetOutputPin

; 1110 :                             if(outputPin)

	test	rax, rax
	je	SHORT $LN25@ConfigureD

; 1111 :                             {
; 1112 :                                 bHasAudio = true;

	mov	bl, 1
	mov	BYTE PTR bHasAudio$1$[rbp-153], bl

; 1113 :                                 outputPin->Release();

	mov	rdx, QWORD PTR [rax]
	mov	rcx, rax
	call	QWORD PTR [rdx+16]
$LN25@ConfigureD:

; 1114 :                             }
; 1115 : 
; 1116 :                             EnableWindow(GetDlgItem(hwnd, IDC_NOSOUND),          bHasAudio);

	movzx	ebx, bl
	mov	esi, 1031				; 00000407H
	mov	edx, esi
	mov	rdi, QWORD PTR hwnd$[rbp-153]
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	edx, ebx
	call	QWORD PTR __imp_EnableWindow

; 1117 :                             EnableWindow(GetDlgItem(hwnd, IDC_PLAYDESKTOPSOUND), bHasAudio);

	lea	edx, QWORD PTR [rsi-1]
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	edx, ebx
	call	QWORD PTR __imp_EnableWindow

; 1118 :                             EnableWindow(GetDlgItem(hwnd, IDC_OUTPUTSOUND),      bHasAudio);

	lea	edx, QWORD PTR [rsi-2]
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	edx, ebx
	call	QWORD PTR __imp_EnableWindow

; 1119 :                             EnableWindow(GetDlgItem(hwnd, IDC_VOLUME),           bHasAudio);

	lea	edx, QWORD PTR [rsi+4]
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	edx, ebx
	call	QWORD PTR __imp_EnableWindow

; 1120 : 
; 1121 :                             if(!bHasAudio)

	cmp	BYTE PTR bHasAudio$1$[rbp-153], 0
	jne	$LN24@ConfigureD

; 1122 :                             {
; 1123 :                                 SendMessage(GetDlgItem(hwnd, IDC_NOSOUND),          BM_SETCHECK, BST_UNCHECKED, 0);

	mov	edx, esi
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 241				; 000000f1H
	call	QWORD PTR __imp_SendMessageW

; 1124 :                                 SendMessage(GetDlgItem(hwnd, IDC_PLAYDESKTOPSOUND), BM_SETCHECK, BST_UNCHECKED, 0);

	lea	edx, QWORD PTR [rsi-1]
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 241				; 000000f1H
	call	QWORD PTR __imp_SendMessageW

; 1125 :                                 SendMessage(GetDlgItem(hwnd, IDC_OUTPUTSOUND),      BM_SETCHECK, BST_UNCHECKED, 0);

	lea	edx, QWORD PTR [rsi-2]
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 241				; 000000f1H
	call	QWORD PTR __imp_SendMessageW

; 1126 : 
; 1127 :                                 EnableWindow(GetDlgItem(hwnd, IDC_TIMEOFFSET),      FALSE);

	lea	edx, QWORD PTR [rsi+2]
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	edx, edx
	call	QWORD PTR __imp_EnableWindow

; 1128 :                                 EnableWindow(GetDlgItem(hwnd, IDC_TIMEOFFSET_EDIT), FALSE);

	lea	edx, QWORD PTR [rsi+1]
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	edx, edx
	call	QWORD PTR __imp_EnableWindow
$LN24@ConfigureD:

; 1129 :                             }
; 1130 : 
; 1131 :                             filter->Release();

	mov	rcx, QWORD PTR filter$1$[rbp-153]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]

; 1132 :                         }
; 1133 : 
; 1134 :                             
; 1135 :                     }
; 1136 :                     break;

	jmp	$LN47@ConfigureD
$LN16@ConfigureD:

; 1155 :                     }
; 1156 : 
; 1157 :                 case IDOK:
; 1158 :                     {
; 1159 :                         UINT audioDeviceID= (UINT)SendMessage(GetDlgItem(hwnd, IDC_AUDIOLIST), CB_GETCURSEL, 0, 0);

	mov	edx, 1003				; 000003ebH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 327				; 00000147H
	call	QWORD PTR __imp_SendMessageW
	mov	QWORD PTR tv681[rbp-153], rax

; 1160 :                         if(audioDeviceID == CB_ERR)

	cmp	eax, -1					; ffffffffH
	je	$LN47@ConfigureD

; 1161 :                             break;
; 1162 : 
; 1163 :                         ConfigDialogData *configData = (ConfigDialogData*)GetWindowLongPtr(hwnd, DWLP_USER);

	mov	edx, 16
	mov	rcx, rdi
	call	QWORD PTR __imp_GetWindowLongPtrW
	mov	rbx, rax

; 1164 : 
; 1165 :                         if(!configData->bDShowHasAudio) { audioDeviceID = (UINT)SendMessage(GetDlgItem(hwnd, IDC_AUDIOLIST), CB_GETCURSEL, 0, 0);

	cmp	BYTE PTR [rax+1762], 0
	jne	SHORT $LN13@ConfigureD
	mov	edx, 1003				; 000003ebH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 327				; 00000147H
	call	QWORD PTR __imp_SendMessageW
	mov	QWORD PTR tv681[rbp-153], rax

; 1166 :                             if(audioDeviceID == CB_ERR)

	cmp	eax, -1					; ffffffffH
	je	$LN47@ConfigureD
$LN13@ConfigureD:

; 1167 :                                 break;
; 1168 :                         }
; 1169 : 
; 1170 :                         String strAudioDevice = GetCBText(GetDlgItem(hwnd, IDC_AUDIOLIST), audioDeviceID);

	mov	edx, 1003				; 000003ebH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rdx, rax
	mov	r8d, DWORD PTR tv681[rbp-153]
	lea	rcx, QWORD PTR strAudioDevice$93256[rbp-153]
	call	QWORD PTR __imp_?GetCBText@@YA?AVString@@PEAUHWND__@@I@Z
	npad	1

; 1171 : 
; 1172 :                         if(configData->bCreating)

	cmp	BYTE PTR [rbx+1761], 0
	je	SHORT $LN11@ConfigureD

; 1173 :                         {
; 1174 :                             bool bFoundGlobal;
; 1175 :                             if(CurrentDeviceExists(strAudioDevice, configData->bGlobalSource, bFoundGlobal))

	lea	r8, QWORD PTR bFoundGlobal$93259[rbp-153]
	movzx	edx, BYTE PTR [rbx+1760]
	mov	rcx, QWORD PTR strAudioDevice$93256[rbp-153]
	call	?CurrentDeviceExists@@YA_NPEB_W_NAEA_N@Z ; CurrentDeviceExists
	test	al, al
	je	SHORT $LN11@ConfigureD

; 1176 :                             {
; 1177 :                                 if(bFoundGlobal)

	cmp	BYTE PTR bFoundGlobal$93259[rbp-153], 0
	je	SHORT $LN10@ConfigureD

; 1178 :                                     MessageBox(hwnd, PluginStr("DeviceSelection.GlobalExists"), NULL, 0);

	lea	rdx, OFFSET FLAT:$SG-10674

; 1179 :                                 else

	jmp	SHORT $LN108@ConfigureD
$LN10@ConfigureD:

; 1180 :                                 {
; 1181 :                                     if(configData->bGlobalSource)

	cmp	BYTE PTR [rbx+1760], 0

; 1182 :                                         MessageBox(hwnd, PluginStr("DeviceSelection.ExistsSomewhere"), NULL, 0);

	lea	rdx, OFFSET FLAT:$SG-10675

; 1180 :                                 {
; 1181 :                                     if(configData->bGlobalSource)

	jne	SHORT $LN108@ConfigureD

; 1183 :                                     else
; 1184 :                                         MessageBox(hwnd, PluginStr("DeviceSelection.ExistsInScene"), NULL, 0);

	lea	rdx, OFFSET FLAT:$SG-10676
$LN108@ConfigureD:
	mov	rcx, QWORD PTR ?pluginLocale@@3PEAVLocaleStringLookup@@EA ; pluginLocale
	call	QWORD PTR __imp_?LookupString@LocaleStringLookup@@QEAAPEB_WPEB_W@Z
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, rax
	mov	rcx, rdi
	call	QWORD PTR __imp_MessageBoxW
	npad	1

; 1185 :                                 }
; 1186 : 
; 1187 :                                 break;

	lea	rcx, QWORD PTR strAudioDevice$93256[rbp-153]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
	jmp	$LN47@ConfigureD
$LN11@ConfigureD:

; 1188 :                             }
; 1189 :                         }
; 1190 : 
; 1191 :                         //------------------------------------------
; 1192 : 
; 1193 :                         configData->data->SetString(TEXT("audioDevice"), strAudioDevice);

	mov	r8, QWORD PTR strAudioDevice$93256[rbp-153]
	lea	rdx, OFFSET FLAT:$SG-10677
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?SetString@XElement@@QEAAXPEB_W0@Z

; 1194 :                         configData->data->SetString(TEXT("audioDeviceName"), configData->audioNameList[audioDeviceID]);

	lea	rcx, QWORD PTR [rbx+80]
	mov	edx, DWORD PTR tv681[rbp-153]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:$SG-10678
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?SetString@XElement@@QEAAXPEB_W0@Z

; 1195 :                         configData->data->SetString(TEXT("audioDeviceID"), configData->audioIDList[audioDeviceID]);

	lea	rcx, QWORD PTR [rbx+96]
	mov	edx, DWORD PTR tv681[rbp-153]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:$SG-10679
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?SetString@XElement@@QEAAXPEB_W0@Z

; 1196 :                         configData->data->SetString(TEXT("audioDeviceCLSID"), configData->audioGUID[audioDeviceID]);

	lea	rcx, QWORD PTR [rbx+112]
	mov	edx, DWORD PTR tv681[rbp-153]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	r8, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:$SG-10680
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?SetString@XElement@@QEAAXPEB_W0@Z

; 1197 : 
; 1198 :                         configData->data->SetInt(TEXT("dshowHasAudio"), configData->bDShowHasAudio);

	movzx	r8d, BYTE PTR [rbx+1762]
	lea	rdx, OFFSET FLAT:$SG-10681
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?SetInt@XElement@@QEAAXPEB_WH@Z

; 1199 : 
; 1200 :                         //------------------------------------------
; 1201 : 
; 1202 :                         int soundOutputType = 0;
; 1203 :                         if(SendMessage(GetDlgItem(hwnd, IDC_OUTPUTSOUND), BM_GETCHECK, 0, 0) == BST_CHECKED)

	mov	edx, 1029				; 00000405H
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 240				; 000000f0H
	call	QWORD PTR __imp_SendMessageW
	cmp	rax, 1
	jne	SHORT $LN6@ConfigureD

; 1204 :                             soundOutputType = 1;

	mov	QWORD PTR tv1118[rbp-153], rax
	jmp	SHORT $LN4@ConfigureD
$LN6@ConfigureD:

; 1205 :                         else if(SendMessage(GetDlgItem(hwnd, IDC_PLAYDESKTOPSOUND), BM_GETCHECK, 0, 0) == BST_CHECKED)

	mov	edx, 1030				; 00000406H
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 240				; 000000f0H
	call	QWORD PTR __imp_SendMessageW
	mov	ecx, 2
	cmp	rax, 1
	mov	eax, 0
	cmove	eax, ecx
	mov	DWORD PTR tv1118[rbp-153], eax
$LN4@ConfigureD:

; 1206 :                             soundOutputType = 2;
; 1207 :                         bool bForceCustomAudioDevice = SendMessage(GetDlgItem(hwnd, IDC_FORCECUSTOMAUDIO), BM_GETCHECK, 0, 0) == BST_CHECKED;

	mov	edx, 1034				; 0000040aH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 240				; 000000f0H
	call	QWORD PTR __imp_SendMessageW

; 1208 : 
; 1209 :                         configData->data->SetInt(TEXT("soundOutputType"), soundOutputType);

	mov	r8, QWORD PTR tv1118[rbp-153]
	lea	rdx, OFFSET FLAT:$SG-10682
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?SetInt@XElement@@QEAAXPEB_WH@Z

; 1210 : 
; 1211 :                         int soundTimeOffset = (int)SendMessage(GetDlgItem(hwnd, IDC_TIMEOFFSET), UDM_GETPOS32, 0, 0);

	mov	edx, 1033				; 00000409H
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1138				; 00000472H
	call	QWORD PTR __imp_SendMessageW

; 1212 :                         configData->data->SetInt(TEXT("soundTimeOffset"), soundTimeOffset);

	mov	r8d, eax
	lea	rdx, OFFSET FLAT:$SG-10683
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?SetInt@XElement@@QEAAXPEB_WH@Z

; 1213 : 
; 1214 :                         float fVol = GetVolumeControlValue(GetDlgItem(hwnd, IDC_VOLUME));

	mov	edx, 1035				; 0000040bH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	call	QWORD PTR __imp_?GetVolumeControlValue@@YAMPEAUHWND__@@@Z

; 1215 :                         configData->data->SetFloat(TEXT("volume"), fVol);

	movaps	xmm2, xmm0
	lea	rdx, OFFSET FLAT:$SG-10684
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?SetFloat@XElement@@QEAAXPEB_WM@Z
	npad	1

; 1216 : 
; 1217 :                     }

	lea	rcx, QWORD PTR strAudioDevice$93256[rbp-153]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
$LN3@ConfigureD:

; 1218 : 
; 1219 :                 case IDCANCEL:
; 1220 :                     if(LOWORD(wParam) == IDCANCEL)

	cmp	si, 2
	jne	$LN1@ConfigureD

; 1221 :                     {
; 1222 :                         ConfigDialogData *configData = (ConfigDialogData*)GetWindowLongPtr(hwnd, DWLP_USER);

	mov	edx, 16
	mov	rcx, rdi
	call	QWORD PTR __imp_GetWindowLongPtrW
	mov	QWORD PTR configData$1$[rbp-153], rax

; 1223 :                         ImageSource *source = API->GetSceneImageSource(configData->lpName);

	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR __imp_?API@@3PEAVAPIInterface@@EA
	mov	rcx, QWORD PTR [rcx]
	call	?GetSceneImageSource@APIInterface@@QEAAPEAVImageSource@@PEB_W@Z ; APIInterface::GetSceneImageSource
	mov	QWORD PTR source$1$[rbp-153], rax

; 1224 : 
; 1225 :                         if(source)

	test	rax, rax
	je	SHORT $LN1@ConfigureD

; 1226 :                         {
; 1227 :                             source->SetInt(TEXT("timeOffset"),          configData->data->GetInt(TEXT("soundTimeOffset"), 0));

	mov	rbx, QWORD PTR [rax]
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:$SG-10685
	mov	rcx, QWORD PTR configData$1$[rbp-153]
	mov	rcx, QWORD PTR [rcx+8]
	call	QWORD PTR __imp_?GetInt@XElement@@QEBAHPEB_WH@Z
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:$SG-10686
	mov	rcx, QWORD PTR source$1$[rbp-153]
	call	QWORD PTR [rbx+88]

; 1228 :                             source->SetFloat(TEXT("volume"),            configData->data->GetFloat(TEXT("volume"), 1.0f));

	mov	rax, QWORD PTR source$1$[rbp-153]
	mov	rbx, QWORD PTR [rax]
	movss	xmm2, DWORD PTR __real@3f800000
	lea	rdx, OFFSET FLAT:$SG-10687
	mov	rax, QWORD PTR configData$1$[rbp-153]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_?GetFloat@XElement@@QEBAMPEB_WM@Z
	movaps	xmm2, xmm0
	lea	rdx, OFFSET FLAT:$SG-10688
	mov	rcx, QWORD PTR source$1$[rbp-153]
	call	QWORD PTR [rbx+80]
$LN1@ConfigureD:

; 1229 :                         }
; 1230 :                     }
; 1231 : 
; 1232 :                     EndDialog(hwnd, LOWORD(wParam));

	movzx	edx, si
	mov	rcx, rdi
	call	QWORD PTR __imp_EndDialog
	jmp	$LN47@ConfigureD
$LN23@ConfigureD:

; 1137 : 
; 1138 :                     case IDC_CONFIGAUDIO:
; 1139 :                     case IDC_CROSSBAR:
; 1140 :                     {
; 1141 :                         UINT id;
; 1142 :                         ConfigDialogData *configData = (ConfigDialogData*)GetWindowLongPtr(hwnd, DWLP_USER);

	mov	edx, 16
	mov	rcx, rdi
	call	QWORD PTR __imp_GetWindowLongPtrW
	mov	rsi, rax

; 1143 :                         switch(LOWORD(wParam))

	sub	ebx, 1004				; 000003ecH
	je	$LN20@ConfigureD
	cmp	ebx, 3
	jne	$LN47@ConfigureD

; 1148 :                                 break;
; 1149 :                             case IDC_CROSSBAR:
; 1150 :                                 id = (UINT)SendMessage(GetDlgItem(hwnd, IDC_CROSSBARLIST), CB_GETCURSEL, 0, 0);

	mov	edx, 1006				; 000003eeH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 327				; 00000147H
	call	QWORD PTR __imp_SendMessageW
	mov	QWORD PTR tv634[rbp-153], rax

; 1151 :                                 if(id != CB_ERR) OpenPropertyPages(hwnd, configData->crossbarList[id], configData->crossbarIDList[id], AM_KSCATEGORY_CROSSBAR);

	cmp	eax, -1					; ffffffffH
	je	$LN47@ConfigureD
	lea	rcx, QWORD PTR $T112602[rbp-153]
	mov	QWORD PTR $T112603[rbp-153], rcx
	lea	rcx, QWORD PTR $T112604[rbp-153]
	mov	QWORD PTR $T112605[rbp-153], rcx
	movups	xmm0, XMMWORD PTR AM_KSCATEGORY_CROSSBAR
	movaps	XMMWORD PTR $T112614[rbp-153], xmm0
	lea	rcx, QWORD PTR [rsi+144]
	mov	edx, eax
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rdx, rax
	lea	rcx, QWORD PTR $T112602[rbp-153]
	call	QWORD PTR __imp_??0String@@QEAA@AEBV0@@Z
	mov	rbx, rax
	lea	rcx, QWORD PTR [rsi+128]
	mov	edx, DWORD PTR tv634[rbp-153]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rdx, rax
	lea	rcx, QWORD PTR $T112604[rbp-153]
	call	QWORD PTR __imp_??0String@@QEAA@AEBV0@@Z
	npad	1

; 1152 :                                 break;

	jmp	$LN109@ConfigureD
$LN20@ConfigureD:

; 1144 :                         {
; 1145 :                             case IDC_CONFIGAUDIO:
; 1146 :                                 id = (UINT)SendMessage(GetDlgItem(hwnd, IDC_AUDIOLIST), CB_GETCURSEL, 0, 0);

	mov	edx, 1003				; 000003ebH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 327				; 00000147H
	call	QWORD PTR __imp_SendMessageW
	mov	QWORD PTR tv568[rbp-153], rax

; 1147 :                                 if(id != CB_ERR) OpenPropertyPages(hwnd, configData->audioNameList[id], configData->audioIDList[id], configData->listGUID[id]);

	cmp	eax, -1					; ffffffffH
	je	$LN47@ConfigureD
	lea	rcx, QWORD PTR $T112598[rbp-153]
	mov	QWORD PTR $T112599[rbp-153], rcx
	lea	rcx, QWORD PTR $T112600[rbp-153]
	mov	QWORD PTR $T112601[rbp-153], rcx
	mov	ecx, eax
	add	rcx, 10
	add	rcx, rcx
	movups	xmm0, XMMWORD PTR [rsi+rcx*8]
	movaps	XMMWORD PTR $T112613[rbp-153], xmm0
	lea	rcx, QWORD PTR [rsi+96]
	mov	edx, eax
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rdx, rax
	lea	rcx, QWORD PTR $T112598[rbp-153]
	call	QWORD PTR __imp_??0String@@QEAA@AEBV0@@Z
	mov	rbx, rax
	lea	rcx, QWORD PTR [rsi+80]
	mov	edx, DWORD PTR tv568[rbp-153]
	call	QWORD PTR __imp_??A?$List@VString@@@@QEAAAEAVString@@I@Z
	mov	rdx, rax
	lea	rcx, QWORD PTR $T112600[rbp-153]
	call	QWORD PTR __imp_??0String@@QEAA@AEBV0@@Z
	npad	1
$LN109@ConfigureD:
	lea	r9, QWORD PTR $T112613[rbp-153]
	mov	r8, rbx
	mov	rdx, rax
	mov	rcx, rdi
	call	?OpenPropertyPages@@YAXPEAUHWND__@@VString@@1U_GUID@@@Z ; OpenPropertyPages

; 1153 :                         }
; 1154 :                         break;

	jmp	$LN47@ConfigureD
$LN69@ConfigureD:

; 997  :             }
; 998  : 
; 999  :         case WM_DESTROY:
; 1000 :             break;
; 1001 : 
; 1002 :         case WM_LBUTTONDOWN:
; 1003 :             break;
; 1004 : 
; 1005 :         case WM_MOUSEMOVE:
; 1006 :             break;
; 1007 : 
; 1008 :         case WM_LBUTTONUP:
; 1009 :             break;
; 1010 : 
; 1011 :         case WM_CAPTURECHANGED:
; 1012 :             break;
; 1013 : 
; 1014 :         case WM_COMMAND:
; 1015 :             switch(LOWORD(wParam))

	cmp	ebx, 1011				; 000003f3H
	je	$LN29@ConfigureD
	cmp	ebx, 1028				; 00000404H
	jle	$LN47@ConfigureD
	cmp	ebx, 1031				; 00000407H
	jle	$LN46@ConfigureD
	cmp	ebx, 1032				; 00000408H
	je	$LN39@ConfigureD
	cmp	ebx, 1035				; 0000040bH
	jne	$LN47@ConfigureD

; 1027 : 
; 1028 :                 case IDC_VOLUME:
; 1029 :                     if(HIWORD(wParam) == VOLN_ADJUSTING || HIWORD(wParam) == VOLN_FINALVALUE)

	shr	rsi, 16
	mov	eax, 768				; 00000300H
	cmp	si, ax
	je	SHORT $LN42@ConfigureD
	mov	eax, 769				; 00000301H
	cmp	si, ax
	jne	$LN47@ConfigureD
$LN42@ConfigureD:

; 1030 :                     {
; 1031 :                         if(IsWindowEnabled((HWND)lParam))

	mov	rcx, r10
	call	QWORD PTR __imp_IsWindowEnabled
	test	eax, eax
	je	$LN47@ConfigureD

; 1032 :                         {
; 1033 :                             float fVol = GetVolumeControlValue((HWND)lParam);

	mov	rcx, QWORD PTR lParam$[rbp-153]
	call	QWORD PTR __imp_?GetVolumeControlValue@@YAMPEAUHWND__@@@Z
	movaps	xmm6, xmm0

; 1034 : 
; 1035 :                             ConfigDialogData *configData = (ConfigDialogData*)GetWindowLongPtr(hwnd, DWLP_USER);

	mov	edx, 16
	mov	rcx, rdi
	call	QWORD PTR __imp_GetWindowLongPtrW

; 1036 :                             ImageSource *source = API->GetSceneImageSource(configData->lpName);

	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR __imp_?API@@3PEAVAPIInterface@@EA
	mov	rcx, QWORD PTR [rcx]
	call	?GetSceneImageSource@APIInterface@@QEAAPEAVImageSource@@PEB_W@Z ; APIInterface::GetSceneImageSource

; 1037 :                             if(source)

	test	rax, rax
	je	$LN47@ConfigureD

; 1038 :                                 source->SetFloat(TEXT("volume"), fVol);

	mov	r8, QWORD PTR [rax]
	movaps	xmm2, xmm6
	lea	rdx, OFFSET FLAT:$SG-10670
	mov	rcx, rax
	call	QWORD PTR [r8+80]

; 1039 :                         }
; 1040 :                     }
; 1041 :                     break;

	jmp	$LN47@ConfigureD
$LN39@ConfigureD:

; 1042 : 
; 1043 :                 case IDC_TIMEOFFSET_EDIT:
; 1044 :                     if(HIWORD(wParam) == EN_CHANGE)

	shr	rsi, 16
	mov	eax, 768				; 00000300H
	cmp	si, ax
	jne	$LN47@ConfigureD

; 1045 :                     {
; 1046 :                         ConfigDialogData *configData = (ConfigDialogData*)GetWindowLongPtr(hwnd, DWLP_USER);

	mov	edx, 16
	mov	rcx, rdi
	call	QWORD PTR __imp_GetWindowLongPtrW

; 1047 :                         if(configData)

	test	rax, rax
	je	$LN47@ConfigureD

; 1048 :                         {
; 1049 :                             ImageSource *source = API->GetSceneImageSource(configData->lpName);

	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR __imp_?API@@3PEAVAPIInterface@@EA
	mov	rcx, QWORD PTR [rcx]
	call	?GetSceneImageSource@APIInterface@@QEAAPEAVImageSource@@PEB_W@Z ; APIInterface::GetSceneImageSource
	mov	QWORD PTR source$1$[rbp-153], rax

; 1050 : 
; 1051 :                             if(source)

	test	rax, rax
	je	$LN47@ConfigureD

; 1052 :                             {
; 1053 :                                 HWND hwndVal = NULL;
; 1054 :                                 switch(LOWORD(wParam))

	cmp	ebx, 1032				; 00000408H
	jne	SHORT $LN104@ConfigureD

; 1055 :                                 {
; 1056 :                                     case IDC_TIMEOFFSET_EDIT:       hwndVal = GetDlgItem(hwnd, IDC_TIMEOFFSET); break;

	lea	edx, QWORD PTR [rbx+1]
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rsi, rax
	jmp	SHORT $LN34@ConfigureD
$LN104@ConfigureD:

; 908  : {

	xor	esi, esi
$LN34@ConfigureD:

; 1057 :                                 }
; 1058 : 
; 1059 :                                 int val = (int)SendMessage(hwndVal, UDM_GETPOS32, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 1138				; 00000472H
	mov	rcx, rsi
	call	QWORD PTR __imp_SendMessageW

; 1060 :                                 switch(LOWORD(wParam))

	cmp	ebx, 1032				; 00000408H
	jne	$LN47@ConfigureD

; 1061 :                                 {
; 1062 :                                     case IDC_TIMEOFFSET_EDIT:       source->SetInt(TEXT("timeOffset"), val); break;

	mov	rcx, QWORD PTR source$1$[rbp-153]
	mov	r9, QWORD PTR [rcx]
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:$SG-10671
	call	QWORD PTR [r9+88]

; 1063 :                                 }
; 1064 :                             }
; 1065 :                         }
; 1066 :                     }
; 1067 :                     break;

	jmp	$LN47@ConfigureD
$LN46@ConfigureD:

; 1016 :             {
; 1017 :                 case IDC_NOSOUND:
; 1018 :                 case IDC_PLAYDESKTOPSOUND:
; 1019 :                 case IDC_OUTPUTSOUND:
; 1020 :                     if(HIWORD(wParam) == BN_CLICKED)

	mov	rax, rsi
	shr	rax, 16
	test	ax, ax
	jne	$LN47@ConfigureD

; 1021 :                     {
; 1022 :                         EnableWindow(GetDlgItem(hwnd, IDC_TIMEOFFSET),      LOWORD(wParam) == IDC_OUTPUTSOUND);

	mov	eax, 1029				; 00000405H
	mov	ebx, ecx
	cmp	si, ax
	sete	bl
	lea	edx, QWORD PTR [rax+4]
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	edx, ebx
	call	QWORD PTR __imp_EnableWindow

; 1023 :                         EnableWindow(GetDlgItem(hwnd, IDC_TIMEOFFSET_EDIT), LOWORD(wParam) == IDC_OUTPUTSOUND);

	mov	edx, 1032				; 00000408H
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	edx, ebx
	call	QWORD PTR __imp_EnableWindow

; 1024 :                         EnableWindow(GetDlgItem(hwnd, IDC_VOLUME),          LOWORD(wParam) != IDC_NOSOUND);

	mov	eax, 1031				; 00000407H
	cmp	si, ax
	mov	esi, 0
	setne	sil
	lea	edx, QWORD PTR [rax+4]
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	edx, esi
	call	QWORD PTR __imp_EnableWindow

; 1025 :                     }
; 1026 :                     break;

	jmp	$LN47@ConfigureD
$LN29@ConfigureD:

; 1068 : 
; 1069 :                 case IDC_REFRESH:
; 1070 :                     {
; 1071 :                         HWND hwndAudioDeviceList = GetDlgItem(hwnd, IDC_AUDIOLIST);

	mov	edx, 1003				; 000003ebH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndAudioDeviceList$1$[rbp-153], rax

; 1072 :                         HWND hwndCrossbarList = GetDlgItem(hwnd, IDC_CROSSBARLIST);

	mov	edx, 1006				; 000003eeH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndCrossbarList$1$[rbp-153], rax

; 1073 : 
; 1074 :                         ConfigDialogData *configData = (ConfigDialogData*)GetWindowLongPtr(hwnd, DWLP_USER);

	mov	edx, 16
	mov	rcx, rdi
	call	QWORD PTR __imp_GetWindowLongPtrW
	mov	rbx, rax

; 1075 : 
; 1076 :                         SendMessage(GetDlgItem(hwnd, IDC_AUDIOLIST), CB_RESETCONTENT, 0, 0);

	mov	edx, 1003				; 000003ebH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 331				; 0000014bH
	call	QWORD PTR __imp_SendMessageW

; 1077 :                         configData->audioIDList.Clear();

	lea	rax, QWORD PTR [rbx+96]
	mov	QWORD PTR tv1092[rbp-153], rax
	mov	rcx, rax
	call	QWORD PTR __imp_?Clear@StringList@@QEAAXXZ

; 1078 :                         configData->audioNameList.Clear();

	lea	rsi, QWORD PTR [rbx+80]
	mov	rcx, rsi
	call	QWORD PTR __imp_?Clear@StringList@@QEAAXXZ

; 1079 :                         FillOutListOfDevices(GetDlgItem(hwnd, IDC_AUDIOLIST), CLSID_AudioInputDeviceCategory, &configData->audioNameList, &configData->audioIDList, &configData->audioGUID, configData->listGUID);

	movups	xmm0, XMMWORD PTR CLSID_AudioInputDeviceCategory
	movaps	XMMWORD PTR $T112610[rbp-153], xmm0
	lea	rdi, QWORD PTR [rbx+160]
	add	rbx, 112				; 00000070H
	mov	edx, 1003				; 000003ebH
	mov	rcx, QWORD PTR hwnd$[rbp-153]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	QWORD PTR [rsp+40], rdi
	mov	QWORD PTR [rsp+32], rbx
	mov	r9, QWORD PTR tv1092[rbp-153]
	mov	r8, rsi
	lea	rdx, QWORD PTR $T112610[rbp-153]
	call	?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z ; FillOutListOfDevices

; 1080 :                         FillOutListOfDevices(GetDlgItem(hwnd, IDC_AUDIOLIST), CLSID_VideoInputDeviceCategory, &configData->audioNameList, &configData->audioIDList, &configData->audioGUID, configData->listGUID);

	movups	xmm0, XMMWORD PTR CLSID_VideoInputDeviceCategory
	movaps	XMMWORD PTR $T112611[rbp-153], xmm0
	mov	edx, 1003				; 000003ebH
	mov	rcx, QWORD PTR hwnd$[rbp-153]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	QWORD PTR [rsp+40], rdi
	mov	QWORD PTR [rsp+32], rbx
	mov	r9, QWORD PTR tv1092[rbp-153]
	mov	r8, rsi
	lea	rdx, QWORD PTR $T112611[rbp-153]
	call	?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z ; FillOutListOfDevices

; 1081 :                         FillOutListOfDevices(GetDlgItem(hwnd, IDC_AUDIOLIST), CLSID_AudioRendererCategory, &configData->audioNameList, &configData->audioIDList, &configData->audioGUID, configData->listGUID);

	movups	xmm0, XMMWORD PTR CLSID_AudioRendererCategory
	movaps	XMMWORD PTR $T112612[rbp-153], xmm0
	mov	edx, 1003				; 000003ebH
	mov	rcx, QWORD PTR hwnd$[rbp-153]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	QWORD PTR [rsp+40], rdi
	mov	QWORD PTR [rsp+32], rbx
	mov	r9, QWORD PTR tv1092[rbp-153]
	mov	r8, rsi
	lea	rdx, QWORD PTR $T112612[rbp-153]
	call	?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z ; FillOutListOfDevices

; 1082 :                         //FillOutListOfDevices(GetDlgItem(hwnd, IDC_CROSSBARLIST), AM_KSCATEGORY_CROSSBAR, &configData->crossbarList, &configData->crossbarIDList, NULL);
; 1083 : 
; 1084 :                         SendMessage(hwndAudioDeviceList, CB_SETCURSEL, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 334				; 0000014eH
	mov	rbx, QWORD PTR hwndAudioDeviceList$1$[rbp-153]
	mov	rcx, rbx
	call	QWORD PTR __imp_SendMessageW

; 1085 :                         ConfigureDialogProc(hwnd, WM_COMMAND, MAKEWPARAM(IDC_AUDIOLIST, CBN_SELCHANGE), (LPARAM)hwndAudioDeviceList);

	mov	r9, rbx
	mov	edx, 273				; 00000111H
	mov	r8d, 66539				; 000103ebH
	mov	rdi, QWORD PTR hwnd$[rbp-153]
	mov	rcx, rdi
	call	?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z ; ConfigureDialogProc

; 1086 :                         SendMessage(hwndCrossbarList, CB_SETCURSEL, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 334				; 0000014eH
	mov	rbx, QWORD PTR hwndCrossbarList$1$[rbp-153]
	mov	rcx, rbx
	call	QWORD PTR __imp_SendMessageW

; 1087 :                         ConfigureDialogProc(hwnd, WM_COMMAND, MAKEWPARAM(IDC_CROSSBARLIST, CBN_SELCHANGE), (LPARAM)hwndCrossbarList);

	mov	r9, rbx
	mov	edx, 273				; 00000111H
	mov	r8d, 66542				; 000103eeH
	mov	rcx, rdi
	call	?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z ; ConfigureDialogProc
$LN47@ConfigureD:

; 1233 :             }
; 1234 :     }
; 1235 : 
; 1236 :     return FALSE;

	xor	eax, eax
	jmp	$LN67@ConfigureD
$LN63@ConfigureD:

; 914  :     {
; 915  :         case WM_INITDIALOG:
; 916  :             {
; 917  :                 SetWindowLongPtr(hwnd, DWLP_USER, (LONG_PTR)lParam);

	mov	rbx, QWORD PTR lParam$[rbp-153]
	mov	r8, rbx
	mov	edx, 16
	mov	rcx, rdi
	call	QWORD PTR __imp_SetWindowLongPtrW

; 918  : 
; 919  :                 ConfigDialogData *configData = (ConfigDialogData*)lParam;
; 920  : 
; 921  :                 HWND hwndAudioList      = GetDlgItem(hwnd, IDC_AUDIOLIST);

	mov	edx, 1003				; 000003ebH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndAudioList$1$[rbp-153], rax

; 922  :                 HWND hwndCrossbarlist   = GetDlgItem(hwnd, IDC_CROSSBARLIST);

	mov	edx, 1006				; 000003eeH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem

; 923  : 
; 924  :                 //------------------------------------------
; 925  : 
; 926  :                 configData->bDShowHasAudio = configData->data->GetInt(TEXT("dshowHasAudio")) != 0;

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:$SG-10665
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?GetInt@XElement@@QEBAHPEB_WH@Z
	test	eax, eax
	setne	cl
	mov	BYTE PTR [rbx+1762], cl

; 927  : 
; 928  :                 //------------------------------------------
; 929  : 
; 930  :                 String strAudioDevice = configData->data->GetString(TEXT("audioDevice"));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:$SG-10666
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?GetString@XElement@@QEBAPEB_WPEB_WPEA_W@Z
	mov	rdx, rax
	lea	rcx, QWORD PTR strAudioDevice$93080[rbp-153]
	call	QWORD PTR __imp_??0String@@QEAA@PEB_W@Z
	npad	1

; 931  : 
; 932  :                 LocalizeWindow(hwnd, pluginLocale);

	mov	rdx, QWORD PTR ?pluginLocale@@3PEAVLocaleStringLookup@@EA ; pluginLocale
	mov	rcx, rdi
	call	QWORD PTR __imp_?LocalizeWindow@@YAXPEAUHWND__@@PEAVLocaleStringLookup@@@Z

; 933  :                 SendMessage(GetDlgItem(hwnd, IDC_AUDIOLIST), CB_RESETCONTENT, 0, 0);

	mov	edx, 1003				; 000003ebH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 331				; 0000014bH
	call	QWORD PTR __imp_SendMessageW

; 934  :                 configData->audioIDList.Clear();

	lea	rcx, QWORD PTR [rbx+96]
	call	QWORD PTR __imp_?Clear@StringList@@QEAAXXZ

; 935  :                 configData->audioNameList.Clear();

	lea	rsi, QWORD PTR [rbx+80]
	mov	rcx, rsi
	call	QWORD PTR __imp_?Clear@StringList@@QEAAXXZ

; 936  :                 FillOutListOfDevices(GetDlgItem(hwnd, IDC_AUDIOLIST), CLSID_AudioInputDeviceCategory, &configData->audioNameList, &configData->audioIDList, &configData->audioGUID, configData->listGUID);

	movups	xmm0, XMMWORD PTR CLSID_AudioInputDeviceCategory
	movaps	XMMWORD PTR $T112607[rbp-153], xmm0
	add	rbx, 160				; 000000a0H
	mov	rdi, QWORD PTR lParam$[rbp-153]
	add	rdi, 112				; 00000070H
	mov	edx, 1003				; 000003ebH
	mov	rcx, QWORD PTR hwnd$[rbp-153]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	QWORD PTR [rsp+40], rbx
	mov	QWORD PTR [rsp+32], rdi
	mov	r9, QWORD PTR lParam$[rbp-153]
	add	r9, 96					; 00000060H
	mov	r8, rsi
	lea	rdx, QWORD PTR $T112607[rbp-153]
	call	?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z ; FillOutListOfDevices

; 937  :                 FillOutListOfDevices(GetDlgItem(hwnd, IDC_AUDIOLIST), CLSID_VideoInputDeviceCategory, &configData->audioNameList, &configData->audioIDList, &configData->audioGUID, configData->listGUID);

	movups	xmm0, XMMWORD PTR CLSID_VideoInputDeviceCategory
	movaps	XMMWORD PTR $T112608[rbp-153], xmm0
	mov	edx, 1003				; 000003ebH
	mov	rcx, QWORD PTR hwnd$[rbp-153]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	QWORD PTR [rsp+40], rbx
	mov	QWORD PTR [rsp+32], rdi
	mov	r9, QWORD PTR lParam$[rbp-153]
	add	r9, 96					; 00000060H
	mov	r8, rsi
	lea	rdx, QWORD PTR $T112608[rbp-153]
	call	?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z ; FillOutListOfDevices

; 938  :                 FillOutListOfDevices(GetDlgItem(hwnd, IDC_AUDIOLIST), CLSID_AudioRendererCategory, &configData->audioNameList, &configData->audioIDList, &configData->audioGUID, configData->listGUID);

	movups	xmm0, XMMWORD PTR CLSID_AudioRendererCategory
	movaps	XMMWORD PTR $T112609[rbp-153], xmm0
	mov	edx, 1003				; 000003ebH
	mov	rcx, QWORD PTR hwnd$[rbp-153]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	QWORD PTR [rsp+40], rbx
	mov	QWORD PTR [rsp+32], rdi
	mov	rbx, QWORD PTR lParam$[rbp-153]
	lea	r9, QWORD PTR [rbx+96]
	mov	r8, rsi
	lea	rdx, QWORD PTR $T112609[rbp-153]
	call	?FillOutListOfDevices@@YAXPEAUHWND__@@U_GUID@@PEAVStringList@@22PEAU2@@Z ; FillOutListOfDevices

; 939  : 
; 940  :                 //FillOutListOfDevices(GetDlgItem(hwnd, IDC_AUDIOLIST), KSCATEGORY_AUDIO, &configData->audioNameList, &configData->audioIDList, &configData->audioGUID, configData->listGUID);
; 941  : 
; 942  :                 //FillOutListOfDevices(GetDlgItem(hwnd, IDC_CROSSBARLIST), AM_KSCATEGORY_CROSSBAR, &configData->crossbarList, &configData->crossbarIDList, NULL, NULL);
; 943  : 
; 944  :                 //SendMessage(hwndCrossbarlist, CB_SETCURSEL, 0, 0);
; 945  :                 //ConfigureDialogProc(hwnd, WM_COMMAND, MAKEWPARAM(IDC_CROSSBARLIST, CBN_SELCHANGE), (LPARAM)hwndCrossbarlist);
; 946  : 
; 947  :                 UINT audioDeviceID = CB_ERR;
; 948  :                 if(strAudioDevice.IsValid())

	mov	r9, QWORD PTR strAudioDevice$93080[rbp-153]
	test	r9, r9
	je	SHORT $LN107@ConfigureD
	cmp	WORD PTR [r9], 0
	je	SHORT $LN107@ConfigureD

; 949  :                     audioDeviceID = (UINT)SendMessage(hwndAudioList, CB_FINDSTRINGEXACT, -1, (LPARAM)strAudioDevice.Array());

	mov	rdi, QWORD PTR hwndAudioList$1$[rbp-153]

; 939  : 
; 940  :                 //FillOutListOfDevices(GetDlgItem(hwnd, IDC_AUDIOLIST), KSCATEGORY_AUDIO, &configData->audioNameList, &configData->audioIDList, &configData->audioGUID, configData->listGUID);
; 941  : 
; 942  :                 //FillOutListOfDevices(GetDlgItem(hwnd, IDC_CROSSBARLIST), AM_KSCATEGORY_CROSSBAR, &configData->crossbarList, &configData->crossbarIDList, NULL, NULL);
; 943  : 
; 944  :                 //SendMessage(hwndCrossbarlist, CB_SETCURSEL, 0, 0);
; 945  :                 //ConfigureDialogProc(hwnd, WM_COMMAND, MAKEWPARAM(IDC_CROSSBARLIST, CBN_SELCHANGE), (LPARAM)hwndCrossbarlist);
; 946  : 
; 947  :                 UINT audioDeviceID = CB_ERR;
; 948  :                 if(strAudioDevice.IsValid())

	cmp	DWORD PTR strAudioDevice$93080[rbp-145], 0
	je	SHORT $LN102@ConfigureD

; 949  :                     audioDeviceID = (UINT)SendMessage(hwndAudioList, CB_FINDSTRINGEXACT, -1, (LPARAM)strAudioDevice.Array());

	or	r8, -1
	mov	edx, 344				; 00000158H
	mov	rcx, rdi
	call	QWORD PTR __imp_SendMessageW

; 950  : 
; 951  : 
; 952  :                 if(audioDeviceID == CB_ERR)

	cmp	eax, -1					; ffffffffH
	je	SHORT $LN102@ConfigureD

; 956  :                 }
; 957  :                 else
; 958  :                 {
; 959  :                     SendMessage(hwndAudioList, CB_SETCURSEL, audioDeviceID, 0);

	mov	r8d, eax

; 960  :                     ConfigureDialogProc(hwnd, WM_COMMAND, MAKEWPARAM(IDC_AUDIOLIST, CBN_SELCHANGE), (LPARAM)hwndAudioList);

	jmp	SHORT $LN110@ConfigureD
$LN107@ConfigureD:

; 914  :     {
; 915  :         case WM_INITDIALOG:
; 916  :             {
; 917  :                 SetWindowLongPtr(hwnd, DWLP_USER, (LONG_PTR)lParam);

	mov	rdi, QWORD PTR hwndAudioList$1$[rbp-153]
$LN102@ConfigureD:

; 953  :                 {
; 954  :                     SendMessage(hwndAudioList, CB_SETCURSEL, 0, 0);

	xor	r8d, r8d
$LN110@ConfigureD:
	xor	r9d, r9d
	mov	edx, 334				; 0000014eH
	mov	rcx, rdi
	call	QWORD PTR __imp_SendMessageW

; 955  :                     ConfigureDialogProc(hwnd, WM_COMMAND, MAKEWPARAM(IDC_AUDIOLIST, CBN_SELCHANGE), (LPARAM)hwndAudioList);

	mov	r9, rdi
	mov	rdi, QWORD PTR hwnd$[rbp-153]
	mov	r8d, 66539				; 000103ebH
	mov	edx, 273				; 00000111H
	mov	rcx, rdi
	call	?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z ; ConfigureDialogProc

; 961  :                 }
; 962  : 
; 963  :                 //------------------------------------------
; 964  : 
; 965  :                 HWND hwndTemp;
; 966  : 
; 967  :                 int soundOutputType = configData->data->GetInt(TEXT("soundOutputType"));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:$SG-10667
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?GetInt@XElement@@QEBAHPEB_WH@Z
	mov	DWORD PTR soundOutputType$1$[rbp-153], eax

; 968  :                 switch(soundOutputType)

	mov	edx, eax
	test	eax, eax
	je	SHORT $LN57@ConfigureD
	dec	edx
	je	SHORT $LN56@ConfigureD
	dec	edx
	jne	SHORT $LN103@ConfigureD

; 972  :                     case 2: hwndTemp = GetDlgItem(hwnd, IDC_PLAYDESKTOPSOUND); break;

	mov	edx, 1030				; 00000406H
	jmp	SHORT $LN111@ConfigureD
$LN103@ConfigureD:

; 969  :                 {
; 970  :                     case 0: hwndTemp = GetDlgItem(hwnd, IDC_NOSOUND); break;

	mov	rbx, QWORD PTR hwndTemp$93106[rbp-153]
	jmp	SHORT $LN58@ConfigureD
$LN56@ConfigureD:

; 971  :                     case 1: hwndTemp = GetDlgItem(hwnd, IDC_OUTPUTSOUND); break;

	mov	edx, 1029				; 00000405H
	jmp	SHORT $LN111@ConfigureD
$LN57@ConfigureD:

; 969  :                 {
; 970  :                     case 0: hwndTemp = GetDlgItem(hwnd, IDC_NOSOUND); break;

	mov	edx, 1031				; 00000407H
$LN111@ConfigureD:
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rbx, rax
$LN58@ConfigureD:

; 973  :                 }
; 974  :                 EnableWindow(GetDlgItem(hwnd, IDC_AUDIOLIST),        true);

	mov	edx, 1003				; 000003ebH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	esi, 1
	mov	edx, esi
	call	QWORD PTR __imp_EnableWindow

; 975  : 
; 976  :                 SendMessage(hwndTemp, BM_SETCHECK, BST_CHECKED, 0);

	xor	r9d, r9d
	mov	r8d, esi
	mov	edx, 241				; 000000f1H
	mov	rcx, rbx
	call	QWORD PTR __imp_SendMessageW

; 977  : 
; 978  :                 EnableWindow(GetDlgItem(hwnd, IDC_TIMEOFFSET), soundOutputType == 1);

	xor	esi, esi
	mov	ebx, esi
	cmp	DWORD PTR soundOutputType$1$[rbp-153], 1
	sete	bl
	mov	edx, 1033				; 00000409H
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	edx, ebx
	call	QWORD PTR __imp_EnableWindow

; 979  :                 EnableWindow(GetDlgItem(hwnd, IDC_TIMEOFFSET_EDIT), soundOutputType == 1);

	mov	edx, 1032				; 00000408H
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	edx, ebx
	call	QWORD PTR __imp_EnableWindow

; 980  :                 EnableWindow(GetDlgItem(hwnd, IDC_VOLUME), soundOutputType != 0);

	cmp	DWORD PTR soundOutputType$1$[rbp-153], esi
	setne	sil
	mov	edx, 1035				; 0000040bH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	edx, esi
	call	QWORD PTR __imp_EnableWindow

; 981  : 
; 982  :                 //------------------------------------------
; 983  : 
; 984  :                 float fVol = configData->data->GetFloat(TEXT("volume"), 1.0f);

	movss	xmm2, DWORD PTR __real@3f800000
	lea	rdx, OFFSET FLAT:$SG-10668
	mov	rbx, QWORD PTR lParam$[rbp-153]
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?GetFloat@XElement@@QEBAMPEB_WM@Z
	movaps	xmm6, xmm0

; 985  :                 SetVolumeControlValue(GetDlgItem(hwnd, IDC_VOLUME), fVol);

	mov	edx, 1035				; 0000040bH
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	movaps	xmm1, xmm6
	call	QWORD PTR __imp_?SetVolumeControlValue@@YAMPEAUHWND__@@M@Z

; 986  : 
; 987  :                 //------------------------------------------
; 988  : 
; 989  :                 int pos = configData->data->GetInt(TEXT("soundTimeOffset"));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:$SG-10669
	mov	rcx, QWORD PTR [rbx+8]
	call	QWORD PTR __imp_?GetInt@XElement@@QEBAHPEB_WH@Z
	movsxd	rbx, eax

; 990  : 
; 991  :                 SendMessage(GetDlgItem(hwnd, IDC_TIMEOFFSET), UDM_SETRANGE32, -150, 3000);

	mov	edx, 1033				; 00000409H
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	edx, 1135				; 0000046fH
	mov	r9d, 3000				; 00000bb8H
	mov	r8, -150				; ffffffffffffff6aH
	call	QWORD PTR __imp_SendMessageW

; 992  :                 SendMessage(GetDlgItem(hwnd, IDC_TIMEOFFSET), UDM_SETPOS32, 0, pos);

	mov	edx, 1033				; 00000409H
	mov	rcx, rdi
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	mov	r9, rbx
	xor	r8d, r8d
	mov	edx, 1137				; 00000471H
	call	QWORD PTR __imp_SendMessageW
	npad	1

; 993  : 
; 994  :                 //------------------------------------------
; 995  : 
; 996  :                 return TRUE;

	lea	rcx, QWORD PTR strAudioDevice$93080[rbp-153]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
	mov	eax, 1
$LN67@ConfigureD:

; 1237 : }

	mov	rbx, QWORD PTR [rsp+272]
	movaps	xmm6, XMMWORD PTR [rsp+208]
	add	rsp, 224				; 000000e0H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z ENDP	; ConfigureDialogProc
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
source$1$ = 48
hwndAudioList$1$ = 48
tv1118 = 48
tv1092 = 48
tv681 = 48
$T112605 = 48
$T112601 = 48
configData$1$ = 56
hwndAudioDeviceList$1$ = 56
filter$1$ = 56
source$1$ = 56
tv634 = 56
tv568 = 56
hwndCrossbarList$1$ = 64
strAudioDevice$93256 = 64
$T112603 = 64
$T112599 = 64
hwndTemp$93106 = 64
strAudioDevice$93080 = 64
$T112614 = 80
$T112613 = 80
$T112610 = 80
$T112609 = 80
$T112612 = 96
$T112607 = 96
$T112611 = 112
$T112608 = 112
$T112604 = 128
$T112600 = 144
$T112740 = 160
$T112598 = 168
$T112602 = 184
hwnd$ = 256
bHasAudio$1$ = 264
soundOutputType$1$ = 264
bFoundGlobal$93259 = 264
message$ = 264
wParam$ = 272
lParam$ = 280
?dtor$0@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `ConfigureDialogProc'::`1'::dtor$0
	push	rbp
	mov	rbp, rdx
	mov	eax, DWORD PTR ?$S1@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4IA
	and	eax, -2					; fffffffeH
	mov	DWORD PTR ?$S1@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4IA, eax
	pop	rbp
	ret	0
?dtor$0@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `ConfigureDialogProc'::`1'::dtor$0
; Function compile flags: /Ogtpy
source$1$ = 48
hwndAudioList$1$ = 48
tv1118 = 48
tv1092 = 48
tv681 = 48
$T112605 = 48
$T112601 = 48
configData$1$ = 56
hwndAudioDeviceList$1$ = 56
filter$1$ = 56
source$1$ = 56
tv634 = 56
tv568 = 56
hwndCrossbarList$1$ = 64
strAudioDevice$93256 = 64
$T112603 = 64
$T112599 = 64
hwndTemp$93106 = 64
strAudioDevice$93080 = 64
$T112614 = 80
$T112613 = 80
$T112610 = 80
$T112609 = 80
$T112612 = 96
$T112607 = 96
$T112611 = 112
$T112608 = 112
$T112604 = 128
$T112600 = 144
$T112740 = 160
$T112598 = 168
$T112602 = 184
hwnd$ = 256
bHasAudio$1$ = 264
soundOutputType$1$ = 264
bFoundGlobal$93259 = 264
message$ = 264
wParam$ = 272
lParam$ = 280
?dtor$1@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `ConfigureDialogProc'::`1'::dtor$1
	lea	rcx, QWORD PTR strAudioDevice$93080[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$1@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `ConfigureDialogProc'::`1'::dtor$1
; Function compile flags: /Ogtpy
source$1$ = 48
hwndAudioList$1$ = 48
tv1118 = 48
tv1092 = 48
tv681 = 48
$T112605 = 48
$T112601 = 48
configData$1$ = 56
hwndAudioDeviceList$1$ = 56
filter$1$ = 56
source$1$ = 56
tv634 = 56
tv568 = 56
hwndCrossbarList$1$ = 64
strAudioDevice$93256 = 64
$T112603 = 64
$T112599 = 64
hwndTemp$93106 = 64
strAudioDevice$93080 = 64
$T112614 = 80
$T112613 = 80
$T112610 = 80
$T112609 = 80
$T112612 = 96
$T112607 = 96
$T112611 = 112
$T112608 = 112
$T112604 = 128
$T112600 = 144
$T112740 = 160
$T112598 = 168
$T112602 = 184
hwnd$ = 256
bHasAudio$1$ = 264
soundOutputType$1$ = 264
bFoundGlobal$93259 = 264
message$ = 264
wParam$ = 272
lParam$ = 280
?dtor$2@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `ConfigureDialogProc'::`1'::dtor$2
	mov	rcx, QWORD PTR $T112599[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$2@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `ConfigureDialogProc'::`1'::dtor$2
; Function compile flags: /Ogtpy
source$1$ = 48
hwndAudioList$1$ = 48
tv1118 = 48
tv1092 = 48
tv681 = 48
$T112605 = 48
$T112601 = 48
configData$1$ = 56
hwndAudioDeviceList$1$ = 56
filter$1$ = 56
source$1$ = 56
tv634 = 56
tv568 = 56
hwndCrossbarList$1$ = 64
strAudioDevice$93256 = 64
$T112603 = 64
$T112599 = 64
hwndTemp$93106 = 64
strAudioDevice$93080 = 64
$T112614 = 80
$T112613 = 80
$T112610 = 80
$T112609 = 80
$T112612 = 96
$T112607 = 96
$T112611 = 112
$T112608 = 112
$T112604 = 128
$T112600 = 144
$T112740 = 160
$T112598 = 168
$T112602 = 184
hwnd$ = 256
bHasAudio$1$ = 264
soundOutputType$1$ = 264
bFoundGlobal$93259 = 264
message$ = 264
wParam$ = 272
lParam$ = 280
?dtor$3@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `ConfigureDialogProc'::`1'::dtor$3
	mov	rcx, QWORD PTR $T112601[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$3@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `ConfigureDialogProc'::`1'::dtor$3
; Function compile flags: /Ogtpy
source$1$ = 48
hwndAudioList$1$ = 48
tv1118 = 48
tv1092 = 48
tv681 = 48
$T112605 = 48
$T112601 = 48
configData$1$ = 56
hwndAudioDeviceList$1$ = 56
filter$1$ = 56
source$1$ = 56
tv634 = 56
tv568 = 56
hwndCrossbarList$1$ = 64
strAudioDevice$93256 = 64
$T112603 = 64
$T112599 = 64
hwndTemp$93106 = 64
strAudioDevice$93080 = 64
$T112614 = 80
$T112613 = 80
$T112610 = 80
$T112609 = 80
$T112612 = 96
$T112607 = 96
$T112611 = 112
$T112608 = 112
$T112604 = 128
$T112600 = 144
$T112740 = 160
$T112598 = 168
$T112602 = 184
hwnd$ = 256
bHasAudio$1$ = 264
soundOutputType$1$ = 264
bFoundGlobal$93259 = 264
message$ = 264
wParam$ = 272
lParam$ = 280
?dtor$4@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `ConfigureDialogProc'::`1'::dtor$4
	mov	rcx, QWORD PTR $T112603[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$4@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `ConfigureDialogProc'::`1'::dtor$4
; Function compile flags: /Ogtpy
source$1$ = 48
hwndAudioList$1$ = 48
tv1118 = 48
tv1092 = 48
tv681 = 48
$T112605 = 48
$T112601 = 48
configData$1$ = 56
hwndAudioDeviceList$1$ = 56
filter$1$ = 56
source$1$ = 56
tv634 = 56
tv568 = 56
hwndCrossbarList$1$ = 64
strAudioDevice$93256 = 64
$T112603 = 64
$T112599 = 64
hwndTemp$93106 = 64
strAudioDevice$93080 = 64
$T112614 = 80
$T112613 = 80
$T112610 = 80
$T112609 = 80
$T112612 = 96
$T112607 = 96
$T112611 = 112
$T112608 = 112
$T112604 = 128
$T112600 = 144
$T112740 = 160
$T112598 = 168
$T112602 = 184
hwnd$ = 256
bHasAudio$1$ = 264
soundOutputType$1$ = 264
bFoundGlobal$93259 = 264
message$ = 264
wParam$ = 272
lParam$ = 280
?dtor$5@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `ConfigureDialogProc'::`1'::dtor$5
	mov	rcx, QWORD PTR $T112605[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$5@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `ConfigureDialogProc'::`1'::dtor$5
; Function compile flags: /Ogtpy
source$1$ = 48
hwndAudioList$1$ = 48
tv1118 = 48
tv1092 = 48
tv681 = 48
$T112605 = 48
$T112601 = 48
configData$1$ = 56
hwndAudioDeviceList$1$ = 56
filter$1$ = 56
source$1$ = 56
tv634 = 56
tv568 = 56
hwndCrossbarList$1$ = 64
strAudioDevice$93256 = 64
$T112603 = 64
$T112599 = 64
hwndTemp$93106 = 64
strAudioDevice$93080 = 64
$T112614 = 80
$T112613 = 80
$T112610 = 80
$T112609 = 80
$T112612 = 96
$T112607 = 96
$T112611 = 112
$T112608 = 112
$T112604 = 128
$T112600 = 144
$T112740 = 160
$T112598 = 168
$T112602 = 184
hwnd$ = 256
bHasAudio$1$ = 264
soundOutputType$1$ = 264
bFoundGlobal$93259 = 264
message$ = 264
wParam$ = 272
lParam$ = 280
?dtor$6@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA PROC ; `ConfigureDialogProc'::`1'::dtor$6
	lea	rcx, QWORD PTR strAudioDevice$93256[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
?dtor$6@?0??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4HA ENDP ; `ConfigureDialogProc'::`1'::dtor$6
text$x	ENDS
EXTRN	__C_specific_handler:PROC
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\um\winbase.inl
pdata	SEGMENT
$pdata$IsolationAwareDialogBoxParamW DD imagerel $LN32
	DD	imagerel $LN32+228
	DD	imagerel $unwind$IsolationAwareDialogBoxParamW
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$IsolationAwareDialogBoxParamW$fin$0 DD imagerel IsolationAwareDialogBoxParamW$fin$0
	DD	imagerel IsolationAwareDialogBoxParamW$fin$0+71
	DD	imagerel $unwind$IsolationAwareDialogBoxParamW$fin$0
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$IsolationAwareDialogBoxParamW$fin$0 DD 040801H
	DD	070045208H
	DD	030025003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$IsolationAwareDialogBoxParamW DD 081511H
	DD	0d7415H
	DD	0b6415H
	DD	0a3415H
	DD	0c0117215H
	DD	imagerel __C_specific_handler
	DD	01H
	DD	imagerel $LN32+120
	DD	imagerel $LN32+157
	DD	imagerel IsolationAwareDialogBoxParamW$fin$0
	DD	00H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\8.0\include\um\winuser.inl
xdata	ENDS
;	COMDAT IsolationAwareDialogBoxParamW
_TEXT	SEGMENT
nResult$ = 48
hWndParent$ = 80
dwInitParam$ = 88
ulpCookie$ = 96
IsolationAwareDialogBoxParamW PROC			; COMDAT

; 628  : {

$LN32:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r12
	sub	rsp, 64					; 00000040H
	mov	rbx, rdx
	mov	rsi, rcx
	mov	r12, QWORD PTR ?hinstMain@@3PEAUHINSTANCE__@@EA ; hinstMain

; 629  :     INT_PTR nResult = -1;

	mov	QWORD PTR nResult$[rsp], -1

; 630  :     ULONG_PTR ulpCookie = 0;

	xor	edi, edi
	mov	QWORD PTR ulpCookie$[rsp], rdi

; 631  :     const BOOL fActivateActCtxSuccess =
; 632  : #ifdef _M_IX86
; 633  :         IsolationAwarePrivateT_SqbjaYRiRY ||
; 634  : #endif
; 635  :         IsolationAwarePrivatenPgViNgRzlnPgpgk(&ulpCookie);

	mov	eax, DWORD PTR WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
	test	eax, eax
	je	SHORT $LN31@IsolationA@2
	lea	rcx, OFFSET FLAT:?debugString@?4??IsolationAwarePrivatenPgViNgRzlnPgpgk@@9@4QBDB
	call	QWORD PTR __imp_OutputDebugStringA
	mov	eax, DWORD PTR WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
	test	eax, eax
	jne	SHORT $LN19@IsolationA@2
$LN31@IsolationA@2:
	call	WinbaseIsolationAwarePrivatetRgzlnPgpgk
	test	eax, eax
	je	SHORT $Exit$112786
$LN19@IsolationA@2:
	lea	rdx, QWORD PTR ulpCookie$[rsp]
	mov	rcx, QWORD PTR WinbaseIsolationAwarePrivateT_UnPgpgk
	call	QWORD PTR __imp_ActivateActCtx
	test	eax, eax

; 636  :     if (!fActivateActCtxSuccess)

	jne	SHORT $LN3@IsolationA@2

; 631  :     const BOOL fActivateActCtxSuccess =
; 632  : #ifdef _M_IX86
; 633  :         IsolationAwarePrivateT_SqbjaYRiRY ||
; 634  : #endif
; 635  :         IsolationAwarePrivatenPgViNgRzlnPgpgk(&ulpCookie);

$Exit$112786:

; 637  :         return nResult;

	or	rax, -1
	jmp	SHORT $LN4@IsolationA@2
$LN3@IsolationA@2:

; 638  :     __try
; 639  :     {
; 640  :         nResult = DialogBoxParamW(hInstance,lpTemplateName,hWndParent,lpDialogFunc,dwInitParam);

	mov	QWORD PTR [rsp+32], rbx
	lea	r9, OFFSET FLAT:?ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z ; ConfigureDialogProc
	mov	r8, rsi
	mov	edx, 101				; 00000065H
	mov	rcx, r12
	call	QWORD PTR __imp_DialogBoxParamW
	mov	rsi, rax
	mov	QWORD PTR nResult$[rsp], rax
$LN15@IsolationA@2:

; 641  :     }
; 642  :     __finally
; 643  :     {
; 644  : #ifdef _M_IX86
; 645  :         if (!IsolationAwarePrivateT_SqbjaYRiRY)
; 646  : #endif
; 647  :         {
; 648  :             const BOOL fPreserveLastError = (nResult == -1);

	mov	ebx, edi
	cmp	rax, -1
	sete	bl

; 649  :             const DWORD dwLastError = fPreserveLastError ? GetLastError() : NO_ERROR;

	test	ebx, ebx
	je	SHORT $LN9@IsolationA@2
	call	QWORD PTR __imp_GetLastError
	mov	edi, eax
$LN9@IsolationA@2:

; 650  :             (void)IsolationAwareDeactivateActCtx(0, ulpCookie);

	mov	rdx, QWORD PTR ulpCookie$[rsp]
	xor	ecx, ecx
	call	QWORD PTR __imp_DeactivateActCtx

; 651  :             if (fPreserveLastError)

	test	ebx, ebx
	je	SHORT $LN10@IsolationA@2

; 652  :                 SetLastError(dwLastError);

	mov	ecx, edi
	call	QWORD PTR __imp_SetLastError
$LN10@IsolationA@2:

; 653  :         }
; 654  :     }
; 655  :     return nResult;

	mov	rax, rsi
$LN4@IsolationA@2:

; 656  : }

	mov	rbx, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	mov	rdi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	r12
	ret	0
IsolationAwareDialogBoxParamW ENDP
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
nResult$ = 48
hWndParent$ = 80
dwInitParam$ = 88
ulpCookie$ = 96
IsolationAwareDialogBoxParamW$fin$0 PROC

; 642  :     __finally

	push	rbx
	push	rbp
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbp, rdx
$LN12@IsolationA@3:

; 643  :     {
; 644  : #ifdef _M_IX86
; 645  :         if (!IsolationAwarePrivateT_SqbjaYRiRY)
; 646  : #endif
; 647  :         {
; 648  :             const BOOL fPreserveLastError = (nResult == -1);

	xor	ebx, ebx
	cmp	QWORD PTR nResult$[rbp], -1
	sete	bl

; 649  :             const DWORD dwLastError = fPreserveLastError ? GetLastError() : NO_ERROR;

	test	ebx, ebx
	je	SHORT $LN6@IsolationA@3
	call	QWORD PTR __imp_GetLastError
	mov	edi, eax
	jmp	SHORT $LN7@IsolationA@3
$LN6@IsolationA@3:
	xor	edi, edi
$LN7@IsolationA@3:

; 650  :             (void)IsolationAwareDeactivateActCtx(0, ulpCookie);

	mov	rdx, QWORD PTR ulpCookie$[rbp]
	xor	ecx, ecx
	call	QWORD PTR __imp_DeactivateActCtx

; 651  :             if (fPreserveLastError)

	test	ebx, ebx
	je	SHORT $LN13@IsolationA@3

; 652  :                 SetLastError(dwLastError);

	mov	ecx, edi
	call	QWORD PTR __imp_SetLastError
	npad	1
$LN13@IsolationA@3:
	add	rsp, 48					; 00000030H
	pop	rdi
	pop	rbp
	pop	rbx
	ret	0
	int	3
IsolationAwareDialogBoxParamW$fin$0 ENDP
PUBLIC	?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z	; ConfigureDShowSource
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\alloc.h
pdata	SEGMENT
$pdata$?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z DD imagerel $LN53
	DD	imagerel $LN53+451
	DD	imagerel $unwind$?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z DD imagerel ?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z
	DD	0ffffffffH
	DD	imagerel ?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z+192
	DD	00H
	DD	imagerel ?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z+208
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z DD 081e11H
	DD	0b641eH
	DD	0a5419H
	DD	093414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z@4HA
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
xdata	ENDS
;	COMDAT ?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z
_TEXT	SEGMENT
$T113748 = 32
$T113640 = 64
element$ = 64
bCreating$ = 72
?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z PROC	; ConfigureDShowSource, COMDAT

; 1240 : {

$LN53:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T113748[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	QWORD PTR [rsp+80], rbp
	mov	QWORD PTR [rsp+88], rsi
	movzx	ebp, dl
	mov	rdi, rcx

; 1241 :     if(!element)

	test	rcx, rcx
	jne	SHORT $LN3@ConfigureD@2

; 1242 :     {
; 1243 :         AppWarning(TEXT("ConfigureDShowSource: NULL element"));

	lea	rcx, OFFSET FLAT:$SG-10689
	call	QWORD PTR __imp_?AppWarning@@YAXPEB_WZZ

; 1244 :         return false;

	jmp	$LN52@ConfigureD@2
$LN3@ConfigureD@2:

; 1245 :     }
; 1246 : 
; 1247 :     XElement *data = element->GetElement(TEXT("data"));

	lea	rdx, OFFSET FLAT:$SG-10690
	call	QWORD PTR __imp_?GetElement@XElement@@QEBAPEAV1@PEB_W@Z
	mov	rsi, rax

; 1248 :     if(!data)

	test	rax, rax
	jne	SHORT $LN2@ConfigureD@2

; 1249 :         data = element->CreateElement(TEXT("data"));

	lea	rdx, OFFSET FLAT:$SG-10691
	mov	rcx, rdi
	call	QWORD PTR __imp_?CreateElement@XElement@@QEAAPEAV1@PEB_W@Z
	mov	rsi, rax
$LN2@ConfigureD@2:

; 1250 : 
; 1251 :     ConfigDialogData *configData = new ConfigDialogData;

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	mov	edx, 1768				; 000006e8H
	call	QWORD PTR [rax+8]
	xor	ebx, ebx
	mov	rcx, rax
	lea	edx, QWORD PTR [rbx+27]
$LL51@ConfigureD@2:
	mov	QWORD PTR [rcx], rbx
	mov	QWORD PTR [rcx+8], rbx
	mov	QWORD PTR [rcx+16], rbx
	add	rcx, 64					; 00000040H
	mov	QWORD PTR [rcx-40], rbx
	mov	QWORD PTR [rcx-32], rbx
	mov	QWORD PTR [rcx-24], rbx
	mov	QWORD PTR [rcx-16], rbx
	mov	QWORD PTR [rcx-8], rbx
	dec	rdx
	jne	SHORT $LL51@ConfigureD@2
	mov	QWORD PTR [rcx], rbx
	mov	QWORD PTR [rcx+8], rbx
	mov	QWORD PTR [rcx+16], rbx
	mov	QWORD PTR [rcx+24], rbx
	mov	QWORD PTR [rcx+32], rbx
	mov	QWORD PTR $T113640[rsp], rax
	test	rax, rax
	je	SHORT $LN7@ConfigureD@2
	mov	rcx, rax
	call	??0ConfigDialogData@@QEAA@XZ
	mov	rbx, rax
$LN7@ConfigureD@2:

; 1252 :     configData->lpName = element->GetName();

	mov	rax, QWORD PTR [rdi+8]
	mov	QWORD PTR [rbx], rax

; 1253 :     configData->data = data;

	mov	QWORD PTR [rbx+8], rsi

; 1254 :     configData->bGlobalSource = (scmpi(element->GetParent()->GetName(), TEXT("global sources")) == 0);

	mov	rax, QWORD PTR [rdi+40]
	lea	rdx, OFFSET FLAT:$SG-10692
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_?scmpi@@YAHPEB_W0@Z
	test	eax, eax
	sete	al
	mov	BYTE PTR [rbx+1760], al

; 1255 :     configData->bCreating = bCreating;

	mov	BYTE PTR [rbx+1761], bpl

; 1256 : 
; 1257 :     if(DialogBoxParam(hinstMain, MAKEINTRESOURCE(IDD_CONFIG), API->GetMainWindow(), ConfigureDialogProc, (LPARAM)configData) == IDOK)

	mov	rax, QWORD PTR __imp_?API@@3PEAVAPIInterface@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+184]
	mov	rcx, rax
	mov	rdx, rbx
	call	IsolationAwareDialogBoxParamW
	cmp	rax, 1
	jne	SHORT $LN1@ConfigureD@2

; 1258 :     {
; 1259 :         element->SetInt(TEXT("cx"), data->GetInt(TEXT("resolutionWidth")));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:$SG-10693
	mov	rcx, rsi
	call	QWORD PTR __imp_?GetInt@XElement@@QEBAHPEB_WH@Z
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:$SG-10694
	mov	rcx, rdi
	call	QWORD PTR __imp_?SetInt@XElement@@QEAAXPEB_WH@Z

; 1260 :         element->SetInt(TEXT("cy"), data->GetInt(TEXT("resolutionHeight")));

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:$SG-10695
	mov	rcx, rsi
	call	QWORD PTR __imp_?GetInt@XElement@@QEBAHPEB_WH@Z
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:$SG-10696
	mov	rcx, rdi
	call	QWORD PTR __imp_?SetInt@XElement@@QEAAXPEB_WH@Z

; 1261 : 
; 1262 :         delete configData;

	mov	rcx, rbx
	call	??1ConfigDialogData@@QEAA@XZ		; ConfigDialogData::~ConfigDialogData
	mov	r11, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [r11]
	mov	rax, QWORD PTR [rcx]
	mov	rdx, rbx
	call	QWORD PTR [rax+24]

; 1263 :         return true;

	mov	al, 1
	jmp	SHORT $LN4@ConfigureD@2
$LN1@ConfigureD@2:

; 1264 :     }
; 1265 : 
; 1266 :     delete configData;

	mov	rcx, rbx
	call	??1ConfigDialogData@@QEAA@XZ		; ConfigDialogData::~ConfigDialogData
	mov	r11, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [r11]
	mov	rax, QWORD PTR [rcx]
	mov	rdx, rbx
	call	QWORD PTR [rax+24]
$LN52@ConfigureD@2:

; 1267 :     return false;

	xor	al, al
$LN4@ConfigureD@2:

; 1268 : }

	mov	rbx, QWORD PTR [rsp+72]
	mov	rbp, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z ENDP	; ConfigureDShowSource
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T113748 = 32
$T113640 = 64
element$ = 64
bCreating$ = 72
?dtor$0@?0??ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z@4HA PROC ; `ConfigureDShowSource'::`1'::dtor$0
	mov	rcx, QWORD PTR $T113640[rdx]
	jmp	??3@YAXPEAX@Z				; operator delete
?dtor$0@?0??ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z@4HA ENDP ; `ConfigureDShowSource'::`1'::dtor$0
PUBLIC	LoadPlugin
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\xstring.h
pdata	SEGMENT
$pdata$LoadPlugin DD imagerel $LN28
	DD	imagerel $LN28+409
	DD	imagerel $unwind$LoadPlugin
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$LoadPlugin DD imagerel LoadPlugin
	DD	0ffffffffH
	DD	imagerel LoadPlugin+88
	DD	00H
	DD	imagerel LoadPlugin+100
	DD	0ffffffffH
	DD	imagerel LoadPlugin+205
	DD	01H
	DD	imagerel LoadPlugin+317
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadPlugin DD 041411H
	DD	0d3414H
	DD	070029206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$LoadPlugin
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$LoadPlugin DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$LoadPlugin
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$LoadPlugin
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$LoadPlugin DD 0ffffffffH
	DD	imagerel LoadPlugin$dtor$0
	DD	0ffffffffH
	DD	imagerel LoadPlugin$dtor$1
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\dshowaudioplugin.cpp
xdata	ENDS
;	COMDAT LoadPlugin
_TEXT	SEGMENT
$T113915 = 48
pluginStringFile$93365 = 56
$T113865 = 96
LoadPlugin PROC						; COMDAT

; 1284 : {

$LN28:
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	QWORD PTR $T113915[rsp], -2
	mov	QWORD PTR [rsp+104], rbx

; 1285 :     InitVolumeControl(hinstMain);

	mov	rcx, QWORD PTR ?hinstMain@@3PEAUHINSTANCE__@@EA ; hinstMain
	call	QWORD PTR __imp_?InitVolumeControl@@YAXPEAUHINSTANCE__@@@Z

; 1286 :     InitVolumeMeter(hinstMain);

	mov	rcx, QWORD PTR ?hinstMain@@3PEAUHINSTANCE__@@EA ; hinstMain
	call	QWORD PTR __imp_?InitVolumeMeter@@YAXPEAUHINSTANCE__@@@Z

; 1287 : 
; 1288 :     pluginLocale = new LocaleStringLookup;

	mov	r11, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [r11]
	mov	rax, QWORD PTR [rcx]
	mov	edx, 24
	call	QWORD PTR [rax+8]
	mov	rcx, rax
	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax
	mov	QWORD PTR [rcx+16], rax
	mov	QWORD PTR $T113865[rsp], rcx
	test	rcx, rcx
	je	SHORT $LN7@LoadPlugin
	call	QWORD PTR __imp_??0LocaleStringLookup@@QEAA@XZ
	npad	1
$LN7@LoadPlugin:
	mov	QWORD PTR ?pluginLocale@@3PEAVLocaleStringLookup@@EA, rax ; pluginLocale

; 1289 : 
; 1290 :     if(!pluginLocale->LoadStringFile(TEXT("plugins/DShowAudioPlugin/locale/en.txt")))

	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:$SG-10697
	mov	rcx, rax
	call	QWORD PTR __imp_?LoadStringFile@LocaleStringLookup@@QEAAHPEB_W_N@Z
	test	eax, eax
	jne	SHORT $LN3@LoadPlugin

; 1291 :         AppWarning(TEXT("Could not open locale string file '%s'"), TEXT("plugins/DShowAudioPlugin/locale/en.txt"));

	lea	rdx, OFFSET FLAT:$SG-10698
	lea	rcx, OFFSET FLAT:$SG-10699
	call	QWORD PTR __imp_?AppWarning@@YAXPEB_WZZ
$LN3@LoadPlugin:

; 1292 : 
; 1293 :     if(scmpi(API->GetLanguage(), TEXT("en")) != 0)

	mov	rax, QWORD PTR __imp_?API@@3PEAVAPIInterface@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+176]
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:$SG-10700
	call	QWORD PTR __imp_?scmpi@@YAHPEB_W0@Z
	test	eax, eax
	je	$LN2@LoadPlugin

; 1294 :     {
; 1295 :         String pluginStringFile;

	lea	rcx, QWORD PTR pluginStringFile$93365[rsp]
	call	QWORD PTR __imp_??0String@@QEAA@XZ
	npad	1

; 1296 :         pluginStringFile << TEXT("plugins/DShowAudioPlugin/locale/") << API->GetLanguage() << TEXT(".txt");

	mov	rax, QWORD PTR __imp_?API@@3PEAVAPIInterface@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+176]
	mov	rbx, rax
	lea	rdx, OFFSET FLAT:$SG-10701
	lea	rcx, QWORD PTR pluginStringFile$93365[rsp]
	call	QWORD PTR __imp_??6String@@QEAAAEAV0@PEB_W@Z
	mov	rcx, rax
	mov	rdx, rbx
	call	QWORD PTR __imp_??6String@@QEAAAEAV0@PEB_W@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:$SG-10702
	call	QWORD PTR __imp_??6String@@QEAAAEAV0@PEB_W@Z

; 1297 :         if(!pluginLocale->LoadStringFile(pluginStringFile))

	xor	r8d, r8d
	mov	rdx, QWORD PTR pluginStringFile$93365[rsp]
	mov	rcx, QWORD PTR ?pluginLocale@@3PEAVLocaleStringLookup@@EA ; pluginLocale
	call	QWORD PTR __imp_?LoadStringFile@LocaleStringLookup@@QEAAHPEB_W_N@Z
	test	eax, eax
	jne	SHORT $LN1@LoadPlugin

; 1298 :             AppWarning(TEXT("Could not open locale string file '%s'"), pluginStringFile.Array());

	mov	rdx, QWORD PTR pluginStringFile$93365[rsp]
	lea	rcx, OFFSET FLAT:$SG-10703
	call	QWORD PTR __imp_?AppWarning@@YAXPEB_WZZ
	npad	1
$LN1@LoadPlugin:

; 1299 :     }

	lea	rcx, QWORD PTR pluginStringFile$93365[rsp]
	call	QWORD PTR __imp_??1String@@QEAA@XZ
$LN2@LoadPlugin:

; 1300 : 
; 1301 :     API->RegisterImageSourceClass(DSHOW_CLASSNAME, PluginStr("ClassName"), (OBSCREATEPROC)CreateDShowSource, (OBSCONFIGPROC)ConfigureDShowSource);

	mov	rax, QWORD PTR __imp_?API@@3PEAVAPIInterface@@EA
	mov	rbx, QWORD PTR [rax]
	mov	rdi, QWORD PTR [rbx]
	lea	rdx, OFFSET FLAT:$SG-10704
	mov	rcx, QWORD PTR ?pluginLocale@@3PEAVLocaleStringLookup@@EA ; pluginLocale
	call	QWORD PTR __imp_?LookupString@LocaleStringLookup@@QEAAPEB_WPEB_W@Z
	mov	r8, rax
	lea	rax, OFFSET FLAT:?ConfigureDShowSource@@YA_NPEAVXElement@@_N@Z ; ConfigureDShowSource
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:?CreateDShowSource@@YAPEAVImageSource@@PEAVXElement@@@Z ; CreateDShowSource
	lea	rdx, OFFSET FLAT:$SG-10705
	mov	rcx, rbx
	call	QWORD PTR [rdi+40]

; 1302 : 
; 1303 :     return true;

	mov	al, 1

; 1304 : }

	mov	rbx, QWORD PTR [rsp+104]
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
LoadPlugin ENDP
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T113915 = 48
pluginStringFile$93365 = 56
$T113865 = 96
LoadPlugin$dtor$0 PROC
	mov	rcx, QWORD PTR $T113865[rdx]
	jmp	??3@YAXPEAX@Z				; operator delete
LoadPlugin$dtor$0 ENDP
; Function compile flags: /Ogtpy
$T113915 = 48
pluginStringFile$93365 = 56
$T113865 = 96
LoadPlugin$dtor$1 PROC
	lea	rcx, QWORD PTR pluginStringFile$93365[rdx]
	rex_jmp	QWORD PTR __imp_??1String@@QEAA@XZ
LoadPlugin$dtor$1 ENDP
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FcolorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@YAXXZ DD imagerel ??__FcolorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@YAXXZ
	DD	imagerel ??__FcolorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@YAXXZ+105
	DD	imagerel $unwind$??__FcolorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@YAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FcolorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@YAXXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??__FcolorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@YAXXZ
text$yd	SEGMENT
??__FcolorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@YAXXZ PROC ; `ConfigureDialogProc'::`2'::`dynamic atexit destructor for 'colorData'', COMDAT
	sub	rsp, 40					; 00000028H
	mov	rdx, QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A
	test	rdx, rdx
	je	SHORT $LN7@dynamic
	xor	ecx, ecx
	call	QWORD PTR __imp_ReleaseDC
	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A, 0
$LN7@dynamic:
	mov	rcx, QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+8
	test	rcx, rcx
	je	SHORT $LN6@dynamic
	call	QWORD PTR __imp_DeleteDC
	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+8, 0
$LN6@dynamic:
	mov	rcx, QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+16
	test	rcx, rcx
	je	SHORT $LN10@dynamic
	call	QWORD PTR __imp_DeleteObject
	mov	QWORD PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+16, 0
$LN10@dynamic:
	mov	BYTE PTR ?colorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@4UColorSelectionData@@A+24, 0
	add	rsp, 40					; 00000028H
	ret	0
??__FcolorData@?1??ConfigureDialogProc@@YA_JPEAUHWND__@@I_K_J@Z@YAXXZ ENDP ; `ConfigureDialogProc'::`2'::`dynamic atexit destructor for 'colorData''
text$yd	ENDS
END
