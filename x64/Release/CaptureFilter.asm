; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z ; CaptureEnumPins::Clone
PUBLIC	?Reset@CaptureEnumPins@@UEAAJXZ			; CaptureEnumPins::Reset
PUBLIC	?Skip@CaptureEnumPins@@UEAAJK@Z			; CaptureEnumPins::Skip
PUBLIC	?Next@CaptureEnumPins@@UEAAJKPEAPEAUIPin@@PEAK@Z ; CaptureEnumPins::Next
PUBLIC	?Release@CaptureEnumPins@@UEAAKXZ		; CaptureEnumPins::Release
PUBLIC	?AddRef@CaptureEnumPins@@UEAAKXZ		; CaptureEnumPins::AddRef
PUBLIC	?QueryInterface@CaptureEnumPins@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CaptureEnumPins::QueryInterface
PUBLIC	??_R4CaptureEnumPins@@6B@			; CaptureEnumPins::`RTTI Complete Object Locator'
PUBLIC	??_R3CaptureEnumPins@@8				; CaptureEnumPins::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CaptureEnumPins@@8				; CaptureEnumPins::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IEnumPins@@8			; IEnumPins::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3IEnumPins@@8				; IEnumPins::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IEnumPins@@8				; IEnumPins::`RTTI Base Class Array'
PUBLIC	??_R0?AUIEnumPins@@@8				; IEnumPins `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@CaptureEnumPins@@8		; CaptureEnumPins::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCaptureEnumPins@@@8			; CaptureEnumPins `RTTI Type Descriptor'
PUBLIC	?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z ; CaptureEnumMediaTypes::Clone
PUBLIC	?Reset@CaptureEnumMediaTypes@@UEAAJXZ		; CaptureEnumMediaTypes::Reset
PUBLIC	?Skip@CaptureEnumMediaTypes@@UEAAJK@Z		; CaptureEnumMediaTypes::Skip
PUBLIC	?Next@CaptureEnumMediaTypes@@UEAAJKPEAPEAU_AMMediaType@@PEAK@Z ; CaptureEnumMediaTypes::Next
PUBLIC	?Release@CaptureEnumMediaTypes@@UEAAKXZ		; CaptureEnumMediaTypes::Release
PUBLIC	?AddRef@CaptureEnumMediaTypes@@UEAAKXZ		; CaptureEnumMediaTypes::AddRef
PUBLIC	?QueryInterface@CaptureEnumMediaTypes@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CaptureEnumMediaTypes::QueryInterface
PUBLIC	??_R4CaptureEnumMediaTypes@@6B@			; CaptureEnumMediaTypes::`RTTI Complete Object Locator'
PUBLIC	??_R3CaptureEnumMediaTypes@@8			; CaptureEnumMediaTypes::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CaptureEnumMediaTypes@@8			; CaptureEnumMediaTypes::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IEnumMediaTypes@@8		; IEnumMediaTypes::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3IEnumMediaTypes@@8				; IEnumMediaTypes::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IEnumMediaTypes@@8				; IEnumMediaTypes::`RTTI Base Class Array'
PUBLIC	??_R0?AUIEnumMediaTypes@@@8			; IEnumMediaTypes `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@CaptureEnumMediaTypes@@8		; CaptureEnumMediaTypes::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCaptureEnumMediaTypes@@@8		; CaptureEnumMediaTypes `RTTI Type Descriptor'
PUBLIC	?ReceiveCanBlock@CapturePin@@UEAAJXZ		; CapturePin::ReceiveCanBlock
PUBLIC	?ReceiveMultiple@CapturePin@@UEAAJPEAPEAUIMediaSample@@JPEAJ@Z ; CapturePin::ReceiveMultiple
PUBLIC	?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z	; CapturePin::Receive
PUBLIC	?GetAllocatorRequirements@CapturePin@@UEAAJPEAU_AllocatorProperties@@@Z ; CapturePin::GetAllocatorRequirements
PUBLIC	?NotifyAllocator@CapturePin@@UEAAJPEAUIMemAllocator@@H@Z ; CapturePin::NotifyAllocator
PUBLIC	?GetAllocator@CapturePin@@UEAAJPEAPEAUIMemAllocator@@@Z ; CapturePin::GetAllocator
PUBLIC	??_R4CapturePin@@6BIMemInputPin@@@		; CapturePin::`RTTI Complete Object Locator'
PUBLIC	?NewSegment@CapturePin@@UEAAJ_J0N@Z		; CapturePin::NewSegment
PUBLIC	?EndFlush@CapturePin@@UEAAJXZ			; CapturePin::EndFlush
PUBLIC	?BeginFlush@CapturePin@@UEAAJXZ			; CapturePin::BeginFlush
PUBLIC	?EndOfStream@CapturePin@@UEAAJXZ		; CapturePin::EndOfStream
PUBLIC	?QueryInternalConnections@CapturePin@@UEAAJPEAPEAUIPin@@PEAK@Z ; CapturePin::QueryInternalConnections
PUBLIC	?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z ; CapturePin::EnumMediaTypes
PUBLIC	?QueryAccept@CapturePin@@UEAAJPEBU_AMMediaType@@@Z ; CapturePin::QueryAccept
PUBLIC	?QueryId@CapturePin@@UEAAJPEAPEA_W@Z		; CapturePin::QueryId
PUBLIC	?QueryDirection@CapturePin@@UEAAJPEAW4_PinDirection@@@Z ; CapturePin::QueryDirection
PUBLIC	?QueryPinInfo@CapturePin@@UEAAJPEAU_PinInfo@@@Z	; CapturePin::QueryPinInfo
PUBLIC	?ConnectionMediaType@CapturePin@@UEAAJPEAU_AMMediaType@@@Z ; CapturePin::ConnectionMediaType
PUBLIC	?ConnectedTo@CapturePin@@UEAAJPEAPEAUIPin@@@Z	; CapturePin::ConnectedTo
PUBLIC	?Disconnect@CapturePin@@UEAAJXZ			; CapturePin::Disconnect
PUBLIC	?ReceiveConnection@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z ; CapturePin::ReceiveConnection
PUBLIC	?Connect@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z ; CapturePin::Connect
PUBLIC	?Release@CapturePin@@UEAAKXZ			; CapturePin::Release
PUBLIC	?AddRef@CapturePin@@UEAAKXZ			; CapturePin::AddRef
PUBLIC	?QueryInterface@CapturePin@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CapturePin::QueryInterface
PUBLIC	??_R4CapturePin@@6BIPin@@@			; CapturePin::`RTTI Complete Object Locator'
PUBLIC	??_R3CapturePin@@8				; CapturePin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CapturePin@@8				; CapturePin::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R17?0A@EA@IMemInputPin@@8			; IMemInputPin::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R3IMemInputPin@@8				; IMemInputPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMemInputPin@@8				; IMemInputPin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IMemInputPin@@8			; IMemInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIMemInputPin@@@8			; IMemInputPin `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R1A@?0A@EA@IPin@@8				; IPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3IPin@@8					; IPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IPin@@8					; IPin::`RTTI Base Class Array'
PUBLIC	??_R0?AUIPin@@@8				; IPin `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@CapturePin@@8			; CapturePin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCapturePin@@@8				; CapturePin `RTTI Type Descriptor'
PUBLIC	?QueryVendorInfo@CaptureFilter@@UEAAJPEAPEA_W@Z	; CaptureFilter::QueryVendorInfo
PUBLIC	?JoinFilterGraph@CaptureFilter@@UEAAJPEAUIFilterGraph@@PEB_W@Z ; CaptureFilter::JoinFilterGraph
PUBLIC	?QueryFilterInfo@CaptureFilter@@UEAAJPEAU_FilterInfo@@@Z ; CaptureFilter::QueryFilterInfo
PUBLIC	?FindPin@CaptureFilter@@UEAAJPEB_WPEAPEAUIPin@@@Z ; CaptureFilter::FindPin
PUBLIC	?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z ; CaptureFilter::EnumPins
PUBLIC	?GetSyncSource@CaptureFilter@@UEAAJPEAPEAUIReferenceClock@@@Z ; CaptureFilter::GetSyncSource
PUBLIC	?SetSyncSource@CaptureFilter@@UEAAJPEAUIReferenceClock@@@Z ; CaptureFilter::SetSyncSource
PUBLIC	?GetState@CaptureFilter@@UEAAJKPEAW4_FilterState@@@Z ; CaptureFilter::GetState
PUBLIC	?Run@CaptureFilter@@UEAAJ_J@Z			; CaptureFilter::Run
PUBLIC	?Pause@CaptureFilter@@UEAAJXZ			; CaptureFilter::Pause
PUBLIC	?Stop@CaptureFilter@@UEAAJXZ			; CaptureFilter::Stop
PUBLIC	?GetClassID@CaptureFilter@@UEAAJPEAU_GUID@@@Z	; CaptureFilter::GetClassID
PUBLIC	?Release@CaptureFilter@@UEAAKXZ			; CaptureFilter::Release
PUBLIC	?AddRef@CaptureFilter@@UEAAKXZ			; CaptureFilter::AddRef
PUBLIC	?QueryInterface@CaptureFilter@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CaptureFilter::QueryInterface
PUBLIC	??_R4CaptureFilter@@6B@				; CaptureFilter::`RTTI Complete Object Locator'
PUBLIC	??_R3CaptureFilter@@8				; CaptureFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CaptureFilter@@8				; CaptureFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IBaseFilter@@8			; IBaseFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3IBaseFilter@@8				; IBaseFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IBaseFilter@@8				; IBaseFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IMediaFilter@@8			; IMediaFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3IMediaFilter@@8				; IMediaFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMediaFilter@@8				; IMediaFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IPersist@@8			; IPersist::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3IPersist@@8				; IPersist::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IPersist@@8				; IPersist::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R0?AUIPersist@@@8				; IPersist `RTTI Type Descriptor'
PUBLIC	??_R0?AUIMediaFilter@@@8			; IMediaFilter `RTTI Type Descriptor'
PUBLIC	??_R0?AUIBaseFilter@@@8				; IBaseFilter `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@CaptureFilter@@8			; CaptureFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCaptureFilter@@@8			; CaptureFilter `RTTI Type Descriptor'
PUBLIC	?zero@@YAXPEAX_K@Z				; zero
PUBLIC	??0IPin@@QEAA@XZ				; IPin::IPin
PUBLIC	??0IMemInputPin@@QEAA@XZ			; IMemInputPin::IMemInputPin
PUBLIC	??_GCapturePin@@UEAAPEAXI@Z			; CapturePin::`scalar deleting destructor'
PUBLIC	?QueryInterface@CapturePin@@W7EAAJAEBU_GUID@@PEAPEAX@Z ; [thunk]:CapturePin::QueryInterface`adjustor{8}'
PUBLIC	?AddRef@CapturePin@@W7EAAKXZ			; [thunk]:CapturePin::AddRef`adjustor{8}'
PUBLIC	?Release@CapturePin@@W7EAAKXZ			; [thunk]:CapturePin::Release`adjustor{8}'
PUBLIC	?Release@SampleData@@QEAAXXZ			; SampleData::Release
PUBLIC	??1SampleData@@QEAA@XZ				; SampleData::~SampleData
PUBLIC	??_GSampleData@@QEAAPEAXI@Z			; SampleData::`scalar deleting destructor'
PUBLIC	?Num@?$List@PEAUSampleData@@@@QEBAIXZ		; List<SampleData * __ptr64>::Num
PUBLIC	?Free@@YAXPEAX@Z				; Free
PUBLIC	?Clear@?$List@PEAUSampleData@@@@QEAAXXZ		; List<SampleData * __ptr64>::Clear
PUBLIC	??A?$List@PEAUSampleData@@@@QEAAAEAPEAUSampleData@@I@Z ; List<SampleData * __ptr64>::operator[]
PUBLIC	?FlushSamples@DeviceSource@@AEAAXXZ		; DeviceSource::FlushSamples
PUBLIC	!=
PUBLIC	??0IPersist@@QEAA@XZ				; IPersist::IPersist
PUBLIC	??0IMediaFilter@@QEAA@XZ			; IMediaFilter::IMediaFilter
PUBLIC	??0IBaseFilter@@QEAA@XZ				; IBaseFilter::IBaseFilter
PUBLIC	??_GCaptureFilter@@UEAAPEAXI@Z			; CaptureFilter::`scalar deleting destructor'
PUBLIC	??0IEnumPins@@QEAA@XZ				; IEnumPins::IEnumPins
PUBLIC	??_GCaptureEnumPins@@UEAAPEAXI@Z		; CaptureEnumPins::`scalar deleting destructor'
PUBLIC	?GetCapturePin@CaptureFilter@@QEBAPEAVCapturePin@@XZ ; CaptureFilter::GetCapturePin
PUBLIC	??0IUnknown@@QEAA@XZ				; IUnknown::IUnknown
PUBLIC	??0IEnumMediaTypes@@QEAA@XZ			; IEnumMediaTypes::IEnumMediaTypes
PUBLIC	??_GCaptureEnumMediaTypes@@UEAAPEAXI@Z		; CaptureEnumMediaTypes::`scalar deleting destructor'
PUBLIC	IsEqualGUID
PUBLIC	==
PUBLIC	WinbaseIsolationAwarePrivateT_UnPgpgk
PUBLIC	WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk
PUBLIC	WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
PUBLIC	??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_R0PEAUSampleData@@@8				; SampleData * __ptr64 `RTTI Type Descriptor'
PUBLIC	??_7CaptureFilter@@6B@				; CaptureFilter::`vftable'
PUBLIC	??_7CapturePin@@6BIPin@@@			; CapturePin::`vftable'
PUBLIC	??_7CapturePin@@6BIMemInputPin@@@		; CapturePin::`vftable'
PUBLIC	??_7CaptureEnumMediaTypes@@6B@			; CaptureEnumMediaTypes::`vftable'
PUBLIC	??_7CaptureEnumPins@@6B@			; CaptureEnumPins::`vftable'
EXTRN	__security_check_cookie:PROC
EXTRN	??_ECapturePin@@UEAAPEAXI@Z:PROC		; CapturePin::`vector deleting destructor'
EXTRN	IID_IPin:BYTE
EXTRN	IID_IMemInputPin:BYTE
EXTRN	GUID_NULL:BYTE
EXTRN	__imp_?OSEnterMutex@@YAXPEAX@Z:PROC
EXTRN	__imp_?OSLeaveMutex@@YAXPEAX@Z:PROC
EXTRN	__imp_?MainAllocator@@3PEAVAlloc@@EA:QWORD
EXTRN	?__type_info_root_node@@3U__type_info_node@@A:BYTE ; __type_info_root_node
EXTRN	?name@type_info@@QEBAPEBDPEAU__type_info_node@@@Z:PROC ; type_info::name
EXTRN	__imp_?CrashError@@YAXPEB_WZZ:PROC
EXTRN	MEDIATYPE_Audio:BYTE
EXTRN	MEDIATYPE_Video:BYTE
EXTRN	??_ECaptureFilter@@UEAAPEAXI@Z:PROC		; CaptureFilter::`vector deleting destructor'
EXTRN	IID_IPersist:BYTE
EXTRN	IID_IMediaFilter:BYTE
EXTRN	IID_IBaseFilter:BYTE
EXTRN	??_ECaptureEnumPins@@UEAAPEAXI@Z:PROC		; CaptureEnumPins::`vector deleting destructor'
EXTRN	IID_IEnumPins:BYTE
EXTRN	??_ECaptureEnumMediaTypes@@UEAAPEAXI@Z:PROC	; CaptureEnumMediaTypes::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	IID_IUnknown:BYTE
EXTRN	IID_IEnumMediaTypes:BYTE
;	COMDAT WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk
_BSS	SEGMENT
WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
_BSS	SEGMENT
WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ DD 01H DUP (?)
;	COMDAT ??_7CaptureEnumPins@@6B@
CONST	SEGMENT
??_7CaptureEnumPins@@6B@ DQ FLAT:??_R4CaptureEnumPins@@6B@ ; CaptureEnumPins::`vftable'
	DQ	FLAT:?QueryInterface@CaptureEnumPins@@UEAAJAEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?AddRef@CaptureEnumPins@@UEAAKXZ
	DQ	FLAT:?Release@CaptureEnumPins@@UEAAKXZ
	DQ	FLAT:?Next@CaptureEnumPins@@UEAAJKPEAPEAUIPin@@PEAK@Z
	DQ	FLAT:?Skip@CaptureEnumPins@@UEAAJK@Z
	DQ	FLAT:?Reset@CaptureEnumPins@@UEAAJXZ
	DQ	FLAT:?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z
	DQ	FLAT:??_ECaptureEnumPins@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R4CaptureEnumPins@@6B@
rdata$r	SEGMENT
??_R4CaptureEnumPins@@6B@ DD 01H			; CaptureEnumPins::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCaptureEnumPins@@@8
	DD	imagerel ??_R3CaptureEnumPins@@8
	DD	imagerel ??_R4CaptureEnumPins@@6B@
rdata$r	ENDS
;	COMDAT ??_R3CaptureEnumPins@@8
rdata$r	SEGMENT
??_R3CaptureEnumPins@@8 DD 00H				; CaptureEnumPins::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2CaptureEnumPins@@8
rdata$r	ENDS
;	COMDAT ??_R2CaptureEnumPins@@8
rdata$r	SEGMENT
??_R2CaptureEnumPins@@8 DD imagerel ??_R1A@?0A@EA@CaptureEnumPins@@8 ; CaptureEnumPins::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IEnumPins@@8
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IEnumPins@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IEnumPins@@8 DD imagerel ??_R0?AUIEnumPins@@@8 ; IEnumPins::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IEnumPins@@8
rdata$r	ENDS
;	COMDAT ??_R3IEnumPins@@8
rdata$r	SEGMENT
??_R3IEnumPins@@8 DD 00H				; IEnumPins::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2IEnumPins@@8
rdata$r	ENDS
;	COMDAT ??_R2IEnumPins@@8
rdata$r	SEGMENT
??_R2IEnumPins@@8 DD imagerel ??_R1A@?0A@EA@IEnumPins@@8 ; IEnumPins::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AUIEnumPins@@@8
_DATA	SEGMENT
??_R0?AUIEnumPins@@@8 DQ FLAT:??_7type_info@@6B@	; IEnumPins `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIEnumPins@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CaptureEnumPins@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CaptureEnumPins@@8 DD imagerel ??_R0?AVCaptureEnumPins@@@8 ; CaptureEnumPins::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CaptureEnumPins@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCaptureEnumPins@@@8
_DATA	SEGMENT
??_R0?AVCaptureEnumPins@@@8 DQ FLAT:??_7type_info@@6B@	; CaptureEnumPins `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCaptureEnumPins@@', 00H
_DATA	ENDS
;	COMDAT ??_7CaptureEnumMediaTypes@@6B@
CONST	SEGMENT
??_7CaptureEnumMediaTypes@@6B@ DQ FLAT:??_R4CaptureEnumMediaTypes@@6B@ ; CaptureEnumMediaTypes::`vftable'
	DQ	FLAT:?QueryInterface@CaptureEnumMediaTypes@@UEAAJAEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?AddRef@CaptureEnumMediaTypes@@UEAAKXZ
	DQ	FLAT:?Release@CaptureEnumMediaTypes@@UEAAKXZ
	DQ	FLAT:?Next@CaptureEnumMediaTypes@@UEAAJKPEAPEAU_AMMediaType@@PEAK@Z
	DQ	FLAT:?Skip@CaptureEnumMediaTypes@@UEAAJK@Z
	DQ	FLAT:?Reset@CaptureEnumMediaTypes@@UEAAJXZ
	DQ	FLAT:?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
	DQ	FLAT:??_ECaptureEnumMediaTypes@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R4CaptureEnumMediaTypes@@6B@
rdata$r	SEGMENT
??_R4CaptureEnumMediaTypes@@6B@ DD 01H			; CaptureEnumMediaTypes::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCaptureEnumMediaTypes@@@8
	DD	imagerel ??_R3CaptureEnumMediaTypes@@8
	DD	imagerel ??_R4CaptureEnumMediaTypes@@6B@
rdata$r	ENDS
;	COMDAT ??_R3CaptureEnumMediaTypes@@8
rdata$r	SEGMENT
??_R3CaptureEnumMediaTypes@@8 DD 00H			; CaptureEnumMediaTypes::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2CaptureEnumMediaTypes@@8
rdata$r	ENDS
;	COMDAT ??_R2CaptureEnumMediaTypes@@8
rdata$r	SEGMENT
??_R2CaptureEnumMediaTypes@@8 DD imagerel ??_R1A@?0A@EA@CaptureEnumMediaTypes@@8 ; CaptureEnumMediaTypes::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IEnumMediaTypes@@8
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IEnumMediaTypes@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IEnumMediaTypes@@8 DD imagerel ??_R0?AUIEnumMediaTypes@@@8 ; IEnumMediaTypes::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IEnumMediaTypes@@8
rdata$r	ENDS
;	COMDAT ??_R3IEnumMediaTypes@@8
rdata$r	SEGMENT
??_R3IEnumMediaTypes@@8 DD 00H				; IEnumMediaTypes::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2IEnumMediaTypes@@8
rdata$r	ENDS
;	COMDAT ??_R2IEnumMediaTypes@@8
rdata$r	SEGMENT
??_R2IEnumMediaTypes@@8 DD imagerel ??_R1A@?0A@EA@IEnumMediaTypes@@8 ; IEnumMediaTypes::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AUIEnumMediaTypes@@@8
_DATA	SEGMENT
??_R0?AUIEnumMediaTypes@@@8 DQ FLAT:??_7type_info@@6B@	; IEnumMediaTypes `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIEnumMediaTypes@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CaptureEnumMediaTypes@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CaptureEnumMediaTypes@@8 DD imagerel ??_R0?AVCaptureEnumMediaTypes@@@8 ; CaptureEnumMediaTypes::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CaptureEnumMediaTypes@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCaptureEnumMediaTypes@@@8
_DATA	SEGMENT
??_R0?AVCaptureEnumMediaTypes@@@8 DQ FLAT:??_7type_info@@6B@ ; CaptureEnumMediaTypes `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCaptureEnumMediaTypes@@', 00H
_DATA	ENDS
;	COMDAT ??_7CapturePin@@6BIMemInputPin@@@
CONST	SEGMENT
??_7CapturePin@@6BIMemInputPin@@@ DQ FLAT:??_R4CapturePin@@6BIMemInputPin@@@ ; CapturePin::`vftable'
	DQ	FLAT:?QueryInterface@CapturePin@@W7EAAJAEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?AddRef@CapturePin@@W7EAAKXZ
	DQ	FLAT:?Release@CapturePin@@W7EAAKXZ
	DQ	FLAT:?GetAllocator@CapturePin@@UEAAJPEAPEAUIMemAllocator@@@Z
	DQ	FLAT:?NotifyAllocator@CapturePin@@UEAAJPEAUIMemAllocator@@H@Z
	DQ	FLAT:?GetAllocatorRequirements@CapturePin@@UEAAJPEAU_AllocatorProperties@@@Z
	DQ	FLAT:?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z
	DQ	FLAT:?ReceiveMultiple@CapturePin@@UEAAJPEAPEAUIMediaSample@@JPEAJ@Z
	DQ	FLAT:?ReceiveCanBlock@CapturePin@@UEAAJXZ
CONST	ENDS
;	COMDAT ??_R4CapturePin@@6BIMemInputPin@@@
rdata$r	SEGMENT
??_R4CapturePin@@6BIMemInputPin@@@ DD 01H		; CapturePin::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	imagerel ??_R0?AVCapturePin@@@8
	DD	imagerel ??_R3CapturePin@@8
	DD	imagerel ??_R4CapturePin@@6BIMemInputPin@@@
rdata$r	ENDS
;	COMDAT ??_7CapturePin@@6BIPin@@@
CONST	SEGMENT
??_7CapturePin@@6BIPin@@@ DQ FLAT:??_R4CapturePin@@6BIPin@@@ ; CapturePin::`vftable'
	DQ	FLAT:?QueryInterface@CapturePin@@UEAAJAEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?AddRef@CapturePin@@UEAAKXZ
	DQ	FLAT:?Release@CapturePin@@UEAAKXZ
	DQ	FLAT:?Connect@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z
	DQ	FLAT:?ReceiveConnection@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z
	DQ	FLAT:?Disconnect@CapturePin@@UEAAJXZ
	DQ	FLAT:?ConnectedTo@CapturePin@@UEAAJPEAPEAUIPin@@@Z
	DQ	FLAT:?ConnectionMediaType@CapturePin@@UEAAJPEAU_AMMediaType@@@Z
	DQ	FLAT:?QueryPinInfo@CapturePin@@UEAAJPEAU_PinInfo@@@Z
	DQ	FLAT:?QueryDirection@CapturePin@@UEAAJPEAW4_PinDirection@@@Z
	DQ	FLAT:?QueryId@CapturePin@@UEAAJPEAPEA_W@Z
	DQ	FLAT:?QueryAccept@CapturePin@@UEAAJPEBU_AMMediaType@@@Z
	DQ	FLAT:?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
	DQ	FLAT:?QueryInternalConnections@CapturePin@@UEAAJPEAPEAUIPin@@PEAK@Z
	DQ	FLAT:?EndOfStream@CapturePin@@UEAAJXZ
	DQ	FLAT:?BeginFlush@CapturePin@@UEAAJXZ
	DQ	FLAT:?EndFlush@CapturePin@@UEAAJXZ
	DQ	FLAT:?NewSegment@CapturePin@@UEAAJ_J0N@Z
	DQ	FLAT:??_ECapturePin@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R4CapturePin@@6BIPin@@@
rdata$r	SEGMENT
??_R4CapturePin@@6BIPin@@@ DD 01H			; CapturePin::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCapturePin@@@8
	DD	imagerel ??_R3CapturePin@@8
	DD	imagerel ??_R4CapturePin@@6BIPin@@@
rdata$r	ENDS
;	COMDAT ??_R3CapturePin@@8
rdata$r	SEGMENT
??_R3CapturePin@@8 DD 00H				; CapturePin::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	05H
	DD	imagerel ??_R2CapturePin@@8
rdata$r	ENDS
;	COMDAT ??_R2CapturePin@@8
rdata$r	SEGMENT
??_R2CapturePin@@8 DD imagerel ??_R1A@?0A@EA@CapturePin@@8 ; CapturePin::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IPin@@8
	DD	imagerel ??_R1A@?0A@EC@IUnknown@@8
	DD	imagerel ??_R17?0A@EA@IMemInputPin@@8
	DD	imagerel ??_R17?0A@EC@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EC@IUnknown@@8 DD imagerel ??_R0?AUIUnknown@@@8 ; IUnknown::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@IMemInputPin@@8
rdata$r	SEGMENT
??_R17?0A@EA@IMemInputPin@@8 DD imagerel ??_R0?AUIMemInputPin@@@8 ; IMemInputPin::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	01H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IMemInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R3IMemInputPin@@8
rdata$r	SEGMENT
??_R3IMemInputPin@@8 DD 00H				; IMemInputPin::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2IMemInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R2IMemInputPin@@8
rdata$r	SEGMENT
??_R2IMemInputPin@@8 DD imagerel ??_R1A@?0A@EA@IMemInputPin@@8 ; IMemInputPin::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IMemInputPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IMemInputPin@@8 DD imagerel ??_R0?AUIMemInputPin@@@8 ; IMemInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IMemInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIMemInputPin@@@8
_DATA	SEGMENT
??_R0?AUIMemInputPin@@@8 DQ FLAT:??_7type_info@@6B@	; IMemInputPin `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIMemInputPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD imagerel ??_R0?AUIUnknown@@@8 ; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IPin@@8 DD imagerel ??_R0?AUIPin@@@8	; IPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IPin@@8
rdata$r	ENDS
;	COMDAT ??_R3IPin@@8
rdata$r	SEGMENT
??_R3IPin@@8 DD	00H					; IPin::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2IPin@@8
rdata$r	ENDS
;	COMDAT ??_R2IPin@@8
rdata$r	SEGMENT
??_R2IPin@@8 DD	imagerel ??_R1A@?0A@EA@IPin@@8		; IPin::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AUIPin@@@8
_DATA	SEGMENT
??_R0?AUIPin@@@8 DQ FLAT:??_7type_info@@6B@		; IPin `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CapturePin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CapturePin@@8 DD imagerel ??_R0?AVCapturePin@@@8 ; CapturePin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CapturePin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCapturePin@@@8
_DATA	SEGMENT
??_R0?AVCapturePin@@@8 DQ FLAT:??_7type_info@@6B@	; CapturePin `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCapturePin@@', 00H
_DATA	ENDS
;	COMDAT ??_7CaptureFilter@@6B@
CONST	SEGMENT
??_7CaptureFilter@@6B@ DQ FLAT:??_R4CaptureFilter@@6B@	; CaptureFilter::`vftable'
	DQ	FLAT:?QueryInterface@CaptureFilter@@UEAAJAEBU_GUID@@PEAPEAX@Z
	DQ	FLAT:?AddRef@CaptureFilter@@UEAAKXZ
	DQ	FLAT:?Release@CaptureFilter@@UEAAKXZ
	DQ	FLAT:?GetClassID@CaptureFilter@@UEAAJPEAU_GUID@@@Z
	DQ	FLAT:?Stop@CaptureFilter@@UEAAJXZ
	DQ	FLAT:?Pause@CaptureFilter@@UEAAJXZ
	DQ	FLAT:?Run@CaptureFilter@@UEAAJ_J@Z
	DQ	FLAT:?GetState@CaptureFilter@@UEAAJKPEAW4_FilterState@@@Z
	DQ	FLAT:?SetSyncSource@CaptureFilter@@UEAAJPEAUIReferenceClock@@@Z
	DQ	FLAT:?GetSyncSource@CaptureFilter@@UEAAJPEAPEAUIReferenceClock@@@Z
	DQ	FLAT:?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z
	DQ	FLAT:?FindPin@CaptureFilter@@UEAAJPEB_WPEAPEAUIPin@@@Z
	DQ	FLAT:?QueryFilterInfo@CaptureFilter@@UEAAJPEAU_FilterInfo@@@Z
	DQ	FLAT:?JoinFilterGraph@CaptureFilter@@UEAAJPEAUIFilterGraph@@PEB_W@Z
	DQ	FLAT:?QueryVendorInfo@CaptureFilter@@UEAAJPEAPEA_W@Z
	DQ	FLAT:??_ECaptureFilter@@UEAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R4CaptureFilter@@6B@
rdata$r	SEGMENT
??_R4CaptureFilter@@6B@ DD 01H				; CaptureFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCaptureFilter@@@8
	DD	imagerel ??_R3CaptureFilter@@8
	DD	imagerel ??_R4CaptureFilter@@6B@
rdata$r	ENDS
;	COMDAT ??_R3CaptureFilter@@8
rdata$r	SEGMENT
??_R3CaptureFilter@@8 DD 00H				; CaptureFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2CaptureFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2CaptureFilter@@8
rdata$r	SEGMENT
??_R2CaptureFilter@@8 DD imagerel ??_R1A@?0A@EA@CaptureFilter@@8 ; CaptureFilter::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IBaseFilter@@8
	DD	imagerel ??_R1A@?0A@EA@IMediaFilter@@8
	DD	imagerel ??_R1A@?0A@EA@IPersist@@8
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IBaseFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IBaseFilter@@8 DD imagerel ??_R0?AUIBaseFilter@@@8 ; IBaseFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IBaseFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3IBaseFilter@@8
rdata$r	SEGMENT
??_R3IBaseFilter@@8 DD 00H				; IBaseFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2IBaseFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2IBaseFilter@@8
rdata$r	SEGMENT
??_R2IBaseFilter@@8 DD imagerel ??_R1A@?0A@EA@IBaseFilter@@8 ; IBaseFilter::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IMediaFilter@@8
	DD	imagerel ??_R1A@?0A@EA@IPersist@@8
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IMediaFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IMediaFilter@@8 DD imagerel ??_R0?AUIMediaFilter@@@8 ; IMediaFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IMediaFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3IMediaFilter@@8
rdata$r	SEGMENT
??_R3IMediaFilter@@8 DD 00H				; IMediaFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2IMediaFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2IMediaFilter@@8
rdata$r	SEGMENT
??_R2IMediaFilter@@8 DD imagerel ??_R1A@?0A@EA@IMediaFilter@@8 ; IMediaFilter::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IPersist@@8
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IPersist@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IPersist@@8 DD imagerel ??_R0?AUIPersist@@@8 ; IPersist::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IPersist@@8
rdata$r	ENDS
;	COMDAT ??_R3IPersist@@8
rdata$r	SEGMENT
??_R3IPersist@@8 DD 00H					; IPersist::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2IPersist@@8
rdata$r	ENDS
;	COMDAT ??_R2IPersist@@8
rdata$r	SEGMENT
??_R2IPersist@@8 DD imagerel ??_R1A@?0A@EA@IPersist@@8	; IPersist::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@IUnknown@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD imagerel ??_R0?AUIUnknown@@@8 ; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD imagerel ??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DQ FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AUIPersist@@@8
_DATA	SEGMENT
??_R0?AUIPersist@@@8 DQ FLAT:??_7type_info@@6B@		; IPersist `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIPersist@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AUIMediaFilter@@@8
_DATA	SEGMENT
??_R0?AUIMediaFilter@@@8 DQ FLAT:??_7type_info@@6B@	; IMediaFilter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIMediaFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AUIBaseFilter@@@8
_DATA	SEGMENT
??_R0?AUIBaseFilter@@@8 DQ FLAT:??_7type_info@@6B@	; IBaseFilter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUIBaseFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CaptureFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CaptureFilter@@8 DD imagerel ??_R0?AVCaptureFilter@@@8 ; CaptureFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CaptureFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCaptureFilter@@@8
_DATA	SEGMENT
??_R0?AVCaptureFilter@@@8 DQ FLAT:??_7type_info@@6B@	; CaptureFilter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCaptureFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R0PEAUSampleData@@@8
_DATA	SEGMENT
??_R0PEAUSampleData@@@8 DQ FLAT:??_7type_info@@6B@	; SampleData * __ptr64 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.PEAUSampleData@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@ DB 'O'
	DB	00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '!', 00H, ' '
	DB	00H, ' ', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '<', 00H
	DB	'%', 00H, 'S', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'[', 00H, ']', 00H, '(', 00H, '%', 00H, 'd', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_UnPgpgk
_DATA	SEGMENT
WinbaseIsolationAwarePrivateT_UnPgpgk DQ ffffffffffffffffH
$SG-299	DB	00H
	ORG $+2
$SG-300	DB	00H, 00H
	ORG $+6
$SG-318	DB	'M', 00H, 'J', 00H, 'P', 00H, 'G', 00H, 00H, 00H
	ORG $+6
$SG-317	DB	'd', 00H, 'v', 00H, 'h', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG-316	DB	'd', 00H, 'v', 00H, 's', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG-315	DB	'd', 00H, 'v', 00H, 's', 00H, 'l', 00H, 00H, 00H
	ORG $+6
$SG-314	DB	'H', 00H, '2', 00H, '6', 00H, '4', 00H, 00H, 00H
	ORG $+6
$SG-313	DB	'M', 00H, 'P', 00H, 'E', 00H, 'G', 00H, '2', 00H, '_', 00H
	DB	'V', 00H, 'I', 00H, 'D', 00H, 'E', 00H, 'O', 00H, 00H, 00H
$SG-312	DB	'H', 00H, 'D', 00H, 'Y', 00H, 'C', 00H, 00H, 00H
	ORG $+6
$SG-311	DB	'U', 00H, 'Y', 00H, 'V', 00H, 'Y', 00H, 00H, 00H
	ORG $+6
$SG-310	DB	'Y', 00H, 'U', 00H, 'Y', 00H, '2', 00H, 00H, 00H
	ORG $+6
$SG-309	DB	'Y', 00H, 'V', 00H, 'Y', 00H, 'U', 00H, 00H, 00H
	ORG $+6
$SG-308	DB	'Y', 00H, 'V', 00H, 'U', 00H, '9', 00H, 00H, 00H
	ORG $+6
$SG-307	DB	'Y', 00H, '4', 00H, '1', 00H, 'P', 00H, 00H, 00H
	ORG $+6
$SG-306	DB	'Y', 00H, 'V', 00H, '1', 00H, '2', 00H, 00H, 00H
	ORG $+6
$SG-305	DB	'I', 00H, '4', 00H, '2', 00H, '0', 00H, 00H, 00H
	ORG $+6
$SG-304	DB	'R', 00H, 'G', 00H, 'B', 00H, 'A', 00H, '3', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG-303	DB	'R', 00H, 'G', 00H, 'B', 00H, '3', 00H, '2', 00H, 00H, 00H
	ORG $+4
$SG-302	DB	'R', 00H, 'G', 00H, 'B', 00H, '2', 00H, '4', 00H, 00H, 00H
	ORG $+4
$SG-301	DB	'N', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG-319	DB	'V', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'o', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e'
	DB	00H, 00H, 00H
	ORG $+4
$SG-320	DB	'A', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H
	DB	'C', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'e'
	DB	00H, 00H, 00H
	ORG $+4
$SG-321	DB	'C', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H
	DB	'e', 00H, ' ', 00H, 'P', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG-322	DB	'C', 00H, 'a', 00H, 'p', 00H, 't', 00H, 'u', 00H, 'r', 00H
	DB	'e', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\template.h
pdata	SEGMENT
$pdata$??A?$List@PEAUSampleData@@@@QEAAAEAPEAUSampleData@@I@Z DD imagerel $LN4
	DD	imagerel $LN4+90
	DD	imagerel $unwind$??A?$List@PEAUSampleData@@@@QEAAAEAPEAUSampleData@@I@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$List@PEAUSampleData@@@@QEAAAEAPEAUSampleData@@I@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??A?$List@PEAUSampleData@@@@QEAAAEAPEAUSampleData@@I@Z
_TEXT	SEGMENT
this$ = 48
index$ = 56
??A?$List@PEAUSampleData@@@@QEAAAEAPEAUSampleData@@I@Z PROC ; List<SampleData * __ptr64>::operator[], COMDAT

; 374  :     {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	ebx, edx
	mov	rdi, rcx

; 375  :         assert(index < num);
; 376  :         if(index >= num) {CrashError(TEXT("Out of range!  List<%S>::operator[](%d)"), typeid(T).name(), index); return array[0];}

	cmp	edx, DWORD PTR [rcx+8]
	jb	SHORT $LN1@operator@2
	lea	rdx, OFFSET FLAT:?__type_info_root_node@@3U__type_info_node@@A ; __type_info_root_node
	lea	rcx, OFFSET FLAT:??_R0PEAUSampleData@@@8
	call	?name@type_info@@QEBAPEBDPEAU__type_info_node@@@Z ; type_info::name
	lea	rcx, OFFSET FLAT:??_C@_1FA@KCLJOBNL@?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CB?$AA?5?$AA?5?$AAL?$AAi?$AAs?$AAt?$AA?$DM?$AA?$CF?$AAS?$AA?$DO?$AA?3?$AA?3?$AAo?$AAp?$AAe?$AAr?$AAa?$AAt?$AAo@
	mov	r8d, ebx
	mov	rdx, rax
	call	QWORD PTR __imp_?CrashError@@YAXPEB_WZZ
	mov	rax, QWORD PTR [rdi]

; 378  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN1@operator@2:

; 377  :         return array[index];

	mov	rax, QWORD PTR [rcx]
	lea	rax, QWORD PTR [rax+rbx*8]

; 378  :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??A?$List@PEAUSampleData@@@@QEAAAEAPEAUSampleData@@I@Z ENDP ; List<SampleData * __ptr64>::operator[]
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Num@?$List@PEAUSampleData@@@@QEBAIXZ
_TEXT	SEGMENT
this$ = 8
?Num@?$List@PEAUSampleData@@@@QEBAIXZ PROC		; List<SampleData * __ptr64>::Num, COMDAT

; 37   :     inline unsigned int Num() const     {return num;}

	mov	eax, DWORD PTR [rcx+8]
	ret	0
?Num@?$List@PEAUSampleData@@@@QEBAIXZ ENDP		; List<SampleData * __ptr64>::Num
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
_TEXT	ENDS
;	COMDAT ?Reset@CaptureEnumMediaTypes@@UEAAJXZ
_TEXT	SEGMENT
this$ = 8
?Reset@CaptureEnumMediaTypes@@UEAAJXZ PROC		; CaptureEnumMediaTypes::Reset, COMDAT

; 417  : STDMETHODIMP CaptureEnumMediaTypes::Reset()                                                                 {return S_OK;}

	xor	eax, eax
	ret	0
?Reset@CaptureEnumMediaTypes@@UEAAJXZ ENDP		; CaptureEnumMediaTypes::Reset
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Skip@CaptureEnumMediaTypes@@UEAAJK@Z
_TEXT	SEGMENT
this$ = 8
cMediaTypes$ = 16
?Skip@CaptureEnumMediaTypes@@UEAAJK@Z PROC		; CaptureEnumMediaTypes::Skip, COMDAT

; 416  : STDMETHODIMP CaptureEnumMediaTypes::Skip(ULONG cMediaTypes)                                                 {return S_FALSE;}

	mov	eax, 1
	ret	0
?Skip@CaptureEnumMediaTypes@@UEAAJK@Z ENDP		; CaptureEnumMediaTypes::Skip
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Next@CaptureEnumMediaTypes@@UEAAJKPEAPEAU_AMMediaType@@PEAK@Z
_TEXT	SEGMENT
this$ = 8
cMediaTypes$ = 16
ppMediaTypes$ = 24
pcFetched$ = 32
?Next@CaptureEnumMediaTypes@@UEAAJKPEAPEAU_AMMediaType@@PEAK@Z PROC ; CaptureEnumMediaTypes::Next, COMDAT

; 415  : STDMETHODIMP CaptureEnumMediaTypes::Next(ULONG cMediaTypes, AM_MEDIA_TYPE **ppMediaTypes, ULONG *pcFetched) {return S_FALSE;}

	mov	eax, 1
	ret	0
?Next@CaptureEnumMediaTypes@@UEAAJKPEAPEAU_AMMediaType@@PEAK@Z ENDP ; CaptureEnumMediaTypes::Next
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Release@CaptureEnumMediaTypes@@UEAAKXZ DD imagerel $LN6
	DD	imagerel $LN6+41
	DD	imagerel $unwind$?Release@CaptureEnumMediaTypes@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Release@CaptureEnumMediaTypes@@UEAAKXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?Release@CaptureEnumMediaTypes@@UEAAKXZ
_TEXT	SEGMENT
this$ = 48
?Release@CaptureEnumMediaTypes@@UEAAKXZ PROC		; CaptureEnumMediaTypes::Release, COMDAT

; 412  : STDMETHODIMP_(ULONG) CaptureEnumMediaTypes::Release() {if(!InterlockedDecrement(&refCount)) {delete this; return 0;} return refCount;}

$LN6:
	sub	rsp, 40					; 00000028H
	lock dec DWORD PTR [rcx+8]
	jne	SHORT $LN1@Release
	test	rcx, rcx
	je	SHORT $LN4@Release
	mov	rax, QWORD PTR [rcx]
	mov	edx, 1
	call	QWORD PTR [rax+56]
$LN4@Release:
	xor	eax, eax
	add	rsp, 40					; 00000028H
	ret	0
$LN1@Release:
	mov	eax, DWORD PTR [rcx+8]
	add	rsp, 40					; 00000028H
	ret	0
?Release@CaptureEnumMediaTypes@@UEAAKXZ ENDP		; CaptureEnumMediaTypes::Release
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AddRef@CaptureEnumMediaTypes@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?AddRef@CaptureEnumMediaTypes@@UEAAKXZ PROC		; CaptureEnumMediaTypes::AddRef, COMDAT

; 411  : STDMETHODIMP_(ULONG) CaptureEnumMediaTypes::AddRef()  {return ++refCount;}

	mov	eax, DWORD PTR [rcx+8]
	inc	eax
	mov	DWORD PTR [rcx+8], eax
	ret	0
?AddRef@CaptureEnumMediaTypes@@UEAAKXZ ENDP		; CaptureEnumMediaTypes::AddRef
_TEXT	ENDS
PUBLIC	??1CaptureEnumMediaTypes@@UEAA@XZ		; CaptureEnumMediaTypes::~CaptureEnumMediaTypes
; Function compile flags: /Ogtpy
;	COMDAT ??1CaptureEnumMediaTypes@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1CaptureEnumMediaTypes@@UEAA@XZ PROC			; CaptureEnumMediaTypes::~CaptureEnumMediaTypes, COMDAT

; 392  : {

	lea	rax, OFFSET FLAT:??_7CaptureEnumMediaTypes@@6B@
	mov	QWORD PTR [rcx], rax

; 393  :     pin->Release();

	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rcx]

; 394  : }

	rex_jmp	QWORD PTR [rax+16]
??1CaptureEnumMediaTypes@@UEAA@XZ ENDP			; CaptureEnumMediaTypes::~CaptureEnumMediaTypes
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Reset@CaptureEnumPins@@UEAAJXZ
_TEXT	SEGMENT
this$ = 8
?Reset@CaptureEnumPins@@UEAAJXZ PROC			; CaptureEnumPins::Reset, COMDAT

; 375  : STDMETHODIMP CaptureEnumPins::Reset()               {curPin = 0; return S_OK;}

	mov	DWORD PTR [rcx+24], 0
	xor	eax, eax
	ret	0
?Reset@CaptureEnumPins@@UEAAJXZ ENDP			; CaptureEnumPins::Reset
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Skip@CaptureEnumPins@@UEAAJK@Z
_TEXT	SEGMENT
this$ = 8
cPins$ = 16
?Skip@CaptureEnumPins@@UEAAJK@Z PROC			; CaptureEnumPins::Skip, COMDAT

; 374  : STDMETHODIMP CaptureEnumPins::Skip(ULONG cPins)     {return (++curPin > 1) ? S_FALSE : S_OK;}

	inc	DWORD PTR [rcx+24]
	xor	eax, eax
	cmp	DWORD PTR [rcx+24], 1
	seta	al
	ret	0
?Skip@CaptureEnumPins@@UEAAJK@Z ENDP			; CaptureEnumPins::Skip
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Release@CaptureEnumPins@@UEAAKXZ DD imagerel $LN6
	DD	imagerel $LN6+41
	DD	imagerel $unwind$?Release@CaptureEnumPins@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Release@CaptureEnumPins@@UEAAKXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?Release@CaptureEnumPins@@UEAAKXZ
_TEXT	SEGMENT
this$ = 48
?Release@CaptureEnumPins@@UEAAKXZ PROC			; CaptureEnumPins::Release, COMDAT

; 353  : STDMETHODIMP_(ULONG) CaptureEnumPins::Release() {if(!InterlockedDecrement(&refCount)) {delete this; return 0;} return refCount;}

$LN6:
	sub	rsp, 40					; 00000028H
	lock dec DWORD PTR [rcx+8]
	jne	SHORT $LN1@Release@2
	test	rcx, rcx
	je	SHORT $LN4@Release@2
	mov	rax, QWORD PTR [rcx]
	mov	edx, 1
	call	QWORD PTR [rax+56]
$LN4@Release@2:
	xor	eax, eax
	add	rsp, 40					; 00000028H
	ret	0
$LN1@Release@2:
	mov	eax, DWORD PTR [rcx+8]
	add	rsp, 40					; 00000028H
	ret	0
?Release@CaptureEnumPins@@UEAAKXZ ENDP			; CaptureEnumPins::Release
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AddRef@CaptureEnumPins@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?AddRef@CaptureEnumPins@@UEAAKXZ PROC			; CaptureEnumPins::AddRef, COMDAT

; 352  : STDMETHODIMP_(ULONG) CaptureEnumPins::AddRef()  {return ++refCount;}

	mov	eax, DWORD PTR [rcx+8]
	inc	eax
	mov	DWORD PTR [rcx+8], eax
	ret	0
?AddRef@CaptureEnumPins@@UEAAKXZ ENDP			; CaptureEnumPins::AddRef
_TEXT	ENDS
PUBLIC	??1CaptureEnumPins@@UEAA@XZ			; CaptureEnumPins::~CaptureEnumPins
; Function compile flags: /Ogtpy
;	COMDAT ??1CaptureEnumPins@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1CaptureEnumPins@@UEAA@XZ PROC			; CaptureEnumPins::~CaptureEnumPins, COMDAT

; 332  : {

	lea	rax, OFFSET FLAT:??_7CaptureEnumPins@@6B@
	mov	QWORD PTR [rcx], rax

; 333  :     filter->Release();

	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rcx]

; 334  : }

	rex_jmp	QWORD PTR [rax+16]
??1CaptureEnumPins@@UEAA@XZ ENDP			; CaptureEnumPins::~CaptureEnumPins
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?QueryVendorInfo@CaptureFilter@@UEAAJPEAPEA_W@Z
_TEXT	SEGMENT
this$ = 8
pVendorInfo$ = 16
?QueryVendorInfo@CaptureFilter@@UEAAJPEAPEA_W@Z PROC	; CaptureFilter::QueryVendorInfo, COMDAT

; 319  : STDMETHODIMP CaptureFilter::QueryVendorInfo(LPWSTR *pVendorInfo)                   {return E_NOTIMPL;}

	mov	eax, -2147467263			; ffffffff80004001H
	ret	0
?QueryVendorInfo@CaptureFilter@@UEAAJPEAPEA_W@Z ENDP	; CaptureFilter::QueryVendorInfo
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?JoinFilterGraph@CaptureFilter@@UEAAJPEAUIFilterGraph@@PEB_W@Z
_TEXT	SEGMENT
this$ = 8
pGraph$ = 16
pName$ = 24
?JoinFilterGraph@CaptureFilter@@UEAAJPEAUIFilterGraph@@PEB_W@Z PROC ; CaptureFilter::JoinFilterGraph, COMDAT

; 318  : STDMETHODIMP CaptureFilter::JoinFilterGraph(IFilterGraph *pGraph, LPCWSTR pName)   {graph = pGraph; return NOERROR;}

	mov	QWORD PTR [rcx+16], rdx
	xor	eax, eax
	ret	0
?JoinFilterGraph@CaptureFilter@@UEAAJPEAUIFilterGraph@@PEB_W@Z ENDP ; CaptureFilter::JoinFilterGraph
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?QueryFilterInfo@CaptureFilter@@UEAAJPEAU_FilterInfo@@@Z DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$?QueryFilterInfo@CaptureFilter@@UEAAJPEAU_FilterInfo@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryFilterInfo@CaptureFilter@@UEAAJPEAU_FilterInfo@@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?QueryFilterInfo@CaptureFilter@@UEAAJPEAU_FilterInfo@@@Z
_TEXT	SEGMENT
this$ = 48
pInfo$ = 56
?QueryFilterInfo@CaptureFilter@@UEAAJPEAU_FilterInfo@@@Z PROC ; CaptureFilter::QueryFilterInfo, COMDAT

; 310  : {

$LN5:
	sub	rsp, 40					; 00000028H

; 311  :     mcpy(pInfo->achName, FILTER_NAME, sizeof(FILTER_NAME));

	mov	rax, QWORD PTR $SG-322
	mov	QWORD PTR [rdx], rax
	mov	rax, QWORD PTR $SG-322+8
	mov	QWORD PTR [rdx+8], rax
	mov	rax, QWORD PTR $SG-322+16
	mov	QWORD PTR [rdx+16], rax
	mov	eax, DWORD PTR $SG-322+24
	mov	DWORD PTR [rdx+24], eax
	movzx	eax, WORD PTR $SG-322+28
	mov	WORD PTR [rdx+28], ax

; 312  : 
; 313  :     pInfo->pGraph = graph;

	mov	rax, QWORD PTR [rcx+16]
	mov	QWORD PTR [rdx+256], rax

; 314  :     if(graph) graph->AddRef();

	cmp	QWORD PTR [rcx+16], 0
	je	SHORT $LN4@QueryFilte
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN4@QueryFilte:

; 315  :     return NOERROR;

	xor	eax, eax

; 316  : }

	add	rsp, 40					; 00000028H
	ret	0
?QueryFilterInfo@CaptureFilter@@UEAAJPEAU_FilterInfo@@@Z ENDP ; CaptureFilter::QueryFilterInfo
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?FindPin@CaptureFilter@@UEAAJPEB_WPEAPEAUIPin@@@Z
_TEXT	SEGMENT
this$ = 8
Id$ = 16
ppPin$ = 24
?FindPin@CaptureFilter@@UEAAJPEB_WPEAPEAUIPin@@@Z PROC	; CaptureFilter::FindPin, COMDAT

; 308  : STDMETHODIMP CaptureFilter::FindPin(LPCWSTR Id, IPin **ppPin) {return E_NOTIMPL;}

	mov	eax, -2147467263			; ffffffff80004001H
	ret	0
?FindPin@CaptureFilter@@UEAAJPEB_WPEAPEAUIPin@@@Z ENDP	; CaptureFilter::FindPin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Run@CaptureFilter@@UEAAJ_J@Z
_TEXT	SEGMENT
this$ = 8
tStart$ = 16
?Run@CaptureFilter@@UEAAJ_J@Z PROC			; CaptureFilter::Run, COMDAT

; 299  : STDMETHODIMP CaptureFilter::Run(REFERENCE_TIME tStart)                     {state = State_Running; return S_OK;}

	mov	DWORD PTR [rcx+12], 2
	xor	eax, eax
	ret	0
?Run@CaptureFilter@@UEAAJ_J@Z ENDP			; CaptureFilter::Run
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Pause@CaptureFilter@@UEAAJXZ
_TEXT	SEGMENT
this$ = 8
?Pause@CaptureFilter@@UEAAJXZ PROC			; CaptureFilter::Pause, COMDAT

; 298  : STDMETHODIMP CaptureFilter::Pause()                                        {state = State_Paused;  return S_OK;}

	mov	DWORD PTR [rcx+12], 1
	xor	eax, eax
	ret	0
?Pause@CaptureFilter@@UEAAJXZ ENDP			; CaptureFilter::Pause
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Stop@CaptureFilter@@UEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?Stop@CaptureFilter@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Stop@CaptureFilter@@UEAAJXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?Stop@CaptureFilter@@UEAAJXZ
_TEXT	SEGMENT
this$ = 48
?Stop@CaptureFilter@@UEAAJXZ PROC			; CaptureFilter::Stop, COMDAT

; 297  : STDMETHODIMP CaptureFilter::Stop()                                         {pin->EndFlush(); state = State_Stopped; return S_OK;}

$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rcx+24]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+128]
	mov	DWORD PTR [rbx+12], 0
	xor	eax, eax
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?Stop@CaptureFilter@@UEAAJXZ ENDP			; CaptureFilter::Stop
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetSyncSource@CaptureFilter@@UEAAJPEAPEAUIReferenceClock@@@Z
_TEXT	SEGMENT
this$ = 8
pClock$ = 16
?GetSyncSource@CaptureFilter@@UEAAJPEAPEAUIReferenceClock@@@Z PROC ; CaptureFilter::GetSyncSource, COMDAT

; 296  : STDMETHODIMP CaptureFilter::GetSyncSource(IReferenceClock **pClock)        {*pClock = NULL; return NOERROR;}

	mov	QWORD PTR [rdx], 0
	xor	eax, eax
	ret	0
?GetSyncSource@CaptureFilter@@UEAAJPEAPEAUIReferenceClock@@@Z ENDP ; CaptureFilter::GetSyncSource
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?SetSyncSource@CaptureFilter@@UEAAJPEAUIReferenceClock@@@Z
_TEXT	SEGMENT
this$ = 8
pClock$ = 16
?SetSyncSource@CaptureFilter@@UEAAJPEAUIReferenceClock@@@Z PROC ; CaptureFilter::SetSyncSource, COMDAT

; 295  : STDMETHODIMP CaptureFilter::SetSyncSource(IReferenceClock *pClock)         {return S_OK;}

	xor	eax, eax
	ret	0
?SetSyncSource@CaptureFilter@@UEAAJPEAUIReferenceClock@@@Z ENDP ; CaptureFilter::SetSyncSource
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetState@CaptureFilter@@UEAAJKPEAW4_FilterState@@@Z
_TEXT	SEGMENT
this$ = 8
dwMSecs$ = 16
State$ = 24
?GetState@CaptureFilter@@UEAAJKPEAW4_FilterState@@@Z PROC ; CaptureFilter::GetState, COMDAT

; 294  : STDMETHODIMP CaptureFilter::GetState(DWORD dwMSecs, FILTER_STATE *State)   {*State = state; return S_OK;}

	mov	eax, DWORD PTR [rcx+12]
	mov	DWORD PTR [r8], eax
	xor	eax, eax
	ret	0
?GetState@CaptureFilter@@UEAAJKPEAW4_FilterState@@@Z ENDP ; CaptureFilter::GetState
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetClassID@CaptureFilter@@UEAAJPEAU_GUID@@@Z
_TEXT	SEGMENT
this$ = 8
pClsID$ = 16
?GetClassID@CaptureFilter@@UEAAJPEAU_GUID@@@Z PROC	; CaptureFilter::GetClassID, COMDAT

; 291  : STDMETHODIMP CaptureFilter::GetClassID(CLSID *pClsID) {return E_NOTIMPL;}

	mov	eax, -2147467263			; ffffffff80004001H
	ret	0
?GetClassID@CaptureFilter@@UEAAJPEAU_GUID@@@Z ENDP	; CaptureFilter::GetClassID
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Release@CaptureFilter@@UEAAKXZ DD imagerel $LN6
	DD	imagerel $LN6+41
	DD	imagerel $unwind$?Release@CaptureFilter@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Release@CaptureFilter@@UEAAKXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?Release@CaptureFilter@@UEAAKXZ
_TEXT	SEGMENT
this$ = 48
?Release@CaptureFilter@@UEAAKXZ PROC			; CaptureFilter::Release, COMDAT

; 288  : STDMETHODIMP_(ULONG) CaptureFilter::Release() {if(!InterlockedDecrement(&refCount)) {delete this; return 0;} return refCount;}

$LN6:
	sub	rsp, 40					; 00000028H
	lock dec DWORD PTR [rcx+8]
	jne	SHORT $LN1@Release@3
	test	rcx, rcx
	je	SHORT $LN4@Release@3
	mov	rax, QWORD PTR [rcx]
	mov	edx, 1
	call	QWORD PTR [rax+120]
$LN4@Release@3:
	xor	eax, eax
	add	rsp, 40					; 00000028H
	ret	0
$LN1@Release@3:
	mov	eax, DWORD PTR [rcx+8]
	add	rsp, 40					; 00000028H
	ret	0
?Release@CaptureFilter@@UEAAKXZ ENDP			; CaptureFilter::Release
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AddRef@CaptureFilter@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?AddRef@CaptureFilter@@UEAAKXZ PROC			; CaptureFilter::AddRef, COMDAT

; 287  : STDMETHODIMP_(ULONG) CaptureFilter::AddRef()  {return ++refCount;}

	mov	eax, DWORD PTR [rcx+8]
	inc	eax
	mov	DWORD PTR [rcx+8], eax
	ret	0
?AddRef@CaptureFilter@@UEAAKXZ ENDP			; CaptureFilter::AddRef
_TEXT	ENDS
PUBLIC	??1CaptureFilter@@UEAA@XZ			; CaptureFilter::~CaptureFilter
; Function compile flags: /Ogtpy
;	COMDAT ??1CaptureFilter@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1CaptureFilter@@UEAA@XZ PROC				; CaptureFilter::~CaptureFilter, COMDAT

; 249  : {

	lea	rax, OFFSET FLAT:??_7CaptureFilter@@6B@
	mov	QWORD PTR [rcx], rax

; 250  :     pin->Release();

	mov	rcx, QWORD PTR [rcx+24]
	mov	rax, QWORD PTR [rcx]

; 251  : }

	rex_jmp	QWORD PTR [rax+16]
??1CaptureFilter@@UEAA@XZ ENDP				; CaptureFilter::~CaptureFilter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ReceiveCanBlock@CapturePin@@UEAAJXZ
_TEXT	SEGMENT
this$ = 8
?ReceiveCanBlock@CapturePin@@UEAAJXZ PROC		; CapturePin::ReceiveCanBlock, COMDAT

; 216  : STDMETHODIMP CapturePin::ReceiveCanBlock() {return S_FALSE;}

	mov	eax, 1
	ret	0
?ReceiveCanBlock@CapturePin@@UEAAJXZ ENDP		; CapturePin::ReceiveCanBlock
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReceiveMultiple@CapturePin@@UEAAJPEAPEAUIMediaSample@@JPEAJ@Z DD imagerel $LN10
	DD	imagerel $LN10+105
	DD	imagerel $unwind$?ReceiveMultiple@CapturePin@@UEAAJPEAPEAUIMediaSample@@JPEAJ@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReceiveMultiple@CapturePin@@UEAAJPEAPEAUIMediaSample@@JPEAJ@Z DD 0a1801H
	DD	0a6418H
	DD	095418H
	DD	083418H
	DD	0d0143218H
	DD	07010c012H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?ReceiveMultiple@CapturePin@@UEAAJPEAPEAUIMediaSample@@JPEAJ@Z
_TEXT	SEGMENT
this$ = 64
pSamples$ = 72
nSamples$ = 80
nSamplesProcessed$ = 88
?ReceiveMultiple@CapturePin@@UEAAJPEAPEAUIMediaSample@@JPEAJ@Z PROC ; CapturePin::ReceiveMultiple, COMDAT

; 209  : {

$LN10:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	push	r12
	push	r13
	sub	rsp, 32					; 00000020H

; 210  :     for(long i=0; i<nSamples; i++)

	xor	ebx, ebx
	mov	rbp, r9
	movsxd	rsi, r8d
	mov	r13, rdx
	mov	rdi, rcx
	test	r8d, r8d
	jle	SHORT $LN8@ReceiveMul
	npad	5
$LL3@ReceiveMul:

; 211  :         Receive(pSamples[i]);

	mov	rax, QWORD PTR [rdi]
	mov	rdx, QWORD PTR [r13+rbx*8]
	mov	rcx, rdi
	call	QWORD PTR [rax+48]
	inc	rbx
	cmp	rbx, rsi
	jl	SHORT $LL3@ReceiveMul

; 212  :     *nSamplesProcessed = nSamples;

	mov	DWORD PTR [rbp], esi

; 213  :     return S_OK;

	jmp	SHORT $LN9@ReceiveMul
$LN8@ReceiveMul:

; 212  :     *nSamplesProcessed = nSamples;

	mov	DWORD PTR [r9], esi
$LN9@ReceiveMul:

; 214  : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	xor	eax, eax
	add	rsp, 32					; 00000020H
	pop	r13
	pop	r12
	pop	rdi
	ret	0
?ReceiveMultiple@CapturePin@@UEAAJPEAPEAUIMediaSample@@JPEAJ@Z ENDP ; CapturePin::ReceiveMultiple
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetAllocatorRequirements@CapturePin@@UEAAJPEAU_AllocatorProperties@@@Z
_TEXT	SEGMENT
this$ = 8
pProps$ = 16
?GetAllocatorRequirements@CapturePin@@UEAAJPEAU_AllocatorProperties@@@Z PROC ; CapturePin::GetAllocatorRequirements, COMDAT

; 194  : STDMETHODIMP CapturePin::GetAllocatorRequirements(ALLOCATOR_PROPERTIES *pProps)        {return E_NOTIMPL;}

	mov	eax, -2147467263			; ffffffff80004001H
	ret	0
?GetAllocatorRequirements@CapturePin@@UEAAJPEAU_AllocatorProperties@@@Z ENDP ; CapturePin::GetAllocatorRequirements
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?NotifyAllocator@CapturePin@@UEAAJPEAUIMemAllocator@@H@Z
_TEXT	SEGMENT
this$ = 8
pAllocator$ = 16
bReadOnly$ = 24
?NotifyAllocator@CapturePin@@UEAAJPEAUIMemAllocator@@H@Z PROC ; CapturePin::NotifyAllocator, COMDAT

; 193  : STDMETHODIMP CapturePin::NotifyAllocator(IMemAllocator *pAllocator, BOOL bReadOnly)    {return S_OK;}

	xor	eax, eax
	ret	0
?NotifyAllocator@CapturePin@@UEAAJPEAUIMemAllocator@@H@Z ENDP ; CapturePin::NotifyAllocator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?GetAllocator@CapturePin@@UEAAJPEAPEAUIMemAllocator@@@Z
_TEXT	SEGMENT
this$ = 8
ppAllocator$ = 16
?GetAllocator@CapturePin@@UEAAJPEAPEAUIMemAllocator@@@Z PROC ; CapturePin::GetAllocator, COMDAT

; 192  : STDMETHODIMP CapturePin::GetAllocator(IMemAllocator **ppAllocator)                     {return VFW_E_NO_ALLOCATOR;}

	mov	eax, -2147220982			; ffffffff8004020aH
	ret	0
?GetAllocator@CapturePin@@UEAAJPEAPEAUIMemAllocator@@@Z ENDP ; CapturePin::GetAllocator
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?NewSegment@CapturePin@@UEAAJ_J0N@Z
_TEXT	SEGMENT
this$ = 8
tStart$ = 16
tStop$ = 24
dRate$ = 32
?NewSegment@CapturePin@@UEAAJ_J0N@Z PROC		; CapturePin::NewSegment, COMDAT

; 189  : STDMETHODIMP CapturePin::NewSegment(REFERENCE_TIME tStart, REFERENCE_TIME tStop, double dRate) {return S_OK;}

	xor	eax, eax
	ret	0
?NewSegment@CapturePin@@UEAAJ_J0N@Z ENDP		; CapturePin::NewSegment
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?BeginFlush@CapturePin@@UEAAJXZ
_TEXT	SEGMENT
this$ = 8
?BeginFlush@CapturePin@@UEAAJXZ PROC			; CapturePin::BeginFlush, COMDAT

; 182  : STDMETHODIMP CapturePin::BeginFlush()                                          {return S_OK;}

	xor	eax, eax
	ret	0
?BeginFlush@CapturePin@@UEAAJXZ ENDP			; CapturePin::BeginFlush
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?EndOfStream@CapturePin@@UEAAJXZ
_TEXT	SEGMENT
this$ = 8
?EndOfStream@CapturePin@@UEAAJXZ PROC			; CapturePin::EndOfStream, COMDAT

; 181  : STDMETHODIMP CapturePin::EndOfStream()                                         {return S_OK;}

	xor	eax, eax
	ret	0
?EndOfStream@CapturePin@@UEAAJXZ ENDP			; CapturePin::EndOfStream
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?QueryInternalConnections@CapturePin@@UEAAJPEAPEAUIPin@@PEAK@Z
_TEXT	SEGMENT
this$ = 8
apPin$ = 16
nPin$ = 24
?QueryInternalConnections@CapturePin@@UEAAJPEAPEAUIPin@@PEAK@Z PROC ; CapturePin::QueryInternalConnections, COMDAT

; 180  : STDMETHODIMP CapturePin::QueryInternalConnections(IPin **apPin, ULONG *nPin)   {return E_NOTIMPL;}

	mov	eax, -2147467263			; ffffffff80004001H
	ret	0
?QueryInternalConnections@CapturePin@@UEAAJPEAPEAUIPin@@PEAK@Z ENDP ; CapturePin::QueryInternalConnections
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?QueryId@CapturePin@@UEAAJPEAPEA_W@Z
_TEXT	SEGMENT
this$ = 8
lpId$ = 16
?QueryId@CapturePin@@UEAAJPEAPEA_W@Z PROC		; CapturePin::QueryId, COMDAT

; 152  : STDMETHODIMP CapturePin::QueryId(LPWSTR *lpId)                     {*lpId = L"Capture Pin"; return S_OK;}

	lea	rax, OFFSET FLAT:$SG-321
	mov	QWORD PTR [rdx], rax
	xor	eax, eax
	ret	0
?QueryId@CapturePin@@UEAAJPEAPEA_W@Z ENDP		; CapturePin::QueryId
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?QueryDirection@CapturePin@@UEAAJPEAW4_PinDirection@@@Z
_TEXT	SEGMENT
this$ = 8
pPinDir$ = 16
?QueryDirection@CapturePin@@UEAAJPEAW4_PinDirection@@@Z PROC ; CapturePin::QueryDirection, COMDAT

; 151  : STDMETHODIMP CapturePin::QueryDirection(PIN_DIRECTION *pPinDir)    {*pPinDir = PINDIR_INPUT; return NOERROR;}

	mov	DWORD PTR [rdx], 0
	xor	eax, eax
	ret	0
?QueryDirection@CapturePin@@UEAAJPEAW4_PinDirection@@@Z ENDP ; CapturePin::QueryDirection
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?ConnectionMediaType@CapturePin@@UEAAJPEAU_AMMediaType@@@Z
_TEXT	SEGMENT
this$ = 8
pmt$ = 16
?ConnectionMediaType@CapturePin@@UEAAJPEAU_AMMediaType@@@Z PROC ; CapturePin::ConnectionMediaType, COMDAT

; 130  :     if(!connectedPin)

	cmp	QWORD PTR [rcx+160], 0
	mov	rax, rdx
	jne	SHORT $LN1@Connection

; 131  :         return VFW_E_NOT_CONNECTED;

	mov	eax, -2147220983			; ffffffff80040209H

; 134  : }

	ret	0
$LN1@Connection:

; 132  : 
; 133  :     return CopyMediaType(pmt, &connectedMediaType);

	lea	rdx, QWORD PTR [rcx+72]
	mov	rcx, rax

; 134  : }

	jmp	?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z ; CopyMediaType
?ConnectionMediaType@CapturePin@@UEAAJPEAU_AMMediaType@@@Z ENDP ; CapturePin::ConnectionMediaType
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ConnectedTo@CapturePin@@UEAAJPEAPEAUIPin@@@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?ConnectedTo@CapturePin@@UEAAJPEAPEAUIPin@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ConnectedTo@CapturePin@@UEAAJPEAPEAUIPin@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?ConnectedTo@CapturePin@@UEAAJPEAPEAUIPin@@@Z
_TEXT	SEGMENT
this$ = 48
pPin$ = 56
?ConnectedTo@CapturePin@@UEAAJPEAPEAUIPin@@@Z PROC	; CapturePin::ConnectedTo, COMDAT

; 119  : {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 120  :     if(!connectedPin)

	cmp	QWORD PTR [rcx+160], 0
	mov	rdi, rdx
	mov	rbx, rcx
	jne	SHORT $LN1@ConnectedT

; 121  :         return VFW_E_NOT_CONNECTED;

	mov	eax, -2147220983			; ffffffff80040209H

; 125  :     return S_OK;
; 126  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN1@ConnectedT:

; 122  : 
; 123  :     connectedPin->AddRef();

	mov	rcx, QWORD PTR [rcx+160]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]

; 124  :     *pPin = connectedPin;

	mov	r11, QWORD PTR [rbx+160]

; 125  :     return S_OK;
; 126  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi], r11
	xor	eax, eax
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?ConnectedTo@CapturePin@@UEAAJPEAPEAUIPin@@@Z ENDP	; CapturePin::ConnectedTo
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Disconnect@CapturePin@@UEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+55
	DD	imagerel $unwind$?Disconnect@CapturePin@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Disconnect@CapturePin@@UEAAJXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?Disconnect@CapturePin@@UEAAJXZ
_TEXT	SEGMENT
this$ = 48
?Disconnect@CapturePin@@UEAAJXZ PROC			; CapturePin::Disconnect, COMDAT

; 108  : {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 109  :     if(!connectedPin)

	mov	rcx, QWORD PTR [rcx+160]
	test	rcx, rcx
	jne	SHORT $LN1@Disconnect

; 110  :         return S_FALSE;

	lea	eax, QWORD PTR [rcx+1]

; 115  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
$LN1@Disconnect:

; 111  : 
; 112  :     connectedPin->Release();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]

; 113  :     connectedPin = NULL;

	mov	QWORD PTR [rbx+160], 0

; 114  :     return S_OK;

	xor	eax, eax

; 115  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?Disconnect@CapturePin@@UEAAJXZ ENDP			; CapturePin::Disconnect
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReceiveConnection@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z DD imagerel $LN8
	DD	imagerel $LN8+203
	DD	imagerel $unwind$?ReceiveConnection@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReceiveConnection@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?ReceiveConnection@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z
_TEXT	SEGMENT
this$ = 48
pConnector$ = 56
pmt$ = 64
?ReceiveConnection@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z PROC ; CapturePin::ReceiveConnection, COMDAT

; 89   : {

$LN8:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 90   :     if(filter->state != State_Stopped)

	mov	rax, QWORD PTR [rcx+64]
	mov	rdi, r8
	mov	rsi, rdx
	cmp	DWORD PTR [rax+12], 0
	mov	rbx, rcx
	je	SHORT $LN5@ReceiveCon

; 91   :         return VFW_E_NOT_STOPPED;

	mov	eax, -2147220956			; ffffffff80040224H

; 105  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN5@ReceiveCon:

; 92   :     if(!pConnector || !pmt)

	test	rdx, rdx
	je	SHORT $LN3@ReceiveCon
	test	r8, r8
	je	SHORT $LN3@ReceiveCon

; 93   :         return E_POINTER;
; 94   :     if(connectedPin)

	cmp	QWORD PTR [rcx+160], 0
	je	SHORT $LN2@ReceiveCon

; 95   :         return VFW_E_ALREADY_CONNECTED;

	mov	eax, -2147220988			; ffffffff80040204H

; 105  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@ReceiveCon:

; 96   : 
; 97   :     if(QueryAccept(pmt) != S_OK)

	mov	rax, QWORD PTR [rcx]
	mov	rdx, r8
	call	QWORD PTR [rax+88]
	test	eax, eax
	je	SHORT $LN1@ReceiveCon

; 98   :         return VFW_E_TYPE_NOT_ACCEPTED;

	mov	eax, -2147220950			; ffffffff8004022aH

; 105  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN1@ReceiveCon:

; 99   : 
; 100  :     connectedPin = pConnector;

	mov	QWORD PTR [rbx+160], rsi

; 101  :     connectedPin->AddRef();

	mov	rax, QWORD PTR [rsi]
	mov	rcx, rsi
	call	QWORD PTR [rax+8]

; 102  : 
; 103  :     FreeMediaType(connectedMediaType);

	lea	rcx, QWORD PTR [rbx+72]
	call	?FreeMediaType@@YAXAEAU_AMMediaType@@@Z	; FreeMediaType

; 104  :     return CopyMediaType(&connectedMediaType, pmt);

	lea	rcx, QWORD PTR [rbx+72]
	mov	rdx, rdi

; 105  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	jmp	?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z ; CopyMediaType
$LN3@ReceiveCon:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	mov	eax, -2147467261			; ffffffff80004003H
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?ReceiveConnection@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z ENDP ; CapturePin::ReceiveConnection
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Release@CapturePin@@UEAAKXZ DD imagerel $LN6
	DD	imagerel $LN6+44
	DD	imagerel $unwind$?Release@CapturePin@@UEAAKXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Release@CapturePin@@UEAAKXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?Release@CapturePin@@UEAAKXZ
_TEXT	SEGMENT
this$ = 48
?Release@CapturePin@@UEAAKXZ PROC			; CapturePin::Release, COMDAT

; 69   : STDMETHODIMP_(ULONG) CapturePin::Release() {if(!InterlockedDecrement(&refCount)) {delete this; return 0;} return refCount;}

$LN6:
	sub	rsp, 40					; 00000028H
	lock dec DWORD PTR [rcx+16]
	jne	SHORT $LN1@Release@4
	test	rcx, rcx
	je	SHORT $LN4@Release@4
	mov	rax, QWORD PTR [rcx]
	mov	edx, 1
	call	QWORD PTR [rax+144]
$LN4@Release@4:
	xor	eax, eax
	add	rsp, 40					; 00000028H
	ret	0
$LN1@Release@4:
	mov	eax, DWORD PTR [rcx+16]
	add	rsp, 40					; 00000028H
	ret	0
?Release@CapturePin@@UEAAKXZ ENDP			; CapturePin::Release
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?AddRef@CapturePin@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?AddRef@CapturePin@@UEAAKXZ PROC			; CapturePin::AddRef, COMDAT

; 68   : STDMETHODIMP_(ULONG) CapturePin::AddRef()  {return ++refCount;}

	mov	eax, DWORD PTR [rcx+16]
	inc	eax
	mov	DWORD PTR [rcx+16], eax
	ret	0
?AddRef@CapturePin@@UEAAKXZ ENDP			; CapturePin::AddRef
_TEXT	ENDS
PUBLIC	??1CapturePin@@UEAA@XZ				; CapturePin::~CapturePin
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\mediainfostuff.cpp
pdata	SEGMENT
$pdata$??1CapturePin@@UEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+108
	DD	imagerel $unwind$??1CapturePin@@UEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CapturePin@@UEAA@XZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
xdata	ENDS
;	COMDAT ??1CapturePin@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1CapturePin@@UEAA@XZ PROC				; CapturePin::~CapturePin, COMDAT

; 43   : {

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CapturePin@@6BIPin@@@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	lea	rax, OFFSET FLAT:??_7CapturePin@@6BIMemInputPin@@@
	mov	QWORD PTR [rcx+8], rax

; 44   :     FreeMediaType(connectedMediaType);

	cmp	DWORD PTR [rcx+144], 0
	je	SHORT $LN4@CapturePin
	mov	rcx, QWORD PTR [rcx+152]
	call	QWORD PTR __imp_CoTaskMemFree
	mov	DWORD PTR [rbx+144], 0
	mov	QWORD PTR [rbx+152], 0
$LN4@CapturePin:
	mov	rcx, QWORD PTR [rbx+136]
	test	rcx, rcx
	je	SHORT $LN3@CapturePin
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR [rbx+136], 0
$LN3@CapturePin:

; 45   : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1CapturePin@@UEAA@XZ ENDP				; CapturePin::~CapturePin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IUnknown@@QEAA@XZ PROC				; IUnknown::IUnknown, COMDAT
	mov	rax, rcx
	ret	0
??0IUnknown@@QEAA@XZ ENDP				; IUnknown::IUnknown
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0IMemInputPin@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IMemInputPin@@QEAA@XZ PROC				; IMemInputPin::IMemInputPin, COMDAT
	mov	rax, rcx
	ret	0
??0IMemInputPin@@QEAA@XZ ENDP				; IMemInputPin::IMemInputPin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0IPin@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IPin@@QEAA@XZ PROC					; IPin::IPin, COMDAT
	mov	rax, rcx
	ret	0
??0IPin@@QEAA@XZ ENDP					; IPin::IPin
_TEXT	ENDS
PUBLIC	??0CapturePin@@QEAA@PEAVCaptureFilter@@PEAVDeviceSource@@AEBU_GUID@@2@Z ; CapturePin::CapturePin
; Function compile flags: /Ogtpy
;	COMDAT ??0CapturePin@@QEAA@PEAVCaptureFilter@@PEAVDeviceSource@@AEBU_GUID@@2@Z
_TEXT	SEGMENT
this$ = 8
filterIn$ = 16
sourceIn$ = 24
expectedMajorType$ = 32
expectedMediaType$ = 40
??0CapturePin@@QEAA@PEAVCaptureFilter@@PEAVDeviceSource@@AEBU_GUID@@2@Z PROC ; CapturePin::CapturePin, COMDAT

; 32   : {

	mov	DWORD PTR [rcx+16], 1
	mov	QWORD PTR [rcx+56], r8
	mov	QWORD PTR [rcx+64], rdx
	mov	r10, rcx
	lea	rax, OFFSET FLAT:??_7CapturePin@@6BIPin@@@
	mov	QWORD PTR [rcx], rax
	lea	rax, OFFSET FLAT:??_7CapturePin@@6BIMemInputPin@@@
	mov	QWORD PTR [rcx+8], rax

; 33   :     connectedMediaType.majortype = expectedMajorType;

	mov	eax, DWORD PTR [r9]
	mov	DWORD PTR [rcx+72], eax
	mov	eax, DWORD PTR [r9+4]
	mov	DWORD PTR [rcx+76], eax
	mov	eax, DWORD PTR [r9+8]
	mov	DWORD PTR [rcx+80], eax
	mov	eax, DWORD PTR [r9+12]
	mov	DWORD PTR [rcx+84], eax

; 34   :     connectedMediaType.subtype   = GUID_NULL;

	mov	eax, DWORD PTR GUID_NULL
	mov	DWORD PTR [rcx+88], eax
	mov	eax, DWORD PTR GUID_NULL+4
	mov	DWORD PTR [rcx+92], eax
	mov	eax, DWORD PTR GUID_NULL+8
	mov	DWORD PTR [rcx+96], eax
	mov	eax, DWORD PTR GUID_NULL+12
	mov	DWORD PTR [rcx+100], eax

; 35   :     connectedMediaType.pbFormat  = NULL;

	xor	eax, eax
	mov	QWORD PTR [rcx+152], rax

; 36   :     connectedMediaType.cbFormat  = 0;

	mov	DWORD PTR [rcx+144], eax

; 37   :     connectedMediaType.pUnk      = NULL;

	mov	QWORD PTR [rcx+136], rax

; 38   :     this->expectedMediaType = expectedMediaType;

	mov	rcx, QWORD PTR expectedMediaType$[rsp]
	mov	eax, DWORD PTR [rcx]
	mov	DWORD PTR [r10+36], eax
	mov	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR [r10+40], eax
	mov	eax, DWORD PTR [rcx+8]
	mov	DWORD PTR [r10+44], eax
	mov	eax, DWORD PTR [rcx+12]
	mov	DWORD PTR [r10+48], eax

; 39   :     this->expectedMajorType = expectedMajorType;

	mov	eax, DWORD PTR [r9]
	mov	DWORD PTR [r10+20], eax
	mov	eax, DWORD PTR [r9+4]
	mov	DWORD PTR [r10+24], eax
	mov	eax, DWORD PTR [r9+8]
	mov	DWORD PTR [r10+28], eax
	mov	eax, DWORD PTR [r9+12]
	mov	DWORD PTR [r10+32], eax

; 40   : }

	mov	rax, r10
	ret	0
??0CapturePin@@QEAA@PEAVCaptureFilter@@PEAVDeviceSource@@AEBU_GUID@@2@Z ENDP ; CapturePin::CapturePin
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.h
_TEXT	ENDS
;	COMDAT ?GetCapturePin@CaptureFilter@@QEBAPEAVCapturePin@@XZ
_TEXT	SEGMENT
this$ = 8
?GetCapturePin@CaptureFilter@@QEBAPEAVCapturePin@@XZ PROC ; CaptureFilter::GetCapturePin, COMDAT

; 119  :     inline CapturePin* GetCapturePin() const {return pin;}

	mov	rax, QWORD PTR [rcx+24]
	ret	0
?GetCapturePin@CaptureFilter@@QEBAPEAVCapturePin@@XZ ENDP ; CaptureFilter::GetCapturePin
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\alloc.h
_TEXT	ENDS
;	COMDAT ?Free@@YAXPEAX@Z
_TEXT	SEGMENT
lpData$ = 8
?Free@@YAXPEAX@Z PROC					; Free, COMDAT

; 66   : inline void Free(void *lpData)   {MainAllocator->_Free(lpData);}

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, rcx
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+24]
?Free@@YAXPEAX@Z ENDP					; Free
_TEXT	ENDS
EXTRN	memset:PROC
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\inline.h
pdata	SEGMENT
$pdata$?zero@@YAXPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+88
	DD	imagerel $unwind$?zero@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?zero@@YAXPEAX_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?zero@@YAXPEAX_K@Z
_TEXT	SEGMENT
pDest$ = 48
iLen$ = 56
?zero@@YAXPEAX_K@Z PROC					; zero, COMDAT

; 88   : {

$LN13:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx

; 89   :     register size_t iLenMod8 = iLen&7;

	mov	rbx, rdx
	mov	rdi, rcx

; 90   :     register size_t iLenDiv8 = iLen>>3;

	shr	rsi, 3
	and	ebx, 7

; 91   : 
; 92   :     register QWORD *destQW = (QWORD*)pDest;
; 93   :     while(iLenDiv8--)

	test	rsi, rsi
	je	SHORT $LN4@zero

; 89   :     register size_t iLenMod8 = iLen&7;

	mov	r8, rsi
	xor	edx, edx
	shl	r8, 3
	call	memset

; 91   : 
; 92   :     register QWORD *destQW = (QWORD*)pDest;
; 93   :     while(iLenDiv8--)

	lea	rdi, QWORD PTR [rdi+rsi*8]
$LN4@zero:

; 97   :     while(iLenMod8--)

	test	rbx, rbx
	je	SHORT $LN2@zero

; 94   :         *(destQW++) = 0;
; 95   : 
; 96   :     register BYTE *destB = (BYTE*)destQW;

	mov	r8, rbx
	xor	edx, edx
	mov	rcx, rdi
	call	memset
$LN2@zero:

; 98   :         *(destB++) = 0;
; 99   : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?zero@@YAXPEAX_K@Z ENDP					; zero
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
_TEXT	ENDS
;	COMDAT IsEqualGUID
_TEXT	SEGMENT
rguid1$ = 8
rguid2$ = 16
IsEqualGUID PROC					; COMDAT

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	mov	rax, QWORD PTR [rcx]
	xor	r8d, r8d
	cmp	rax, QWORD PTR [rdx]
	jne	SHORT $LN3@IsEqualGUI
	mov	rax, QWORD PTR [rcx+8]
	cmp	rax, QWORD PTR [rdx+8]
	jne	SHORT $LN3@IsEqualGUI
	mov	eax, r8d
	test	eax, eax
	sete	r8b
	mov	eax, r8d

; 162  : }

	ret	0
$LN3@IsEqualGUI:

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

	sbb	eax, eax
	sbb	eax, -1
	test	eax, eax
	sete	r8b
	mov	eax, r8d

; 162  : }

	ret	0
IsEqualGUID ENDP
; Function compile flags: /Odtpy
;	COMDAT ?AddRef@CapturePin@@W7EAAKXZ
_TEXT	SEGMENT
?AddRef@CapturePin@@W7EAAKXZ PROC			; [thunk]:CapturePin::AddRef`adjustor{8}', COMDAT
	sub	rcx, 8
	jmp	?AddRef@CapturePin@@UEAAKXZ		; CapturePin::AddRef
?AddRef@CapturePin@@W7EAAKXZ ENDP			; [thunk]:CapturePin::AddRef`adjustor{8}'
; Function compile flags: /Odtpy
_TEXT	ENDS
;	COMDAT ?Release@CapturePin@@W7EAAKXZ
_TEXT	SEGMENT
?Release@CapturePin@@W7EAAKXZ PROC			; [thunk]:CapturePin::Release`adjustor{8}', COMDAT
	sub	rcx, 8
	jmp	?Release@CapturePin@@UEAAKXZ		; CapturePin::Release
?Release@CapturePin@@W7EAAKXZ ENDP			; [thunk]:CapturePin::Release`adjustor{8}'
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\alloc.h
pdata	SEGMENT
$pdata$?Clear@?$List@PEAUSampleData@@@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+49
	DD	imagerel $unwind$?Clear@?$List@PEAUSampleData@@@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@?$List@PEAUSampleData@@@@QEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\template.h
xdata	ENDS
;	COMDAT ?Clear@?$List@PEAUSampleData@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Clear@?$List@PEAUSampleData@@@@QEAAXXZ PROC		; List<SampleData * __ptr64>::Clear, COMDAT

; 329  :     {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H

; 330  :         if(array)

	mov	rdx, QWORD PTR [rcx]
	mov	rbx, rcx
	test	rdx, rdx
	je	SHORT $LN1@Clear@5

; 331  :         {
; 332  :             /*if(IsBadWritePtr(array, sizeof(T)*num))
; 333  :                 CrashError(TEXT("what the.."));*/
; 334  :             Free(array);

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]

; 335  :             array = NULL;

	xor	r11d, r11d
	mov	QWORD PTR [rbx], r11

; 336  :             num = 0;

	mov	DWORD PTR [rbx+8], r11d
$LN1@Clear@5:

; 337  :         }
; 338  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?Clear@?$List@PEAUSampleData@@@@QEAAXXZ ENDP		; List<SampleData * __ptr64>::Clear
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0IEnumMediaTypes@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IEnumMediaTypes@@QEAA@XZ PROC			; IEnumMediaTypes::IEnumMediaTypes, COMDAT
	mov	rax, rcx
	ret	0
??0IEnumMediaTypes@@QEAA@XZ ENDP			; IEnumMediaTypes::IEnumMediaTypes
_TEXT	ENDS
PUBLIC	??0CaptureEnumMediaTypes@@QEAA@PEAVCapturePin@@PEAV0@@Z ; CaptureEnumMediaTypes::CaptureEnumMediaTypes
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
pdata	SEGMENT
$pdata$??0CaptureEnumMediaTypes@@QEAA@PEAVCapturePin@@PEAV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0CaptureEnumMediaTypes@@QEAA@PEAVCapturePin@@PEAV0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CaptureEnumMediaTypes@@QEAA@PEAVCapturePin@@PEAV0@@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0CaptureEnumMediaTypes@@QEAA@PEAVCapturePin@@PEAV0@@Z
_TEXT	SEGMENT
this$ = 48
pinIn$ = 56
??0CaptureEnumMediaTypes@@QEAA@PEAVCapturePin@@PEAV0@@Z PROC ; CaptureEnumMediaTypes::CaptureEnumMediaTypes, COMDAT

; 387  : {

$LN3:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	DWORD PTR [rcx+8], 1
	mov	QWORD PTR [rcx+16], rdx
	lea	rax, OFFSET FLAT:??_7CaptureEnumMediaTypes@@6B@
	mov	QWORD PTR [rcx], rax

; 388  :     pin->AddRef();

	mov	rax, QWORD PTR [rdx]
	mov	rbx, rcx
	mov	rcx, rdx
	call	QWORD PTR [rax+8]

; 389  : }

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0CaptureEnumMediaTypes@@QEAA@PEAVCapturePin@@PEAV0@@Z ENDP ; CaptureEnumMediaTypes::CaptureEnumMediaTypes
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.h
pdata	SEGMENT
$pdata$?Next@CaptureEnumPins@@UEAAJKPEAPEAUIPin@@PEAK@Z DD imagerel $LN7
	DD	imagerel $LN7+100
	DD	imagerel $unwind$?Next@CaptureEnumPins@@UEAAJKPEAPEAUIPin@@PEAK@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Next@CaptureEnumPins@@UEAAJKPEAPEAUIPin@@PEAK@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
xdata	ENDS
;	COMDAT ?Next@CaptureEnumPins@@UEAAJKPEAPEAUIPin@@PEAK@Z
_TEXT	SEGMENT
this$ = 48
cPins$ = 56
ppPins$ = 64
pcFetched$ = 72
?Next@CaptureEnumPins@@UEAAJKPEAPEAUIPin@@PEAK@Z PROC	; CaptureEnumPins::Next, COMDAT

; 357  : {

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 358  :     UINT nFetched = 0;

	xor	edi, edi
	mov	rbx, r9
	mov	esi, edx
	mov	eax, edi
	mov	rbp, rcx

; 359  : 
; 360  :     if(curPin == 0 && cPins > 0)

	cmp	DWORD PTR [rcx+24], eax
	jne	SHORT $LN2@Next
	test	edx, edx
	je	SHORT $LN2@Next

; 361  :     {
; 362  :         IPin *pPin = filter->GetCapturePin();

	mov	rax, QWORD PTR [rcx+16]
	mov	rcx, QWORD PTR [rax+24]

; 363  :         *ppPins = pPin;

	mov	QWORD PTR [r8], rcx

; 364  :         pPin->AddRef();

	mov	rdx, QWORD PTR [rcx]
	call	QWORD PTR [rdx+8]

; 365  :         nFetched = 1;
; 366  :         curPin++;

	inc	DWORD PTR [rbp+24]
	lea	eax, QWORD PTR [rdi+1]
$LN2@Next:

; 367  :     }
; 368  : 
; 369  :     if(pcFetched) *pcFetched = nFetched;

	test	rbx, rbx
	je	SHORT $LN1@Next
	mov	DWORD PTR [rbx], eax
$LN1@Next:

; 370  : 
; 371  :     return (nFetched == cPins) ? S_OK : S_FALSE;
; 372  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	cmp	eax, esi
	mov	rsi, QWORD PTR [rsp+64]
	setne	dil
	mov	eax, edi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?Next@CaptureEnumPins@@UEAAJKPEAPEAUIPin@@PEAK@Z ENDP	; CaptureEnumPins::Next
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0IEnumPins@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IEnumPins@@QEAA@XZ PROC				; IEnumPins::IEnumPins, COMDAT
	mov	rax, rcx
	ret	0
??0IEnumPins@@QEAA@XZ ENDP				; IEnumPins::IEnumPins
_TEXT	ENDS
PUBLIC	??0CaptureEnumPins@@QEAA@PEAVCaptureFilter@@PEAV0@@Z ; CaptureEnumPins::CaptureEnumPins
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CaptureEnumPins@@QEAA@PEAVCaptureFilter@@PEAV0@@Z DD imagerel $LN6
	DD	imagerel $LN6+92
	DD	imagerel $unwind$??0CaptureEnumPins@@QEAA@PEAVCaptureFilter@@PEAV0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CaptureEnumPins@@QEAA@PEAVCaptureFilter@@PEAV0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0CaptureEnumPins@@QEAA@PEAVCaptureFilter@@PEAV0@@Z
_TEXT	SEGMENT
this$ = 48
filterIn$ = 56
pEnum$ = 64
??0CaptureEnumPins@@QEAA@PEAVCaptureFilter@@PEAV0@@Z PROC ; CaptureEnumPins::CaptureEnumPins, COMDAT

; 326  : {

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	DWORD PTR [rcx+8], 1
	mov	QWORD PTR [rcx+16], rdx
	lea	rax, OFFSET FLAT:??_7CaptureEnumPins@@6B@
	mov	QWORD PTR [rcx], rax

; 327  :     filter->AddRef();

	mov	rax, QWORD PTR [rdx]
	mov	rbx, rcx
	mov	rcx, rdx
	mov	rdi, r8
	call	QWORD PTR [rax+8]

; 328  :     curPin = (pEnum != NULL) ? pEnum->curPin : 0;

	test	rdi, rdi
	je	SHORT $LN3@CaptureEnu
	mov	eax, DWORD PTR [rdi+24]
	mov	DWORD PTR [rbx+24], eax

; 329  : }

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@CaptureEnu:

; 328  :     curPin = (pEnum != NULL) ? pEnum->curPin : 0;

	mov	DWORD PTR [rbx+24], 0

; 329  : }

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0CaptureEnumPins@@QEAA@PEAVCaptureFilter@@PEAV0@@Z ENDP ; CaptureEnumPins::CaptureEnumPins
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0IPersist@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IPersist@@QEAA@XZ PROC				; IPersist::IPersist, COMDAT
	mov	rax, rcx
	ret	0
??0IPersist@@QEAA@XZ ENDP				; IPersist::IPersist
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0IMediaFilter@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IMediaFilter@@QEAA@XZ PROC				; IMediaFilter::IMediaFilter, COMDAT
	mov	rax, rcx
	ret	0
??0IMediaFilter@@QEAA@XZ ENDP				; IMediaFilter::IMediaFilter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0IBaseFilter@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0IBaseFilter@@QEAA@XZ PROC				; IBaseFilter::IBaseFilter, COMDAT
	mov	rax, rcx
	ret	0
??0IBaseFilter@@QEAA@XZ ENDP				; IBaseFilter::IBaseFilter
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\devicesource.h
_TEXT	ENDS
;	COMDAT ??1SampleData@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1SampleData@@QEAA@XZ PROC				; SampleData::~SampleData, COMDAT

; 49   :     inline ~SampleData() {Free(lpData);} //sample->Release();}

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+24]
??1SampleData@@QEAA@XZ ENDP				; SampleData::~SampleData
_TEXT	ENDS
PUBLIC	??3@YAXPEAX@Z					; operator delete
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\alloc.h
;	COMDAT ??3@YAXPEAX@Z
_TEXT	SEGMENT
lpData$ = 8
??3@YAXPEAX@Z PROC					; operator delete, COMDAT

; 97   :     Free(lpData);

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, rcx
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]

; 98   : }

	rex_jmp	QWORD PTR [rax+24]
??3@YAXPEAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??2@YAPEAX_K@Z					; operator new
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\inline.h
pdata	SEGMENT
$pdata$??2@YAPEAX_K@Z DD imagerel $LN16
	DD	imagerel $LN16+110
	DD	imagerel $unwind$??2@YAPEAX_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\alloc.h
xdata	ENDS
;	COMDAT ??2@YAPEAX_K@Z
_TEXT	SEGMENT
dwSize$ = 48
??2@YAPEAX_K@Z PROC					; operator new, COMDAT

; 88   : {

$LN16:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 89   :     void* val = Allocate(dwSize);

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rsi, rcx
	mov	rcx, QWORD PTR [rax]
	mov	rdx, rsi
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]

; 90   :     zero(val, dwSize);

	mov	rdi, rsi
	shr	rsi, 3
	and	edi, 7
	mov	rbx, rax
	mov	rcx, rax
	test	rsi, rsi
	je	SHORT $LN6@operator@3

; 89   :     void* val = Allocate(dwSize);

	mov	r8, rsi
	xor	edx, edx
	shl	r8, 3
	call	memset

; 90   :     zero(val, dwSize);

	lea	rcx, QWORD PTR [rbx+rsi*8]
$LN6@operator@3:
	test	rdi, rdi
	je	SHORT $LN15@operator@3
	mov	r8, rdi
	xor	edx, edx
	call	memset
$LN15@operator@3:

; 91   : 
; 92   :     return val;
; 93   : }

	mov	rsi, QWORD PTR [rsp+56]
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??2@YAPEAX_K@Z ENDP					; operator new
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
_TEXT	ENDS
;	COMDAT ==
_TEXT	SEGMENT
guidOne$ = 8
guidOther$ = 16
==	PROC						; COMDAT

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

	mov	rax, QWORD PTR [rcx]
	xor	r8d, r8d
	cmp	rax, QWORD PTR [rdx]
	jne	SHORT $LN5@
	mov	rax, QWORD PTR [rcx+8]
	cmp	rax, QWORD PTR [rdx+8]
	jne	SHORT $LN5@
	mov	eax, r8d
	test	eax, eax
	sete	al

; 195  : }

	ret	0
$LN5@:

; 194  :     return !!IsEqualGUID(guidOne,guidOther);

	sbb	eax, eax
	sbb	eax, -1
	test	eax, eax
	sete	al

; 195  : }

	ret	0
==	ENDP
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
pdata	SEGMENT
$pdata$?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z DD imagerel $LN22
	DD	imagerel $LN22+156
	DD	imagerel $unwind$?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z DD imagerel ?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
	DD	0ffffffffH
	DD	imagerel ?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z+78
	DD	00H
	DD	imagerel ?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z+119
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z DD 081e11H
	DD	0b641eH
	DD	0a5419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z@4HA
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
_TEXT	SEGMENT
$T111767 = 32
this$ = 64
$T111719 = 72
ppEnum$ = 72
?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z PROC ; CaptureEnumMediaTypes::Clone, COMDAT

; 419  : {

$LN22:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T111767[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+80], rbp
	mov	QWORD PTR [rsp+88], rsi
	mov	rsi, rdx
	mov	rbp, rcx

; 420  :     *ppEnum = new CaptureEnumMediaTypes(pin, this);

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	mov	edx, 24
	call	QWORD PTR [rax+8]
	mov	rbx, rax
	xor	edi, edi
	mov	QWORD PTR [rax], rdi
	mov	QWORD PTR [rax+8], rdi
	mov	QWORD PTR [rax+16], rdi
	mov	QWORD PTR $T111719[rsp], rax
	test	rax, rax
	je	SHORT $LN3@Clone
	mov	rcx, QWORD PTR [rbp+16]
	lea	rax, OFFSET FLAT:??_7CaptureEnumMediaTypes@@6B@
	mov	QWORD PTR [rbx], rax
	mov	DWORD PTR [rbx+8], 1
	mov	QWORD PTR [rbx+16], rcx
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	jmp	SHORT $LN4@Clone
$LN3@Clone:
	mov	rbx, rdi
$LN4@Clone:
	mov	QWORD PTR [rsi], rbx

; 421  :     return (*ppEnum == NULL) ? E_OUTOFMEMORY : NOERROR;

	mov	eax, -2147024882			; ffffffff8007000eH
	test	rbx, rbx
	cmove	edi, eax
	mov	eax, edi

; 422  : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z ENDP ; CaptureEnumMediaTypes::Clone
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T111767 = 32
this$ = 64
$T111719 = 72
ppEnum$ = 72
?dtor$0@?0??Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z@4HA PROC ; `CaptureEnumMediaTypes::Clone'::`1'::dtor$0
	mov	rcx, QWORD PTR $T111719[rdx]
	jmp	??3@YAXPEAX@Z				; operator delete
?dtor$0@?0??Clone@CaptureEnumMediaTypes@@UEAAJPEAPEAUIEnumMediaTypes@@@Z@4HA ENDP ; `CaptureEnumMediaTypes::Clone'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
pdata	SEGMENT
$pdata$?QueryInterface@CaptureEnumMediaTypes@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN18
	DD	imagerel $LN18+147
	DD	imagerel $unwind$?QueryInterface@CaptureEnumMediaTypes@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryInterface@CaptureEnumMediaTypes@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
xdata	ENDS
;	COMDAT ?QueryInterface@CaptureEnumMediaTypes@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
riid$ = 56
ppv$ = 64
?QueryInterface@CaptureEnumMediaTypes@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CaptureEnumMediaTypes::QueryInterface, COMDAT

; 397  : {

$LN18:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8

; 398  :     if(riid == IID_IUnknown || riid == IID_IEnumMediaTypes)

	mov	r8, QWORD PTR [rdx]
	lea	r9, OFFSET FLAT:__ImageBase
	mov	rbx, rcx
	cmp	r8, QWORD PTR IID_IUnknown[r9]
	jne	SHORT $LN16@QueryInter
	mov	r8, QWORD PTR [rdx+8]
	cmp	r8, QWORD PTR IID_IUnknown[r9+8]
	jne	SHORT $LN16@QueryInter
	xor	eax, eax
	jmp	SHORT $LN17@QueryInter
$LN16@QueryInter:
	sbb	eax, eax
	sbb	eax, -1
$LN17@QueryInter:
	test	eax, eax
	je	SHORT $LN2@QueryInter
	mov	rcx, QWORD PTR [rdx]
	cmp	rcx, QWORD PTR IID_IEnumMediaTypes[r9]
	jne	SHORT $LN14@QueryInter
	mov	rcx, QWORD PTR [rdx+8]
	cmp	rcx, QWORD PTR IID_IEnumMediaTypes[r9+8]
	jne	SHORT $LN14@QueryInter
	xor	eax, eax
	jmp	SHORT $LN15@QueryInter
$LN14@QueryInter:
	sbb	eax, eax
	sbb	eax, -1
$LN15@QueryInter:
	test	eax, eax
	je	SHORT $LN2@QueryInter

; 402  :         return NOERROR;
; 403  :     }
; 404  :     else
; 405  :     {
; 406  :         *ppv = NULL;

	mov	QWORD PTR [rdi], 0

; 407  :         return E_NOINTERFACE;

	mov	eax, -2147467262			; ffffffff80004002H

; 408  :     }
; 409  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@QueryInter:

; 399  :     {
; 400  :         AddRef();

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+8]

; 401  :         *ppv = (IEnumMediaTypes*)this;

	mov	QWORD PTR [rdi], rbx

; 408  :     }
; 409  : }

	mov	rbx, QWORD PTR [rsp+48]
	xor	eax, eax
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?QueryInterface@CaptureEnumMediaTypes@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CaptureEnumMediaTypes::QueryInterface
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCaptureEnumMediaTypes@@UEAAPEAXI@Z DD imagerel $LN11
	DD	imagerel $LN11+73
	DD	imagerel $unwind$??_GCaptureEnumMediaTypes@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCaptureEnumMediaTypes@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GCaptureEnumMediaTypes@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCaptureEnumMediaTypes@@UEAAPEAXI@Z PROC		; CaptureEnumMediaTypes::`scalar deleting destructor', COMDAT
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CaptureEnumMediaTypes@@6B@
	mov	rdi, rcx
	mov	ebx, edx
	mov	QWORD PTR [rcx], rax
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	test	bl, 1
	je	SHORT $LN10@scalar@2
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, rdi
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
$LN10@scalar@2:
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCaptureEnumMediaTypes@@UEAAPEAXI@Z ENDP		; CaptureEnumMediaTypes::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z DD imagerel $LN24
	DD	imagerel $LN24+169
	DD	imagerel $unwind$?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z DD imagerel ?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z
	DD	0ffffffffH
	DD	imagerel ?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z+82
	DD	00H
	DD	imagerel ?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z+131
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z DD 081e11H
	DD	0b641eH
	DD	0a5419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z@4HA
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z
_TEXT	SEGMENT
$T111890 = 32
this$ = 64
$T111838 = 72
ppEnum$ = 72
?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z PROC	; CaptureEnumPins::Clone, COMDAT

; 377  : {

$LN24:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T111890[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+80], rbp
	mov	QWORD PTR [rsp+88], rsi
	mov	rbp, rdx
	mov	rsi, rcx

; 378  :     *ppEnum = new CaptureEnumPins(filter, this);

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	mov	edx, 32					; 00000020H
	call	QWORD PTR [rax+8]
	mov	rbx, rax
	xor	edi, edi
	mov	QWORD PTR [rax], rdi
	mov	QWORD PTR [rax+8], rdi
	mov	QWORD PTR [rax+16], rdi
	mov	QWORD PTR [rax+24], rdi
	mov	QWORD PTR $T111838[rsp], rax
	test	rax, rax
	je	SHORT $LN3@Clone@2
	mov	rcx, QWORD PTR [rsi+16]
	lea	rax, OFFSET FLAT:??_7CaptureEnumPins@@6B@
	mov	QWORD PTR [rbx], rax
	mov	DWORD PTR [rbx+8], 1
	mov	QWORD PTR [rbx+16], rcx
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	mov	r11d, DWORD PTR [rsi+24]
	mov	DWORD PTR [rbx+24], r11d
	jmp	SHORT $LN4@Clone@2
$LN3@Clone@2:
	mov	rbx, rdi
$LN4@Clone@2:
	mov	QWORD PTR [rbp], rbx

; 379  :     return (*ppEnum == NULL) ? E_OUTOFMEMORY : NOERROR;

	mov	eax, -2147024882			; ffffffff8007000eH
	test	rbx, rbx
	cmove	edi, eax
	mov	eax, edi

; 380  : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z ENDP	; CaptureEnumPins::Clone
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T111890 = 32
this$ = 64
$T111838 = 72
ppEnum$ = 72
?dtor$0@?0??Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z@4HA PROC ; `CaptureEnumPins::Clone'::`1'::dtor$0
	mov	rcx, QWORD PTR $T111838[rdx]
	jmp	??3@YAXPEAX@Z				; operator delete
?dtor$0@?0??Clone@CaptureEnumPins@@UEAAJPEAPEAUIEnumPins@@@Z@4HA ENDP ; `CaptureEnumPins::Clone'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
pdata	SEGMENT
$pdata$?QueryInterface@CaptureEnumPins@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN18
	DD	imagerel $LN18+147
	DD	imagerel $unwind$?QueryInterface@CaptureEnumPins@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryInterface@CaptureEnumPins@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
xdata	ENDS
;	COMDAT ?QueryInterface@CaptureEnumPins@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
riid$ = 56
ppv$ = 64
?QueryInterface@CaptureEnumPins@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CaptureEnumPins::QueryInterface, COMDAT

; 338  : {

$LN18:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8

; 339  :     if(riid == IID_IUnknown || riid == IID_IEnumPins)

	mov	r8, QWORD PTR [rdx]
	lea	r9, OFFSET FLAT:__ImageBase
	mov	rbx, rcx
	cmp	r8, QWORD PTR IID_IUnknown[r9]
	jne	SHORT $LN16@QueryInter@2
	mov	r8, QWORD PTR [rdx+8]
	cmp	r8, QWORD PTR IID_IUnknown[r9+8]
	jne	SHORT $LN16@QueryInter@2
	xor	eax, eax
	jmp	SHORT $LN17@QueryInter@2
$LN16@QueryInter@2:
	sbb	eax, eax
	sbb	eax, -1
$LN17@QueryInter@2:
	test	eax, eax
	je	SHORT $LN2@QueryInter@2
	mov	rcx, QWORD PTR [rdx]
	cmp	rcx, QWORD PTR IID_IEnumPins[r9]
	jne	SHORT $LN14@QueryInter@2
	mov	rcx, QWORD PTR [rdx+8]
	cmp	rcx, QWORD PTR IID_IEnumPins[r9+8]
	jne	SHORT $LN14@QueryInter@2
	xor	eax, eax
	jmp	SHORT $LN15@QueryInter@2
$LN14@QueryInter@2:
	sbb	eax, eax
	sbb	eax, -1
$LN15@QueryInter@2:
	test	eax, eax
	je	SHORT $LN2@QueryInter@2

; 343  :         return NOERROR;
; 344  :     }
; 345  :     else
; 346  :     {
; 347  :         *ppv = NULL;

	mov	QWORD PTR [rdi], 0

; 348  :         return E_NOINTERFACE;

	mov	eax, -2147467262			; ffffffff80004002H

; 349  :     }
; 350  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@QueryInter@2:

; 340  :     {
; 341  :         AddRef();

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+8]

; 342  :         *ppv = (IEnumPins*)this;

	mov	QWORD PTR [rdi], rbx

; 349  :     }
; 350  : }

	mov	rbx, QWORD PTR [rsp+48]
	xor	eax, eax
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?QueryInterface@CaptureEnumPins@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CaptureEnumPins::QueryInterface
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCaptureEnumPins@@UEAAPEAXI@Z DD imagerel $LN11
	DD	imagerel $LN11+73
	DD	imagerel $unwind$??_GCaptureEnumPins@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCaptureEnumPins@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GCaptureEnumPins@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCaptureEnumPins@@UEAAPEAXI@Z PROC			; CaptureEnumPins::`scalar deleting destructor', COMDAT
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CaptureEnumPins@@6B@
	mov	rdi, rcx
	mov	ebx, edx
	mov	QWORD PTR [rcx], rax
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	test	bl, 1
	je	SHORT $LN10@scalar@3
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, rdi
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
$LN10@scalar@3:
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCaptureEnumPins@@UEAAPEAXI@Z ENDP			; CaptureEnumPins::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z DD imagerel $LN24
	DD	imagerel $LN24+163
	DD	imagerel $unwind$?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z DD imagerel ?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z
	DD	0ffffffffH
	DD	imagerel ?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z+82
	DD	00H
	DD	imagerel ?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z+125
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z DD 081e11H
	DD	0b641eH
	DD	0a5419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z@4HA
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z
_TEXT	SEGMENT
$T112011 = 32
this$ = 64
$T111961 = 72
ppEnum$ = 72
?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z PROC	; CaptureFilter::EnumPins, COMDAT

; 303  : {

$LN24:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T112011[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+80], rbp
	mov	QWORD PTR [rsp+88], rsi
	mov	rbp, rdx
	mov	rsi, rcx

; 304  :     *ppEnum = new CaptureEnumPins(this, NULL);

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	mov	edx, 32					; 00000020H
	call	QWORD PTR [rax+8]
	mov	rbx, rax
	xor	edi, edi
	mov	QWORD PTR [rax], rdi
	mov	QWORD PTR [rax+8], rdi
	mov	QWORD PTR [rax+16], rdi
	mov	QWORD PTR [rax+24], rdi
	mov	QWORD PTR $T111961[rsp], rax
	test	rax, rax
	je	SHORT $LN3@EnumPins
	lea	rax, OFFSET FLAT:??_7CaptureEnumPins@@6B@
	mov	QWORD PTR [rbx], rax
	mov	DWORD PTR [rbx+8], 1
	mov	QWORD PTR [rbx+16], rsi
	mov	rax, QWORD PTR [rsi]
	mov	rcx, rsi
	call	QWORD PTR [rax+8]
	mov	DWORD PTR [rbx+24], edi
	jmp	SHORT $LN4@EnumPins
$LN3@EnumPins:
	mov	rbx, rdi
$LN4@EnumPins:
	mov	QWORD PTR [rbp], rbx

; 305  :     return (*ppEnum == NULL) ? E_OUTOFMEMORY : NOERROR;

	mov	eax, -2147024882			; ffffffff8007000eH
	test	rbx, rbx
	cmove	edi, eax
	mov	eax, edi

; 306  : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z ENDP	; CaptureFilter::EnumPins
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T112011 = 32
this$ = 64
$T111961 = 72
ppEnum$ = 72
?dtor$0@?0??EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z@4HA PROC ; `CaptureFilter::EnumPins'::`1'::dtor$0
	mov	rcx, QWORD PTR $T111961[rdx]
	jmp	??3@YAXPEAX@Z				; operator delete
?dtor$0@?0??EnumPins@CaptureFilter@@UEAAJPEAPEAUIEnumPins@@@Z@4HA ENDP ; `CaptureFilter::EnumPins'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
pdata	SEGMENT
$pdata$?QueryInterface@CaptureFilter@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN33
	DD	imagerel $LN33+245
	DD	imagerel $unwind$?QueryInterface@CaptureFilter@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryInterface@CaptureFilter@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
xdata	ENDS
;	COMDAT ?QueryInterface@CaptureFilter@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
riid$ = 56
ppv$ = 64
?QueryInterface@CaptureFilter@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CaptureFilter::QueryInterface, COMDAT

; 255  : {

$LN33:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8

; 256  :     if(riid == IID_IUnknown)

	mov	r8, QWORD PTR [rdx]
	lea	r9, OFFSET FLAT:__ImageBase
	mov	rbx, rcx
	cmp	r8, QWORD PTR IID_IUnknown[r9]
	jne	SHORT $LN30@QueryInter@3
	mov	r8, QWORD PTR [rdx+8]
	cmp	r8, QWORD PTR IID_IUnknown[r9+8]
	jne	SHORT $LN30@QueryInter@3
	xor	eax, eax
	jmp	SHORT $LN31@QueryInter@3
$LN30@QueryInter@3:
	sbb	eax, eax
	sbb	eax, -1
$LN31@QueryInter@3:
	test	eax, eax
	jne	SHORT $LN5@QueryInter@3
$LN32@QueryInter@3:

; 257  :     {
; 258  :         AddRef();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]

; 259  :         *ppv = (IUnknown*)this;

	mov	QWORD PTR [rdi], rbx

; 260  :         return NOERROR;

	xor	eax, eax

; 279  :     }
; 280  :     else
; 281  :     {
; 282  :         *ppv = NULL;
; 283  :         return E_NOINTERFACE;
; 284  :     }
; 285  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN5@QueryInter@3:

; 261  :     }
; 262  :     if(riid == IID_IPersist)

	mov	r8, QWORD PTR [rdx]
	cmp	r8, QWORD PTR IID_IPersist[r9]
	jne	SHORT $LN28@QueryInter@3
	mov	r8, QWORD PTR [rdx+8]
	cmp	r8, QWORD PTR IID_IPersist[r9+8]
	jne	SHORT $LN28@QueryInter@3
	xor	eax, eax
	jmp	SHORT $LN29@QueryInter@3
$LN28@QueryInter@3:
	sbb	eax, eax
	sbb	eax, -1
$LN29@QueryInter@3:
	test	eax, eax

; 263  :     {
; 264  :         AddRef();
; 265  :         *ppv = (IPersist*)this;
; 266  :         return NOERROR;

	je	SHORT $LN32@QueryInter@3

; 267  :     }
; 268  :     if(riid == IID_IMediaFilter)

	mov	r8, QWORD PTR [rdx]
	cmp	r8, QWORD PTR IID_IMediaFilter[r9]
	jne	SHORT $LN26@QueryInter@3
	mov	r8, QWORD PTR [rdx+8]
	cmp	r8, QWORD PTR IID_IMediaFilter[r9+8]
	jne	SHORT $LN26@QueryInter@3
	xor	eax, eax
	jmp	SHORT $LN27@QueryInter@3
$LN26@QueryInter@3:
	sbb	eax, eax
	sbb	eax, -1
$LN27@QueryInter@3:
	test	eax, eax

; 269  :     {
; 270  :         AddRef();
; 271  :         *ppv = (IMediaFilter*)this;
; 272  :         return NOERROR;

	je	SHORT $LN32@QueryInter@3

; 273  :     }
; 274  :     if(riid == IID_IBaseFilter)

	mov	rcx, QWORD PTR [rdx]
	cmp	rcx, QWORD PTR IID_IBaseFilter[r9]
	jne	SHORT $LN24@QueryInter@3
	mov	rcx, QWORD PTR [rdx+8]
	cmp	rcx, QWORD PTR IID_IBaseFilter[r9+8]
	jne	SHORT $LN24@QueryInter@3
	xor	eax, eax
	jmp	SHORT $LN25@QueryInter@3
$LN24@QueryInter@3:
	sbb	eax, eax
	sbb	eax, -1
$LN25@QueryInter@3:
	test	eax, eax
	jne	SHORT $LN2@QueryInter@3

; 275  :     {
; 276  :         AddRef();

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+8]

; 277  :         *ppv = (IBaseFilter*)this;

	mov	QWORD PTR [rdi], rbx

; 278  :         return NOERROR;

	xor	eax, eax

; 279  :     }
; 280  :     else
; 281  :     {
; 282  :         *ppv = NULL;
; 283  :         return E_NOINTERFACE;
; 284  :     }
; 285  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@QueryInter@3:
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi], 0
	mov	eax, -2147467262			; ffffffff80004002H
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?QueryInterface@CaptureFilter@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CaptureFilter::QueryInterface
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCaptureFilter@@UEAAPEAXI@Z DD imagerel $LN11
	DD	imagerel $LN11+73
	DD	imagerel $unwind$??_GCaptureFilter@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCaptureFilter@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GCaptureFilter@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCaptureFilter@@UEAAPEAXI@Z PROC			; CaptureFilter::`scalar deleting destructor', COMDAT
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CaptureFilter@@6B@
	mov	rdi, rcx
	mov	ebx, edx
	mov	QWORD PTR [rcx], rax
	mov	rcx, QWORD PTR [rcx+24]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	test	bl, 1
	je	SHORT $LN10@scalar@4
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, rdi
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
$LN10@scalar@4:
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCaptureFilter@@UEAAPEAXI@Z ENDP			; CaptureFilter::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z ; CaptureFilter::CaptureFilter
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z DD imagerel $LN23
	DD	imagerel $LN23+379
	DD	imagerel $unwind$??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z DD imagerel ??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z
	DD	0ffffffffH
	DD	imagerel ??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z+160
	DD	00H
	DD	imagerel ??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z+353
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z DD 081c11H
	DD	0c541cH
	DD	0b3417H
	DD	0c0055209H
	DD	060027003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z@4HA
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z
_TEXT	SEGMENT
$T112152 = 32
$T112103 = 80
this$ = 80
source$ = 88
expectedMajorType$ = 96
expectedMediaType$ = 104
??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z PROC ; CaptureFilter::CaptureFilter, COMDAT

; 244  : {

$LN23:
	push	rsi
	push	rdi
	push	r12
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T112152[rsp], -2
	mov	QWORD PTR [rsp+88], rbx
	mov	QWORD PTR [rsp+96], rbp
	mov	rsi, r9
	mov	rdi, r8
	mov	rbp, rdx
	mov	rbx, rcx
	lea	rax, OFFSET FLAT:??_7CaptureFilter@@6B@
	mov	QWORD PTR [rcx], rax
	xor	r12d, r12d
	mov	QWORD PTR [rcx+8], 1

; 245  :     pin = new CapturePin(this, source, expectedMajorType, expectedMediaType);

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	mov	edx, 168				; 000000a8H
	call	QWORD PTR [rax+8]
	mov	r11, rax
	mov	rcx, rax
	lea	edx, QWORD PTR [r12+2]
	npad	3
$LL22@CaptureFil:
	mov	QWORD PTR [rcx], r12
	mov	QWORD PTR [rcx+8], r12
	mov	QWORD PTR [rcx+16], r12
	add	rcx, 64					; 00000040H
	mov	QWORD PTR [rcx-40], r12
	mov	QWORD PTR [rcx-32], r12
	mov	QWORD PTR [rcx-24], r12
	mov	QWORD PTR [rcx-16], r12
	mov	QWORD PTR [rcx-8], r12
	dec	rdx
	jne	SHORT $LL22@CaptureFil
	mov	QWORD PTR [rcx], r12
	mov	QWORD PTR [rcx+8], r12
	mov	QWORD PTR [rcx+16], r12
	mov	QWORD PTR [rcx+24], r12
	mov	QWORD PTR [rcx+32], r12
	mov	QWORD PTR $T112103[rsp], rax
	test	rax, rax
	je	$LN3@CaptureFil
	lea	rax, OFFSET FLAT:??_7CapturePin@@6BIPin@@@
	mov	QWORD PTR [r11], rax
	lea	rax, OFFSET FLAT:??_7CapturePin@@6BIMemInputPin@@@
	mov	QWORD PTR [r11+8], rax
	mov	DWORD PTR [r11+16], 1
	mov	QWORD PTR [r11+56], rbp
	mov	QWORD PTR [r11+64], rbx
	mov	eax, DWORD PTR [rdi]
	mov	DWORD PTR [r11+72], eax
	mov	eax, DWORD PTR [rdi+4]
	mov	DWORD PTR [r11+76], eax
	mov	eax, DWORD PTR [rdi+8]
	mov	DWORD PTR [r11+80], eax
	mov	eax, DWORD PTR [rdi+12]
	mov	DWORD PTR [r11+84], eax
	mov	eax, DWORD PTR GUID_NULL
	mov	DWORD PTR [r11+88], eax
	mov	eax, DWORD PTR GUID_NULL+4
	mov	DWORD PTR [r11+92], eax
	mov	eax, DWORD PTR GUID_NULL+8
	mov	DWORD PTR [r11+96], eax
	mov	eax, DWORD PTR GUID_NULL+12
	mov	DWORD PTR [r11+100], eax
	mov	QWORD PTR [r11+152], r12
	mov	DWORD PTR [r11+144], r12d
	mov	QWORD PTR [r11+136], r12
	mov	eax, DWORD PTR [rsi]
	mov	DWORD PTR [r11+36], eax
	mov	eax, DWORD PTR [rsi+4]
	mov	DWORD PTR [r11+40], eax
	mov	eax, DWORD PTR [rsi+8]
	mov	DWORD PTR [r11+44], eax
	mov	eax, DWORD PTR [rsi+12]
	mov	DWORD PTR [r11+48], eax
	mov	eax, DWORD PTR [rdi]
	mov	DWORD PTR [r11+20], eax
	mov	eax, DWORD PTR [rdi+4]
	mov	DWORD PTR [r11+24], eax
	mov	eax, DWORD PTR [rdi+8]
	mov	DWORD PTR [r11+28], eax
	mov	eax, DWORD PTR [rdi+12]
	mov	DWORD PTR [r11+32], eax
	jmp	SHORT $LN4@CaptureFil
$LN3@CaptureFil:
	mov	r11, r12
$LN4@CaptureFil:
	mov	QWORD PTR [rbx+24], r11

; 246  : }

	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+88]
	mov	rbp, QWORD PTR [rsp+96]
	add	rsp, 48					; 00000030H
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z ENDP ; CaptureFilter::CaptureFilter
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T112152 = 32
$T112103 = 80
this$ = 80
source$ = 88
expectedMajorType$ = 96
expectedMediaType$ = 104
?dtor$0@?0???0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z@4HA PROC ; `CaptureFilter::CaptureFilter'::`1'::dtor$0
	mov	rcx, QWORD PTR $T112103[rdx]
	jmp	??3@YAXPEAX@Z				; operator delete
?dtor$0@?0???0CaptureFilter@@QEAA@PEAVDeviceSource@@AEBU_GUID@@1@Z@4HA ENDP ; `CaptureFilter::CaptureFilter'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
pdata	SEGMENT
$pdata$?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z DD imagerel $LN23
	DD	imagerel $LN23+18
	DD	imagerel $unwind$?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z DD imagerel $LN23+18
	DD	imagerel $LN23+124
	DD	imagerel $chain$0$?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z DD imagerel $LN23+124
	DD	imagerel $LN23+129
	DD	imagerel $chain$1$?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z DD 021H
	DD	imagerel $LN23
	DD	imagerel $LN23+18
	DD	imagerel $unwind$?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z DD 020521H
	DD	043405H
	DD	imagerel $LN23
	DD	imagerel $LN23+18
	DD	imagerel $unwind$?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
xdata	ENDS
;	COMDAT ?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z
_TEXT	SEGMENT
this$ = 48
pSample$ = 56
?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z PROC	; CapturePin::Receive, COMDAT

; 197  : {

$LN23:
	sub	rsp, 40					; 00000028H

; 198  :     if(pSample)
; 199  :     {
; 200  :         if(expectedMajorType == MEDIATYPE_Video)

	xor	eax, eax
	mov	r9, rcx
	test	rdx, rdx
	je	SHORT $LN1@Receive
	mov	r11, QWORD PTR [rcx+12]
	mov	QWORD PTR [rsp+32], rbx
	lea	rbx, OFFSET FLAT:__ImageBase
	cmp	r11, QWORD PTR MEDIATYPE_Video[rbx]
	jne	SHORT $LN17@Receive
	mov	r11, QWORD PTR [rcx+20]
	cmp	r11, QWORD PTR MEDIATYPE_Video[rbx+8]
	jne	SHORT $LN17@Receive
	mov	ecx, eax
	jmp	SHORT $LN18@Receive
$LN17@Receive:
	sbb	ecx, ecx
	sbb	ecx, -1
$LN18@Receive:
	test	ecx, ecx
	jne	SHORT $LN3@Receive

; 201  :             source->ReceiveMediaSample(pSample, false);

	xor	r8d, r8d

; 202  :         else if(expectedMajorType == MEDIATYPE_Audio)

	jmp	SHORT $LN22@Receive
$LN3@Receive:
	mov	r10, QWORD PTR [r9+12]
	cmp	r10, QWORD PTR MEDIATYPE_Audio[rbx]
	jne	SHORT $LN15@Receive
	mov	r10, QWORD PTR [r9+20]
	cmp	r10, QWORD PTR MEDIATYPE_Audio[rbx+8]
	je	SHORT $LN16@Receive
$LN15@Receive:
	sbb	eax, eax
	sbb	eax, -1
$LN16@Receive:
	test	eax, eax
	jne	SHORT $LN19@Receive

; 203  :             source->ReceiveMediaSample(pSample, true);

	mov	r8b, 1
$LN22@Receive:
	mov	rcx, QWORD PTR [r9+48]
	call	?ReceiveMediaSample@DeviceSource@@AEAAXPEAUIMediaSample@@_N@Z ; DeviceSource::ReceiveMediaSample
$LN19@Receive:

; 204  :     }
; 205  :     return S_OK;

	mov	rbx, QWORD PTR [rsp+32]
	xor	eax, eax
$LN1@Receive:

; 206  : }

	add	rsp, 40					; 00000028H
	ret	0
?Receive@CapturePin@@UEAAJPEAUIMediaSample@@@Z ENDP	; CapturePin::Receive
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z DD imagerel $LN23
	DD	imagerel $LN23+156
	DD	imagerel $unwind$?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z DD imagerel ?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
	DD	0ffffffffH
	DD	imagerel ?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z+78
	DD	00H
	DD	imagerel ?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z+118
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z DD 081e11H
	DD	0b641eH
	DD	0a5419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z@4HA
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z
_TEXT	SEGMENT
$T112256 = 32
this$ = 64
$T112210 = 72
ppEnum$ = 72
?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z PROC ; CapturePin::EnumMediaTypes, COMDAT

; 172  : {

$LN23:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T112256[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+80], rbp
	mov	QWORD PTR [rsp+88], rsi
	mov	rbp, rdx
	mov	rsi, rcx

; 173  :     *ppEnum = new CaptureEnumMediaTypes(this, NULL);

	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	mov	edx, 24
	call	QWORD PTR [rax+8]
	mov	rbx, rax
	xor	edi, edi
	mov	QWORD PTR [rax], rdi
	mov	QWORD PTR [rax+8], rdi
	mov	QWORD PTR [rax+16], rdi
	mov	QWORD PTR $T112210[rsp], rax
	test	rax, rax
	je	SHORT $LN4@EnumMediaT
	lea	rax, OFFSET FLAT:??_7CaptureEnumMediaTypes@@6B@
	mov	QWORD PTR [rbx], rax
	mov	DWORD PTR [rbx+8], 1
	mov	QWORD PTR [rbx+16], rsi
	mov	rax, QWORD PTR [rsi]
	mov	rcx, rsi
	call	QWORD PTR [rax+8]
	jmp	SHORT $LN5@EnumMediaT
$LN4@EnumMediaT:
	mov	rbx, rdi
$LN5@EnumMediaT:
	mov	QWORD PTR [rbp], rbx

; 174  :     if(!*ppEnum)

	mov	eax, -2147024882			; ffffffff8007000eH
	test	rbx, rbx
	cmove	edi, eax
	mov	eax, edi

; 175  :         return E_OUTOFMEMORY;
; 176  : 
; 177  :     return NOERROR;
; 178  : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z ENDP ; CapturePin::EnumMediaTypes
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T112256 = 32
this$ = 64
$T112210 = 72
ppEnum$ = 72
?dtor$0@?0??EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z@4HA PROC ; `CapturePin::EnumMediaTypes'::`1'::dtor$0
	mov	rcx, QWORD PTR $T112210[rdx]
	jmp	??3@YAXPEAX@Z				; operator delete
?dtor$0@?0??EnumMediaTypes@CapturePin@@UEAAJPEAPEAUIEnumMediaTypes@@@Z@4HA ENDP ; `CapturePin::EnumMediaTypes'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
pdata	SEGMENT
$pdata$?QueryPinInfo@CapturePin@@UEAAJPEAU_PinInfo@@@Z DD imagerel $LN13
	DD	imagerel $LN13+183
	DD	imagerel $unwind$?QueryPinInfo@CapturePin@@UEAAJPEAU_PinInfo@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryPinInfo@CapturePin@@UEAAJPEAU_PinInfo@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
xdata	ENDS
;	COMDAT ?QueryPinInfo@CapturePin@@UEAAJPEAU_PinInfo@@@Z
_TEXT	SEGMENT
this$ = 48
pInfo$ = 56
?QueryPinInfo@CapturePin@@UEAAJPEAU_PinInfo@@@Z PROC	; CapturePin::QueryPinInfo, COMDAT

; 137  : {

$LN13:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 138  :     pInfo->pFilter = filter;

	mov	rax, QWORD PTR [rcx+64]
	mov	rbx, rdx
	mov	rdi, rcx
	mov	QWORD PTR [rdx], rax

; 139  :     if(filter) filter->AddRef();

	cmp	QWORD PTR [rcx+64], 0
	je	SHORT $LN3@QueryPinIn
	mov	rcx, QWORD PTR [rcx+64]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN3@QueryPinIn:

; 140  : 
; 141  :     if(expectedMajorType == MEDIATYPE_Video)

	mov	rdx, QWORD PTR [rdi+20]
	lea	rcx, OFFSET FLAT:MEDIATYPE_Video
	xor	r8d, r8d
	cmp	rdx, QWORD PTR [rcx]
	jne	SHORT $LN10@QueryPinIn
	mov	rdx, QWORD PTR [rdi+28]
	cmp	rdx, QWORD PTR [rcx+8]
	jne	SHORT $LN10@QueryPinIn
	mov	eax, r8d
	jmp	SHORT $LN11@QueryPinIn
$LN10@QueryPinIn:
	sbb	eax, eax
	sbb	eax, -1
$LN11@QueryPinIn:
	test	eax, eax
	jne	SHORT $LN2@QueryPinIn

; 142  :         mcpy(pInfo->achName, VIDEO_PIN_NAME, sizeof(VIDEO_PIN_NAME));

	mov	rax, QWORD PTR $SG-319
	mov	QWORD PTR [rbx+12], rax
	mov	rax, QWORD PTR $SG-319+8
	mov	QWORD PTR [rbx+20], rax
	mov	rax, QWORD PTR $SG-319+16
	mov	QWORD PTR [rbx+28], rax
	mov	eax, DWORD PTR $SG-319+24

; 143  :     else

	jmp	SHORT $LN12@QueryPinIn
$LN2@QueryPinIn:

; 144  :         mcpy(pInfo->achName, AUDIO_PIN_NAME, sizeof(AUDIO_PIN_NAME));

	mov	rax, QWORD PTR $SG-320
	mov	QWORD PTR [rbx+12], rax
	mov	rax, QWORD PTR $SG-320+8
	mov	QWORD PTR [rbx+20], rax
	mov	rax, QWORD PTR $SG-320+16
	mov	QWORD PTR [rbx+28], rax
	mov	eax, DWORD PTR $SG-320+24
$LN12@QueryPinIn:
	mov	DWORD PTR [rbx+36], eax

; 145  : 
; 146  :     pInfo->dir = PINDIR_INPUT;

	mov	DWORD PTR [rbx+8], r8d

; 147  : 
; 148  :     return NOERROR;
; 149  : }

	mov	rbx, QWORD PTR [rsp+48]
	xor	eax, eax
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?QueryPinInfo@CapturePin@@UEAAJPEAU_PinInfo@@@Z ENDP	; CapturePin::QueryPinInfo
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
pdata	SEGMENT
$pdata$?QueryInterface@CapturePin@@UEAAJAEBU_GUID@@PEAPEAX@Z DD imagerel $LN29
	DD	imagerel $LN29+215
	DD	imagerel $unwind$?QueryInterface@CapturePin@@UEAAJAEBU_GUID@@PEAPEAX@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryInterface@CapturePin@@UEAAJAEBU_GUID@@PEAPEAX@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
xdata	ENDS
;	COMDAT ?QueryInterface@CapturePin@@UEAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
riid$ = 56
ppv$ = 64
?QueryInterface@CapturePin@@UEAAJAEBU_GUID@@PEAPEAX@Z PROC ; CapturePin::QueryInterface, COMDAT

; 48   : {

$LN29:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8

; 49   :     if(riid == IID_IUnknown || riid == IID_IPin)

	mov	r8, QWORD PTR [rdx]
	lea	r9, OFFSET FLAT:__ImageBase
	mov	rbx, rcx
	cmp	r8, QWORD PTR IID_IUnknown[r9]
	jne	SHORT $LN26@QueryInter@4
	mov	r8, QWORD PTR [rdx+8]
	cmp	r8, QWORD PTR IID_IUnknown[r9+8]
	jne	SHORT $LN26@QueryInter@4
	xor	eax, eax
	jmp	SHORT $LN27@QueryInter@4
$LN26@QueryInter@4:
	sbb	eax, eax
	sbb	eax, -1
$LN27@QueryInter@4:
	test	eax, eax
	je	$LN4@QueryInter@4
	mov	r8, QWORD PTR [rdx]
	cmp	r8, QWORD PTR IID_IPin[r9]
	jne	SHORT $LN24@QueryInter@4
	mov	r8, QWORD PTR [rdx+8]
	cmp	r8, QWORD PTR IID_IPin[r9+8]
	jne	SHORT $LN24@QueryInter@4
	xor	eax, eax
	jmp	SHORT $LN25@QueryInter@4
$LN24@QueryInter@4:
	sbb	eax, eax
	sbb	eax, -1
$LN25@QueryInter@4:
	test	eax, eax
	je	SHORT $LN4@QueryInter@4

; 53   :         return NOERROR;
; 54   :     }
; 55   :     else if(riid == IID_IMemInputPin)

	mov	rcx, QWORD PTR [rdx]
	cmp	rcx, QWORD PTR IID_IMemInputPin[r9]
	jne	SHORT $LN22@QueryInter@4
	mov	rcx, QWORD PTR [rdx+8]
	cmp	rcx, QWORD PTR IID_IMemInputPin[r9+8]
	jne	SHORT $LN22@QueryInter@4
	xor	eax, eax
	jmp	SHORT $LN23@QueryInter@4
$LN22@QueryInter@4:
	sbb	eax, eax
	sbb	eax, -1
$LN23@QueryInter@4:
	test	eax, eax
	jne	SHORT $LN2@QueryInter@4

; 56   :     {
; 57   :         AddRef();

	mov	rax, QWORD PTR [rbx]
	mov	rcx, rbx
	call	QWORD PTR [rax+8]

; 58   :         *ppv = (IMemInputPin*)this;

	lea	r11, QWORD PTR [rbx+8]
	xor	eax, eax
	mov	QWORD PTR [rdi], r11

; 65   :     }
; 66   : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@QueryInter@4:

; 59   :         return NOERROR;
; 60   :     }
; 61   :     else
; 62   :     {
; 63   :         *ppv = NULL;

	mov	QWORD PTR [rdi], 0

; 64   :         return E_NOINTERFACE;

	mov	eax, -2147467262			; ffffffff80004002H

; 65   :     }
; 66   : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@QueryInter@4:

; 50   :     {
; 51   :         AddRef();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]

; 52   :         *ppv = (IPin*)this;

	mov	QWORD PTR [rdi], rbx

; 65   :     }
; 66   : }

	mov	rbx, QWORD PTR [rsp+48]
	xor	eax, eax
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?QueryInterface@CapturePin@@UEAAJAEBU_GUID@@PEAPEAX@Z ENDP ; CapturePin::QueryInterface
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCapturePin@@UEAAPEAXI@Z DD imagerel $LN15
	DD	imagerel $LN15+147
	DD	imagerel $unwind$??_GCapturePin@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCapturePin@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GCapturePin@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCapturePin@@UEAAPEAXI@Z PROC			; CapturePin::`scalar deleting destructor', COMDAT
$LN15:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7CapturePin@@6BIPin@@@
	mov	edi, edx
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	lea	rax, OFFSET FLAT:??_7CapturePin@@6BIMemInputPin@@@
	mov	QWORD PTR [rcx+8], rax
	cmp	DWORD PTR [rcx+144], 0
	je	SHORT $LN7@scalar@5
	mov	rcx, QWORD PTR [rcx+152]
	call	QWORD PTR __imp_CoTaskMemFree
	mov	DWORD PTR [rbx+144], 0
	mov	QWORD PTR [rbx+152], 0
$LN7@scalar@5:
	mov	rcx, QWORD PTR [rbx+136]
	test	rcx, rcx
	je	SHORT $LN6@scalar@5
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	mov	QWORD PTR [rbx+136], 0
$LN6@scalar@5:
	test	dil, 1
	je	SHORT $LN14@scalar@5
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, rbx
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
$LN14@scalar@5:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GCapturePin@@UEAAPEAXI@Z ENDP			; CapturePin::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GSampleData@@QEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+56
	DD	imagerel $unwind$??_GSampleData@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GSampleData@@QEAAPEAXI@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ??_GSampleData@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
??_GSampleData@@QEAAPEAXI@Z PROC			; SampleData::`scalar deleting destructor', COMDAT
$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rbx, rcx
	mov	rcx, QWORD PTR [rax]
	mov	rdx, QWORD PTR [rbx]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	mov	r11, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, rbx
	mov	rcx, QWORD PTR [r11]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GSampleData@@QEAAPEAXI@Z ENDP			; SampleData::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\alloc.h
pdata	SEGMENT
$pdata$?Release@SampleData@@QEAAXXZ DD imagerel $LN17
	DD	imagerel $LN17+64
	DD	imagerel $unwind$?Release@SampleData@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Release@SampleData@@QEAAXXZ DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\devicesource.h
xdata	ENDS
;	COMDAT ?Release@SampleData@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?Release@SampleData@@QEAAXXZ PROC			; SampleData::Release, COMDAT

; 53   :     {

$LN17:
	push	rbx
	sub	rsp, 32					; 00000020H

; 54   :         if(!InterlockedDecrement(&refs))

	lock dec DWORD PTR [rcx+24]
	mov	rbx, rcx
	jne	SHORT $LN15@Release@5

; 55   :             delete this;

	test	rcx, rcx
	je	SHORT $LN15@Release@5
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, QWORD PTR [rbx]
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	mov	r11, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, rbx
	mov	rcx, QWORD PTR [r11]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
$LN15@Release@5:

; 56   :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?Release@SampleData@@QEAAXXZ ENDP			; SampleData::Release
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
_TEXT	ENDS
;	COMDAT !=
_TEXT	SEGMENT
guidOne$ = 8
guidOther$ = 16
!=	PROC						; COMDAT

; 199  :     return !(guidOne == guidOther);

	mov	rax, QWORD PTR [rcx]
	xor	r8d, r8d
	cmp	rax, QWORD PTR [rdx]
	jne	SHORT $LN7@
	mov	rax, QWORD PTR [rcx+8]
	cmp	rax, QWORD PTR [rdx+8]
	jne	SHORT $LN7@
	mov	eax, r8d
	test	eax, eax
	setne	al

; 200  : }

	ret	0
$LN7@:

; 199  :     return !(guidOne == guidOther);

	sbb	eax, eax
	sbb	eax, -1
	test	eax, eax
	setne	al

; 200  : }

	ret	0
!=	ENDP
; Function compile flags: /Odtpy
;	COMDAT ?QueryInterface@CapturePin@@W7EAAJAEBU_GUID@@PEAPEAX@Z
_TEXT	SEGMENT
?QueryInterface@CapturePin@@W7EAAJAEBU_GUID@@PEAPEAX@Z PROC ; [thunk]:CapturePin::QueryInterface`adjustor{8}', COMDAT
	sub	rcx, 8
	jmp	?QueryInterface@CapturePin@@UEAAJAEBU_GUID@@PEAPEAX@Z ; CapturePin::QueryInterface
?QueryInterface@CapturePin@@W7EAAJAEBU_GUID@@PEAPEAX@Z ENDP ; [thunk]:CapturePin::QueryInterface`adjustor{8}'
_TEXT	ENDS
PUBLIC	?IsValidMediaType@CapturePin@@AEBA_NPEBU_AMMediaType@@@Z ; CapturePin::IsValidMediaType
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsValidMediaType@CapturePin@@AEBA_NPEBU_AMMediaType@@@Z DD imagerel $LN31
	DD	imagerel $LN31+147
	DD	imagerel $unwind$?IsValidMediaType@CapturePin@@AEBA_NPEBU_AMMediaType@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsValidMediaType@CapturePin@@AEBA_NPEBU_AMMediaType@@@Z DD 020501H
	DD	013405H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
xdata	ENDS
;	COMDAT ?IsValidMediaType@CapturePin@@AEBA_NPEBU_AMMediaType@@@Z
_TEXT	SEGMENT
this$ = 8
pmt$ = 16
?IsValidMediaType@CapturePin@@AEBA_NPEBU_AMMediaType@@@Z PROC ; CapturePin::IsValidMediaType, COMDAT

; 219  : {

$LN31:
	mov	QWORD PTR [rsp+8], rbx

; 220  :     if(pmt->pbFormat)

	mov	r9, QWORD PTR [rdx+80]
	mov	rbx, rcx
	test	r9, r9
	je	SHORT $LN2@IsValidMed

; 221  :     {
; 222  :         if(pmt->subtype != expectedMediaType || pmt->majortype != expectedMajorType)

	mov	r11, QWORD PTR [rdx+16]
	xor	eax, eax
	cmp	r11, QWORD PTR [rcx+36]
	jne	SHORT $LN29@IsValidMed
	mov	r11, QWORD PTR [rdx+24]
	cmp	r11, QWORD PTR [rcx+44]
	jne	SHORT $LN29@IsValidMed
	mov	ecx, eax
	jmp	SHORT $LN30@IsValidMed
$LN29@IsValidMed:
	sbb	ecx, ecx
	sbb	ecx, -1
$LN30@IsValidMed:
	test	ecx, ecx
	jne	SHORT $LN7@IsValidMed
	mov	r10, QWORD PTR [rdx]
	cmp	r10, QWORD PTR [rbx+20]
	jne	SHORT $LN27@IsValidMed
	mov	r10, QWORD PTR [rdx+8]
	cmp	r10, QWORD PTR [rbx+28]
	jne	SHORT $LN27@IsValidMed
	mov	ecx, eax
	jmp	SHORT $LN28@IsValidMed
$LN27@IsValidMed:
	sbb	ecx, ecx
	sbb	ecx, -1
$LN28@IsValidMed:
	test	ecx, ecx
	jne	SHORT $LN7@IsValidMed

; 223  :             return false;
; 224  : 
; 225  :         if(expectedMajorType == MEDIATYPE_Video)

	mov	rdx, QWORD PTR [rbx+20]
	lea	rcx, OFFSET FLAT:MEDIATYPE_Video
	cmp	rdx, QWORD PTR [rcx]
	jne	SHORT $LN25@IsValidMed
	mov	rdx, QWORD PTR [rbx+28]
	cmp	rdx, QWORD PTR [rcx+8]
	je	SHORT $LN26@IsValidMed
$LN25@IsValidMed:
	sbb	eax, eax
	sbb	eax, -1
$LN26@IsValidMed:
	test	eax, eax
	jne	SHORT $LN2@IsValidMed

; 226  :         {
; 227  :             VIDEOINFOHEADER *pVih = reinterpret_cast<VIDEOINFOHEADER*>(pmt->pbFormat);
; 228  :             if( pVih->bmiHeader.biHeight == 0 ||
; 229  :                 pVih->bmiHeader.biWidth  == 0)

	cmp	DWORD PTR [r9+56], eax
	je	SHORT $LN1@IsValidMed
	cmp	DWORD PTR [r9+52], eax
	jne	SHORT $LN2@IsValidMed
$LN1@IsValidMed:

; 230  :             {
; 231  :                 return false;

	xor	al, al

; 237  : }

	mov	rbx, QWORD PTR [rsp+8]
	ret	0
$LN2@IsValidMed:

; 232  :             }
; 233  :         }
; 234  :     }
; 235  : 
; 236  :     return true;

	mov	al, 1
$LN7@IsValidMed:

; 237  : }

	mov	rbx, QWORD PTR [rsp+8]
	ret	0
?IsValidMediaType@CapturePin@@AEBA_NPEBU_AMMediaType@@@Z ENDP ; CapturePin::IsValidMediaType
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
pdata	SEGMENT
$pdata$?QueryAccept@CapturePin@@UEAAJPEBU_AMMediaType@@@Z DD imagerel $LN47
	DD	imagerel $LN47+247
	DD	imagerel $unwind$?QueryAccept@CapturePin@@UEAAJPEBU_AMMediaType@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?QueryAccept@CapturePin@@UEAAJPEBU_AMMediaType@@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
xdata	ENDS
;	COMDAT ?QueryAccept@CapturePin@@UEAAJPEBU_AMMediaType@@@Z
_TEXT	SEGMENT
this$ = 48
pmt$ = 56
?QueryAccept@CapturePin@@UEAAJPEBU_AMMediaType@@@Z PROC	; CapturePin::QueryAccept, COMDAT

; 154  : {

$LN47:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 155  :     if(filter->state != State_Stopped)

	mov	rax, QWORD PTR [rcx+64]
	mov	rdi, rdx
	mov	rbx, rcx
	cmp	DWORD PTR [rax+12], 0
	je	SHORT $LN4@QueryAccep
$LN46@QueryAccep:

; 156  :         return S_FALSE;

	mov	eax, 1

; 169  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN4@QueryAccep:

; 157  :     if(pmt->majortype != expectedMajorType)

	mov	r8, QWORD PTR [rdx]
	xor	ecx, ecx
	cmp	r8, QWORD PTR [rbx+20]
	jne	SHORT $LN44@QueryAccep
	mov	r8, QWORD PTR [rdx+8]
	cmp	r8, QWORD PTR [rbx+28]
	jne	SHORT $LN44@QueryAccep
	mov	eax, ecx
	jmp	SHORT $LN45@QueryAccep
$LN44@QueryAccep:
	sbb	eax, eax
	sbb	eax, -1
$LN45@QueryAccep:
	test	eax, eax

; 158  :         return S_FALSE;

	jne	SHORT $LN46@QueryAccep

; 159  :     if(!IsValidMediaType(pmt))

	mov	rdx, QWORD PTR [rdx+80]
	test	rdx, rdx
	je	SHORT $LN2@QueryAccep
	mov	r9, QWORD PTR [rdi+16]
	cmp	r9, QWORD PTR [rbx+36]
	jne	SHORT $LN42@QueryAccep
	mov	r9, QWORD PTR [rdi+24]
	cmp	r9, QWORD PTR [rbx+44]
	jne	SHORT $LN42@QueryAccep
	mov	eax, ecx
	jmp	SHORT $LN43@QueryAccep
$LN42@QueryAccep:
	sbb	eax, eax
	sbb	eax, -1
$LN43@QueryAccep:
	test	eax, eax
	jne	SHORT $LN46@QueryAccep
	mov	r9, QWORD PTR [rdi]
	cmp	r9, QWORD PTR [rbx+20]
	jne	SHORT $LN40@QueryAccep
	mov	r9, QWORD PTR [rdi+8]
	cmp	r9, QWORD PTR [rbx+28]
	jne	SHORT $LN40@QueryAccep
	mov	eax, ecx
	jmp	SHORT $LN41@QueryAccep
$LN40@QueryAccep:
	sbb	eax, eax
	sbb	eax, -1
$LN41@QueryAccep:
	test	eax, eax
	jne	SHORT $LN46@QueryAccep
	mov	r8, QWORD PTR [rbx+20]
	lea	rax, OFFSET FLAT:MEDIATYPE_Video
	cmp	r8, QWORD PTR [rax]
	jne	SHORT $LN38@QueryAccep
	mov	r8, QWORD PTR [rbx+28]
	cmp	r8, QWORD PTR [rax+8]
	je	SHORT $LN39@QueryAccep
$LN38@QueryAccep:
	sbb	ecx, ecx
	sbb	ecx, -1
$LN39@QueryAccep:
	test	ecx, ecx
	jne	SHORT $LN2@QueryAccep
	cmp	DWORD PTR [rdx+56], ecx
	je	$LN46@QueryAccep
	cmp	DWORD PTR [rdx+52], ecx

; 160  :         return S_FALSE;

	je	$LN46@QueryAccep
$LN2@QueryAccep:

; 161  : 
; 162  :     if(connectedPin)

	cmp	QWORD PTR [rbx+160], 0
	je	SHORT $LN1@QueryAccep

; 163  :     {
; 164  :         FreeMediaType(connectedMediaType);

	lea	rcx, QWORD PTR [rbx+72]
	call	?FreeMediaType@@YAXAEAU_AMMediaType@@@Z	; FreeMediaType

; 165  :         CopyMediaType(&connectedMediaType, pmt);

	lea	rcx, QWORD PTR [rbx+72]
	mov	rdx, rdi
	call	?CopyMediaType@@YAJPEAU_AMMediaType@@PEBU1@@Z ; CopyMediaType
$LN1@QueryAccep:

; 166  :     }
; 167  : 
; 168  :     return S_OK;

	xor	eax, eax

; 169  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?QueryAccept@CapturePin@@UEAAJPEBU_AMMediaType@@@Z ENDP	; CapturePin::QueryAccept
_TEXT	ENDS
;	COMDAT pdata
; File c:\program files (x86)\windows kits\8.0\include\shared\guiddef.h
pdata	SEGMENT
$pdata$?Connect@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z DD imagerel $LN31
	DD	imagerel $LN31+187
	DD	imagerel $unwind$?Connect@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Connect@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
xdata	ENDS
;	COMDAT ?Connect@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z
_TEXT	SEGMENT
this$ = 48
pReceivePin$ = 56
pmt$ = 64
?Connect@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z PROC ; CapturePin::Connect, COMDAT

; 73   : {

$LN31:
	sub	rsp, 40					; 00000028H

; 74   :     if(filter->state == State_Running)

	mov	rax, QWORD PTR [rcx+64]
	mov	r9, r8
	mov	r10, rcx
	cmp	DWORD PTR [rax+12], 2
	jne	SHORT $LN5@Connect

; 75   :         return VFW_E_NOT_STOPPED;

	mov	eax, -2147220956			; ffffffff80040224H

; 86   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN5@Connect:

; 76   :     if(connectedPin)

	cmp	QWORD PTR [rcx+160], 0
	je	SHORT $LN4@Connect

; 77   :         return VFW_E_ALREADY_CONNECTED;

	mov	eax, -2147220988			; ffffffff80040204H

; 86   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN4@Connect:

; 78   :     if(!pmt)
; 79   :         return S_OK;

	xor	eax, eax
	test	r8, r8
	je	SHORT $LN6@Connect

; 80   :     if(pmt->majortype != GUID_NULL && pmt->majortype != expectedMajorType)

	mov	r8, QWORD PTR [r8]
	lea	rdx, OFFSET FLAT:GUID_NULL
	cmp	r8, QWORD PTR [rdx]
	jne	SHORT $LN28@Connect
	mov	r8, QWORD PTR [r9+8]
	cmp	r8, QWORD PTR [rdx+8]
	jne	SHORT $LN28@Connect
	mov	ecx, eax
	jmp	SHORT $LN29@Connect
$LN28@Connect:
	sbb	ecx, ecx
	sbb	ecx, -1
$LN29@Connect:
	test	ecx, ecx
	je	SHORT $LN2@Connect
	mov	r8, QWORD PTR [r9]
	cmp	r8, QWORD PTR [r10+20]
	jne	SHORT $LN26@Connect
	mov	r8, QWORD PTR [r9+8]
	cmp	r8, QWORD PTR [r10+28]
	jne	SHORT $LN26@Connect
	mov	ecx, eax
	jmp	SHORT $LN27@Connect
$LN26@Connect:
	sbb	ecx, ecx
	sbb	ecx, -1
$LN27@Connect:
	test	ecx, ecx
	je	SHORT $LN2@Connect
$LN30@Connect:

; 81   :         return S_FALSE;

	mov	eax, 1

; 86   : }

	add	rsp, 40					; 00000028H
	ret	0
$LN2@Connect:

; 82   :     if(pmt->majortype == expectedMajorType && !IsValidMediaType(pmt))

	mov	r8, QWORD PTR [r9]
	cmp	r8, QWORD PTR [r10+20]
	jne	SHORT $LN24@Connect
	mov	r8, QWORD PTR [r9+8]
	cmp	r8, QWORD PTR [r10+28]
	je	SHORT $LN25@Connect
$LN24@Connect:
	sbb	eax, eax
	sbb	eax, -1
$LN25@Connect:
	test	eax, eax
	jne	SHORT $LN1@Connect
	mov	rdx, r9
	mov	rcx, r10
	call	?IsValidMediaType@CapturePin@@AEBA_NPEBU_AMMediaType@@@Z ; CapturePin::IsValidMediaType
	test	al, al

; 83   :         return S_FALSE;

	je	SHORT $LN30@Connect
$LN1@Connect:

; 84   : 
; 85   :     return S_OK;

	xor	eax, eax
$LN6@Connect:

; 86   : }

	add	rsp, 40					; 00000028H
	ret	0
?Connect@CapturePin@@UEAAJPEAUIPin@@PEBU_AMMediaType@@@Z ENDP ; CapturePin::Connect
_TEXT	ENDS
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\obsapi\utility\alloc.h
pdata	SEGMENT
$pdata$?FlushSamples@DeviceSource@@AEAAXXZ DD imagerel $LN49
	DD	imagerel $LN49+36
	DD	imagerel $unwind$?FlushSamples@DeviceSource@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?FlushSamples@DeviceSource@@AEAAXXZ DD imagerel $LN49+36
	DD	imagerel $LN49+114
	DD	imagerel $chain$0$?FlushSamples@DeviceSource@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?FlushSamples@DeviceSource@@AEAAXXZ DD imagerel $LN49+114
	DD	imagerel $LN49+259
	DD	imagerel $chain$1$?FlushSamples@DeviceSource@@AEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?FlushSamples@DeviceSource@@AEAAXXZ DD 021H
	DD	imagerel $LN49
	DD	imagerel $LN49+36
	DD	imagerel $unwind$?FlushSamples@DeviceSource@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?FlushSamples@DeviceSource@@AEAAXXZ DD 020521H
	DD	066405H
	DD	imagerel $LN49
	DD	imagerel $LN49+36
	DD	imagerel $unwind$?FlushSamples@DeviceSource@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FlushSamples@DeviceSource@@AEAAXXZ DD 040a01H
	DD	07340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\devicesource.h
xdata	ENDS
;	COMDAT ?FlushSamples@DeviceSource@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?FlushSamples@DeviceSource@@AEAAXXZ PROC		; DeviceSource::FlushSamples, COMDAT

; 183  :     {

$LN49:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 184  :         OSEnterMutex(hSampleMutex);

	mov	rcx, QWORD PTR [rcx+336]
	call	QWORD PTR __imp_?OSEnterMutex@@YAXPEAX@Z

; 185  :         for (UINT i=0; i<samples.Num(); i++)

	xor	edi, edi
	cmp	edi, DWORD PTR [rbx+376]
	jae	SHORT $LN2@FlushSampl
	mov	QWORD PTR [rsp+48], rsi

; 186  :             delete samples[i];

$LN11@FlushSampl:
	mov	rax, QWORD PTR [rbx+368]
	mov	rsi, QWORD PTR [rax+rdi*8]
	lea	r11, QWORD PTR [rax+rdi*8]
	test	rsi, rsi
	je	SHORT $LN3@FlushSampl
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, QWORD PTR [rsi]
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	mov	r11, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, rsi
	mov	rcx, QWORD PTR [r11]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
$LN3@FlushSampl:

; 185  :         for (UINT i=0; i<samples.Num(); i++)

	inc	edi
	cmp	edi, DWORD PTR [rbx+376]
	jb	SHORT $LN11@FlushSampl
	mov	rsi, QWORD PTR [rsp+48]
$LN2@FlushSampl:

; 187  :         samples.Clear();

	mov	rdx, QWORD PTR [rbx+368]
	test	rdx, rdx
	je	SHORT $LN25@FlushSampl
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	mov	QWORD PTR [rbx+368], 0
	mov	DWORD PTR [rbx+376], 0
$LN25@FlushSampl:

; 188  :         SafeRelease(latestVideoSample);

	mov	rdi, QWORD PTR [rbx+360]
	test	rdi, rdi
	je	SHORT $LN1@FlushSampl
	lock dec DWORD PTR [rdi+24]
	jne	SHORT $LN44@FlushSampl
	test	rdi, rdi
	je	SHORT $LN44@FlushSampl
	mov	rax, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, QWORD PTR [rdi]
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	mov	r11, QWORD PTR __imp_?MainAllocator@@3PEAVAlloc@@EA
	mov	rdx, rdi
	mov	rcx, QWORD PTR [r11]
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
$LN44@FlushSampl:
	mov	QWORD PTR [rbx+360], 0
$LN1@FlushSampl:

; 189  :         OSLeaveMutex(hSampleMutex);

	mov	rcx, QWORD PTR [rbx+336]

; 190  :     }

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	rex_jmp	QWORD PTR __imp_?OSLeaveMutex@@YAXPEAX@Z
?FlushSamples@DeviceSource@@AEAAXXZ ENDP		; DeviceSource::FlushSamples
;	COMDAT pdata
; File c:\users\beeanyew\documents\github\obs\dshowaudioplugin\capturefilter.cpp
pdata	SEGMENT
$pdata$?EndFlush@CapturePin@@UEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?EndFlush@CapturePin@@UEAAJXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EndFlush@CapturePin@@UEAAJXZ DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT ?EndFlush@CapturePin@@UEAAJXZ
_TEXT	SEGMENT
this$ = 48
?EndFlush@CapturePin@@UEAAJXZ PROC			; CapturePin::EndFlush, COMDAT

; 184  : {

$LN3:
	sub	rsp, 40					; 00000028H

; 185  :     source->FlushSamples();

	mov	rcx, QWORD PTR [rcx+56]
	call	?FlushSamples@DeviceSource@@AEAAXXZ	; DeviceSource::FlushSamples

; 186  :     return S_OK;

	xor	eax, eax

; 187  : }

	add	rsp, 40					; 00000028H
	ret	0
?EndFlush@CapturePin@@UEAAJXZ ENDP			; CapturePin::EndFlush
END
